binary-debuggable-source
0000 0000 f main.asm
0000 0000 s CR              .EQU     0DH
0000 0000 s LF              .EQU     0AH
0000 0000 s 
0000 0000 s oldStackPointer	.EQU	89F0H		;Old Stack Location 	
0000 0000 s originalBC		.EQU	89F2H		;BC before manipulation, used for calculating board position
0000 0000 s 
9000 9000 s 	.ORG 9000H
9000 9000 d ed73f089
9000 9000 s 			ld		(oldStackPointer), SP
9004 9004 d 31ffff
9004 9004 s 			ld		sp,0FFFFH
9007 9007 d 3e0e
9007 9007 s 			ld		a, initPacx		;set Pacman Pos
9009 9009 d 320081
9009 9009 s 			ld		(pacx),a
900c 900c d 3e0e
900c 900c s 			ld		a, initPacy
900e 900e d 320181
900e 900e s 			ld		(pacy),a
9011 9011 d 3e44
9011 9011 s 			ld		a, 'D'			;Set start direction
9013 9013 d 320281
9013 9013 s 			ld		(pacCDir),A
9016 9016 d 320381
9016 9016 s 			ld		(pacNDir),A
9019 9019 d 210000
9019 9019 s 			ld		HL, 0H
901c 901c d 220089
901c 901c s 			LD		(score), HL
901f 901f d 3e00
901f 901f s 			ld		a,0
9021 9021 d 320481
9021 9021 s 			ld		(pPActive),A
9024 9024 d cd7c91
9024 9024 s 			CALL	initGhost
9027 9027 d cd7597
9027 9027 s 			CALL	initMap
902a 902a d 21e799
902a 902a s 			LD		HL, cls			;Clear screen
902d 902d d cd9499
902d 902d s 			CALL	print
9030 9030 d 21ef99
9030 9030 s 			LD		HL, hideCursor	;Hide Cursor
9033 9033 d cd9499
9033 9033 s 			CALL	print
9036 9036 d cdc897
9036 9036 s 			call 	printMap
9039 9039 s gameLoop:		
9039 9039 d cd7590
9039 9039 s 			call	input
903c 903c d cde290
903c 903c s 			call 	getMove
903f 903f d cd8f90
903f 903f s 			call 	clearPM
9042 9042 d cd2691
9042 9042 s 			call	movePM
9045 9045 d cd9b90
9045 9045 s 			call 	printPM
9048 9048 d cdc290
9048 9048 s 			call	eatPellet
904b 904b s 			
904b 904b d cd2098
904b 904b s 			call	initPathFind
904e 904e d cd3898
904e 904e s 			call	calculatePathMap
9051 9051 s 
9051 9051 d cd4891
9051 9051 s 			call	ghostNextMove
9054 9054 d cd5591
9054 9054 s 			call	clearGhost
9057 9057 d cd6f91
9057 9057 s 			call	colideGhost
905a 905a d cd8991
905a 905a s 			call	moveGhost
905d 905d d cd6291
905d 905d s 			call	printGhost
9060 9060 s 
9060 9060 d cd6f91
9060 9060 s 			call	colideGhost
9063 9063 s 
9063 9063 s 
9063 9063 s 			;call 	printPFMap
9063 9063 s 			
9063 9063 d cdfb98
9063 9063 s 			call 	printScore
9066 9066 d 060f
9066 9066 s 			LD 		B,0FH   ;delay
9068 9068 d 0eff
9068 9068 s 			LD		C,0FFH
906a 906a d cd9f99
906a 906a s 			CALL 	DELAY
906d 906d d c33990
906d 906d s 			JP		gameLoop
9070 9070 d ed7bf089
9070 9070 s 			LD		SP,(oldStackPointer)
9074 9074 d c9
9074 9074 s 			ret
9075 9075 s 		
9075 9075 s ;-------------- Input --------------------------					
9075 9075 s include input.asm	
9075 9075 f input.asm
9075 9075 s input:
9075 9075 d df
9075 9075 s 				RST		18H
9076 9076 d c8
9076 9076 s 				RET		Z
9077 9077 d d7
9077 9077 s 				RST		10H
9078 9078 d e6df
9078 9078 s 				AND     11011111b       ; lower to uppercase
907a 907a d fe57
907a 907a s 				CP		'W'
907c 907c d 280d
907c 907c s 				JR		Z,validInput
907e 907e d fe41
907e 907e s 				CP		'A'
9080 9080 d 2809
9080 9080 s 				JR		Z,validInput
9082 9082 d fe53
9082 9082 s 				CP		'S'
9084 9084 d 2805
9084 9084 s 				JR		Z,validInput
9086 9086 d fe44
9086 9086 s 				CP		'D'
9088 9088 d 2801
9088 9088 s 				JR		Z,validInput
908a 908a d c9
908a 908a s 				RET
908b 908b s validInput:		
908b 908b d 320381
908b 908b s 				LD		(pacNDir), A
908e 908e f main.asm
908e 908e d c9
908e 908e s 				RET
908f 908f s ;----------Pacman------;
908f 908f s include	pacman.asm
908f 908f f pacman.asm
908f 908f s ;Packman
908f 908f s pacx			.EQU	8100H
908f 908f s pacy			.EQU	8101H
908f 908f s pacCDir			.EQU	8102H		;Pacmans current direction
908f 908f s pacNDir			.EQU	8103H		;Pacman next direction (from key press)
908f 908f s 
908f 908f s initPacx		.EQU	14
908f 908f s initPacy		.EQU	14
908f 908f s 
908f 908f s pPelletTics     .EQU    20H         ;Power Pellet last time
908f 908f s 
908f 908f s pPActive        .EQU    8104H       ;Power Pellet Timer
908f 908f s 
908f 908f s clearPM:
908f 908f d 3a0081
908f 908f s 				LD		A, (pacx)		;Push X to stack
9092 9092 d 4f
9092 9092 s 				LD		C,A
9093 9093 d 3a0181
9093 9093 s 				LD		A, (pacy)		;Push Y to stack
9096 9096 d 47
9096 9096 s 				LD		B,A
9097 9097 d cdb197
9097 9097 s 				CALL 	printMapAt
909a 909a d c9
909a 909a s 				RET
909b 909b s 				
909b 909b s printPM:
909b 909b d 3a0081
909b 909b s 				LD		A, (pacx)		;Push X to stack
909e 909e d 3c
909e 909e s 				INC		A
909f 909f d 6f
909f 909f s 				LD		L,A
90a0 90a0 d 2600
90a0 90a0 s 				LD		H, $00			;We dont care about msb
90a2 90a2 d e5
90a2 90a2 s 				PUSH	HL
90a3 90a3 d 3a0181
90a3 90a3 s 				LD		A, (pacy)		;Push Y to stack
90a6 90a6 d 3c
90a6 90a6 s 				INC		A
90a7 90a7 d 6f
90a7 90a7 s 				LD		L,A
90a8 90a8 d 2600
90a8 90a8 s 				LD		H, $00			;Again we dont care
90aa 90aa d e5
90aa 90aa s 				PUSH	HL
90ab 90ab d cd2299
90ab 90ab s 				CALL	moveCursor
90ae 90ae d 21da99
90ae 90ae s 				LD		HL, pacman
90b1 90b1 d cd9499
90b1 90b1 s 				CALL 	print
90b4 90b4 d c9
90b4 90b4 s 				RET
90b5 90b5 s getPMMapData:	
90b5 90b5 d 3a0081
90b5 90b5 s 				LD		A, (pacx)
90b8 90b8 d 4f
90b8 90b8 s 				LD		C,A
90b9 90b9 d 3a0181
90b9 90b9 s 				LD		A, (pacy)
90bc 90bc d 47
90bc 90bc s 				LD		B,A
90bd 90bd d cd8197
90bd 90bd s 				CALL	getMapAddress
90c0 90c0 d 7e
90c0 90c0 s                 LD      A,(HL)
90c1 90c1 d c9
90c1 90c1 s 				ret
90c2 90c2 s eatPellet:		;Eat pellet at packman location
90c2 90c2 d cdb590
90c2 90c2 s 				CALL 	getPMMapData
90c5 90c5 d cb6f
90c5 90c5 s 				BIT		pelletBit,A
90c7 90c7 d 2005
90c7 90c7 s 				JR		NZ,eatSPellet
90c9 90c9 d cb67
90c9 90c9 s                 BIT		powerPBit,A
90cb 90cb d 200d
90cb 90cb s 				JR		NZ,eatPPellet
90cd 90cd d c9
90cd 90cd s 				RET
90ce 90ce s 				
90ce 90ce s eatSPellet:		
90ce 90ce d e5
90ce 90ce s 				PUSH	HL		
90cf 90cf d 2a0089
90cf 90cf s 				LD		HL,(score)
90d2 90d2 d 23
90d2 90d2 s 				INC		HL
90d3 90d3 d 220089
90d3 90d3 s 				LD		(score),HL
90d6 90d6 d e1
90d6 90d6 s 				POP		HL
90d7 90d7 d cbae
90d7 90d7 s 				RES		pelletBit,(HL)
90d9 90d9 d c9
90d9 90d9 s 				RET
90da 90da s 
90da 90da s eatPPellet:		
90da 90da d 3e20
90da 90da s 				LD      A,pPelletTics
90dc 90dc d 320481
90dc 90dc s                 LD      (pPActive),A
90df 90df d cba6
90df 90df s                 RES		powerPBit,(HL)
90e1 90e1 d c9
90e1 90e1 s 				RET
90e2 90e2 s 				
90e2 90e2 s getMove:		;Sets the current move var
90e2 90e2 d cdb590
90e2 90e2 s 				CALL	getPMMapData
90e5 90e5 d 57
90e5 90e5 s 				LD		D,A
90e6 90e6 d 3a0381
90e6 90e6 s 				LD		A,(pacNDir)			;Is the next move valid
90e9 90e9 d cd5b97
90e9 90e9 s 				CALL	isMoveValid
90ec 90ec d 2009
90ec 90ec s 				JR		NZ,nextMoveValid
90ee 90ee d 3a0281
90ee 90ee s 				LD		A,(pacCDir)			;Is the current move valid
90f1 90f1 d cd5b97
90f1 90f1 s 				CALL	isMoveValid
90f4 90f4 d c0
90f4 90f4 s 				RET		NZ
90f5 90f5 d 1807
90f5 90f5 s 				JR		calcNextMove
90f7 90f7 s 				
90f7 90f7 s nextMoveValid:
90f7 90f7 d 320281
90f7 90f7 s 				LD		(pacCDir),A
90fa 90fa d 320381
90fa 90fa s 				LD		(pacNDir),A
90fd 90fd d c9
90fd 90fd s 				RET
90fe 90fe s 				
90fe 90fe s calcNextMove:	
90fe 90fe d fe41
90fe 90fe s 				CP		'A'
9100 9100 d 2814
9100 9100 s 				JR		Z,checkV
9102 9102 d fe44
9102 9102 s 				CP		'D'
9104 9104 d 2810
9104 9104 s 				JR		Z,checkV
9106 9106 d 1800
9106 9106 s 				JR		checkH
9108 9108 s checkH:
9108 9108 d 3e41
9108 9108 s 				LD		A,'A'
910a 910a d cd5b97
910a 910a s 				CALL	isMoveValid
910d 910d d 20e8
910d 910d s 				JR		NZ,nextMoveValid
910f 910f d 3e44
910f 910f s 				LD		A,'D'
9111 9111 d cd5b97
9111 9111 s 				CALL	isMoveValid
9114 9114 d 20e1
9114 9114 s 				JR		NZ,nextMoveValid
9116 9116 s checkV:
9116 9116 d 3e57
9116 9116 s 				LD		A,'W'
9118 9118 d cd5b97
9118 9118 s 				CALL	isMoveValid
911b 911b d 20da
911b 911b s 				JR		NZ,nextMoveValid
911d 911d d 3e53
911d 911d s 				LD		A,'S'
911f 911f d cd5b97
911f 911f s 				CALL	isMoveValid
9122 9122 d 20d3
9122 9122 s 				JR		NZ,nextMoveValid
9124 9124 d 18e2
9124 9124 s 				JR		checkH
9126 9126 s ;Move
9126 9126 s movePM:
9126 9126 d 3a0481
9126 9126 s 				LD      A,(pPActive)
9129 9129 d b7
9129 9129 s                 OR      A
912a 912a d ca3191
912a 912a s                 JP      Z,movePMA
912d 912d d 3d
912d 912d s                 DEC     A
912e 912e d 320481
912e 912e s                 LD      (pPActive),A
9131 9131 d 3a0281
9131 9131 s movePMA:        LD		A,(pacCDir)
9134 9134 d 110081
9134 9134 s 				LD		DE,pacx
9137 9137 d 010181
9137 9137 s 				LD		BC,pacy
913a 913a d c33597
913a 913a s 				JP		move
913d 913d s 
913d 913d s killPacman:
913d 913d d 21f699
913d 913d s                 LD		HL, showCursor	;Hide Cursor
9140 9140 d cd9499
9140 9140 s 			    CALL	print
9143 9143 d ed7bf089
9143 9143 s                 LD		SP,(oldStackPointer)
9147 9147 f main.asm
9147 9147 d c9
9147 9147 s 				ret	
9148 9148 s ;------------Ghost
9148 9148 s include ghosts.asm
9148 9148 f ghosts.asm
9148 9148 s ghostDis		.EQU	8113H		;ghost move distance from pacman
9148 9148 s caughtJaleTime  .EQU    20H
9148 9148 s 
9148 9148 s ghostNextMove:
9148 9148 d cd8392
9148 9148 s                 CALL    rGhostNextMove
914b 914b d cdc793
914b 914b s                 CALL    oGhostNextMove
914e 914e d cd0b95
914e 914e s                 CALL    pGhostNextMove
9151 9151 d cd4f96
9151 9151 s                 CALL    tGhostNextMove
9154 9154 d c9
9154 9154 s                 RET
9155 9155 s clearGhost:
9155 9155 d cd0f92
9155 9155 s                 CALL    rGhostClear
9158 9158 d cd5393
9158 9158 s                 CALL    oGhostClear
915b 915b d cd9794
915b 915b s                 CALL    pGhostClear
915e 915e d cddb95
915e 915e s                 CALL    tGhostClear
9161 9161 d c9
9161 9161 s                 RET
9162 9162 s printGhost:
9162 9162 d cd1b92
9162 9162 s                 CALL    rGhostPrint
9165 9165 d cd5f93
9165 9165 s                 CALL    oGhostPrint
9168 9168 d cda394
9168 9168 s                 CALL    pGhostPrint
916b 916b d cde795
916b 916b s                 CALL    tGhostPrint
916e 916e d c9
916e 916e s                 RET
916f 916f s colideGhost:
916f 916f d cd1193
916f 916f s                 CALL    rGhostColide
9172 9172 d cd5594
9172 9172 s                 CALL    oGhostColide
9175 9175 d cd9995
9175 9175 s                 CALL    pGhostColide
9178 9178 d cddd96
9178 9178 s                 CALL    tGhostColide
917b 917b d c9
917b 917b s                 RET
917c 917c s initGhost:
917c 917c d cd4992
917c 917c s                 CALL    rGhostInit
917f 917f d cd8d93
917f 917f s                 CALL    oGhostInit
9182 9182 d cdd194
9182 9182 s                 CALL    pGhostInit
9185 9185 d cd1596
9185 9185 s                 CALL    tGhostInit
9188 9188 d c9
9188 9188 s                 RET
9189 9189 s moveGhost:
9189 9189 d cd5992
9189 9189 s                 CALL    rGhostMove
918c 918c d cd9d93
918c 918c s                 CALL    oGhostMove
918f 918f d cde194
918f 918f s                 CALL    pGhostMove
9192 9192 d cd2596
9192 9192 s                 CALL    tGhostMove
9195 9195 d c9
9195 9195 s                 RET
9196 9196 s 
9196 9196 s printSGhost:
9196 9196 d cb47
9196 9196 s                 BIT     0,A
9198 9198 d caa291
9198 9198 s                 JP      Z,sGhost1Print
919b 919b d 211f97
919b 919b s                 LD		HL, sGhost0
919e 919e d cd9499
919e 919e s 				CALL 	print
91a1 91a1 d c9
91a1 91a1 s 				RET
91a2 91a2 s sGhost1Print:
91a2 91a2 d 212a97
91a2 91a2 s                 LD		HL, sGhost1
91a5 91a5 d cd9499
91a5 91a5 s 				CALL 	print
91a8 91a8 d c9
91a8 91a8 s 				RET
91a9 91a9 s 
91a9 91a9 s ghostMove:
91a9 91a9 d fe57
91a9 91a9 s 				CP		'W'
91ab 91ab d 280a
91ab 91ab s 				JR		Z,ghostMoveU
91ad 91ad d fe41
91ad 91ad s 				CP		'A'
91af 91af d 2820
91af 91af s 				JR		Z,ghostMoveL
91b1 91b1 d fe53
91b1 91b1 s 				CP		'S'
91b3 91b3 d 280f
91b3 91b3 s 				JR		Z,ghostMoveD
91b5 91b5 d 1827
91b5 91b5 s 				JR		ghostMoveR
91b7 91b7 s 
91b7 91b7 s ghostMoveU:			
91b7 91b7 d 1a
91b7 91b7 s 				LD      A, (DE)
91b8 91b8 d 6f
91b8 91b8 s                 LD      L,A         ;ld x
91b9 91b9 d 0a
91b9 91b9 s                 LD		A, (BC)
91ba 91ba d 3d
91ba 91ba s 				DEC		A
91bb 91bb d e61f
91bb 91bb s 				AND		00011111B
91bd 91bd d 67
91bd 91bd s                 LD      H,A         ;ld y
91be 91be d cdeb91
91be 91be s                 CALL    ghostCheckStack
91c1 91c1 d c8
91c1 91c1 s                 RET     Z
91c2 91c2 d 02
91c2 91c2 s 				LD		(BC),A
91c3 91c3 d c9
91c3 91c3 s 				RET
91c4 91c4 s ghostMoveD:		
91c4 91c4 d 1a
91c4 91c4 s 	            LD      A, (DE)
91c5 91c5 d 6f
91c5 91c5 s                 LD      L,A         ;ld x
91c6 91c6 d 0a
91c6 91c6 s 				LD		A, (BC)
91c7 91c7 d 3c
91c7 91c7 s 				INC		A
91c8 91c8 d e61f
91c8 91c8 s 				AND		00011111B
91ca 91ca d 67
91ca 91ca s                 LD      H,A         ;ld y
91cb 91cb d cdeb91
91cb 91cb s                 CALL    ghostCheckStack
91ce 91ce d c8
91ce 91ce s                 RET     Z
91cf 91cf d 02
91cf 91cf s 				LD		(BC),A
91d0 91d0 d c9
91d0 91d0 s 				RET
91d1 91d1 s ghostMoveL:		
91d1 91d1 d 0a
91d1 91d1 s                 LD      A, (BC)
91d2 91d2 d 67
91d2 91d2 s                 LD      H,A         ;ld y
91d3 91d3 d 1a
91d3 91d3 s 				LD		A, (DE)
91d4 91d4 d 3d
91d4 91d4 s 				DEC		A
91d5 91d5 d e61f
91d5 91d5 s 				AND		00011111B
91d7 91d7 d 6f
91d7 91d7 s                 LD      L,A         ;ld x
91d8 91d8 d cdeb91
91d8 91d8 s                 CALL    ghostCheckStack
91db 91db d c8
91db 91db s                 RET     Z
91dc 91dc d 12
91dc 91dc s 				LD		(DE),A
91dd 91dd d c9
91dd 91dd s 				RET
91de 91de s ghostMoveR:		
91de 91de d 0a
91de 91de s                 LD      A, (BC)
91df 91df d 67
91df 91df s                 LD      H,A         ;ld y
91e0 91e0 d 1a
91e0 91e0 s 				LD		A, (DE)
91e1 91e1 d 3c
91e1 91e1 s 				INC		A
91e2 91e2 d e61f
91e2 91e2 s 				AND		00011111B
91e4 91e4 d 6f
91e4 91e4 s                 LD      L,A         ;ld x
91e5 91e5 d cdeb91
91e5 91e5 s                 CALL    ghostCheckStack
91e8 91e8 d c8
91e8 91e8 s                 RET     Z
91e9 91e9 d 12
91e9 91e9 s 				LD		(DE),A
91ea 91ea d c9
91ea 91ea s 				RET
91eb 91eb s ghostCheckStack:
91eb 91eb d f5
91eb 91eb s                 PUSH   AF
91ec 91ec d c5
91ec 91ec s                 PUSH   BC
91ed 91ed d d5
91ed 91ed s                 PUSH   DE
91ee 91ee d cd3a93
91ee 91ee s                 CALL   rGhostStack
91f1 91f1 d ca0a92
91f1 91f1 s                 JP     Z,ghostDoStack
91f4 91f4 d cd7e94
91f4 91f4 s                 CALL   oGhostStack
91f7 91f7 d ca0a92
91f7 91f7 s                 JP     Z,ghostDoStack
91fa 91fa d cdc295
91fa 91fa s                 CALL   pGhostStack
91fd 91fd d ca0a92
91fd 91fd s                 JP     Z,ghostDoStack
9200 9200 d cd0697
9200 9200 s                 CALL   tGhostStack
9203 9203 d ca0a92
9203 9203 s                 JP     Z,ghostDoStack
9206 9206 d d1
9206 9206 s                 POP    DE
9207 9207 d c1
9207 9207 s                 POP    BC
9208 9208 d f1
9208 9208 s                 POP    AF
9209 9209 d c9
9209 9209 s                 RET
920a 920a s ghostDoStack:   
920a 920a d d1
920a 920a s                 POP    DE
920b 920b d c1
920b 920b s                 POP    BC
920c 920c d f1
920c 920c s                 POP    AF
920d 920d d f1
920d 920d s                 POP    AF
920e 920e d c9
920e 920e s                 RET
920f 920f s                 
920f 920f s include ghosts/red.asm
920f 920f f ghosts/red.asm
920f 920f s rGhostInitX	    .EQU	15
920f 920f s rGhostInitY	    .EQU	8
920f 920f s rGhostInitTimer .EQU    10H
920f 920f s rGhostStoreX	.EQU	14
920f 920f s rGhostStoreY	.EQU	11
920f 920f s 
920f 920f s rGhostX		    .EQU	8110H		
920f 920f s rGhostY		    .EQU	8111H
920f 920f s rGhostDir		.EQU	8112H
920f 920f s rGhostTimer     .EQU    8115H
920f 920f s 
920f 920f s rGhostClear:
920f 920f d 3a1081
920f 920f s 				LD		A, (rGhostX)		;Push X to stack
9212 9212 d 4f
9212 9212 s 				LD		C,A
9213 9213 d 3a1181
9213 9213 s 				LD		A, (rGhostY)		;Push Y to stack
9216 9216 d 47
9216 9216 s 				LD		B,A
9217 9217 d cdb197
9217 9217 s 				CALL 	printMapAt
921a 921a d c9
921a 921a s 				RET
921b 921b s 				
921b 921b s rGhostPrint:
921b 921b d 3a1081
921b 921b s 				LD		A, (rGhostX)		;Push X to stack
921e 921e d 3c
921e 921e s 				INC		A
921f 921f d 6f
921f 921f s 				LD		L,A
9220 9220 d 2600
9220 9220 s 				LD		H, $00			;We dont care about msb
9222 9222 d e5
9222 9222 s 				PUSH	HL
9223 9223 d 3a1181
9223 9223 s 				LD		A, (rGhostY)		;Push Y to stack
9226 9226 d 3c
9226 9226 s 				INC		A
9227 9227 d 6f
9227 9227 s 				LD		L,A
9228 9228 d 2600
9228 9228 s 				LD		H, $00			;Again we dont care
922a 922a d e5
922a 922a s 				PUSH	HL
922b 922b d cd2299
922b 922b s 				CALL	moveCursor
922e 922e d 3a0481
922e 922e s                 LD      A,(pPActive)
9231 9231 d b7
9231 9231 s                 OR      A
9232 9232 d c29691
9232 9232 s                 JP      NZ, printSGhost
9235 9235 d 214893
9235 9235 s 				LD		HL, rGhost
9238 9238 d cd9499
9238 9238 s 				CALL 	print
923b 923b d c9
923b 923b s 				RET
923c 923c s rGhostMapData:	
923c 923c d 3a1081
923c 923c s 				LD		A, (rGhostX)
923f 923f d 4f
923f 923f s 				LD		C,A
9240 9240 d 3a1181
9240 9240 s 				LD		A, (rGhostY)
9243 9243 d 47
9243 9243 s 				LD		B,A
9244 9244 d cd8197
9244 9244 s 				CALL	getMapAddress
9247 9247 d 7e
9247 9247 s                 LD      A,(HL)
9248 9248 d c9
9248 9248 s 				ret
9249 9249 s 
9249 9249 s 
9249 9249 s rGhostInit:   
9249 9249 d 3e0e
9249 9249 s                 LD		a, rGhostStoreX	;set rGhost Pos
924b 924b d 321081
924b 924b s 			    LD		(rGhostX),a
924e 924e d 3e0b
924e 924e s 			    LD		a, rGhostStoreY
9250 9250 d 321181
9250 9250 s 			    LD		(rGhostY),a
9253 9253 d 3e10
9253 9253 s                 LD		a, rGhostInitTimer
9255 9255 d 321581
9255 9255 s 			    LD		(rGhostTimer),a
9258 9258 d c9
9258 9258 s                 RET
9259 9259 s 
9259 9259 s rGhostMove:
9259 9259 d 3a1581
9259 9259 s                 LD      A,(rGhostTimer)     ;Dont move if the ghost is in jale
925c 925c d b7
925c 925c s                 OR      A                
925d 925d d c27292
925d 925d s                 JP      NZ,rGhostDecTimer   ;Decrement the timer if its x
9260 9260 d 3a0481
9260 9260 s                 LD      A,(pPActive)
9263 9263 d cb47
9263 9263 s                 BIT     0,A                 ;Move every other tick, bit 0 will always 0 when the power pellet isnt active
9265 9265 d c0
9265 9265 s                 RET     NZ
9266 9266 d 3a1281
9266 9266 s 				LD		A,(rGhostDir)
9269 9269 d 111081
9269 9269 s 				LD		DE,rGhostX
926c 926c d 011181
926c 926c s 				LD		BC,rGhostY
926f 926f d c3a991
926f 926f s 				JP		ghostMove
9272 9272 s 
9272 9272 s 
9272 9272 s rGhostDecTimer:
9272 9272 d 3d
9272 9272 s                 DEC     A
9273 9273 d 321581
9273 9273 s                 LD      (rGhostTimer),A
9276 9276 d b7
9276 9276 s                 OR      A
9277 9277 d c0
9277 9277 s                 RET     NZ              ;IF Zero move ghost out of jale
9278 9278 d 3e0f
9278 9278 s                 LD		a, rGhostInitX	;set rGhost Pos
927a 927a d 321081
927a 927a s 			    LD		(rGhostX),a
927d 927d d 3e08
927d 927d s 			    LD		a, rGhostInitY
927f 927f d 321181
927f 927f s 			    LD		(rGhostY),a
9282 9282 d c9
9282 9282 s                 RET
9283 9283 s 
9283 9283 s rGhostNextMove:
9283 9283 d 3eff
9283 9283 s 				LD		A, 0FFH
9285 9285 d 321381
9285 9285 s 				LD		(ghostDis),A
9288 9288 d cd3c92
9288 9288 s 				CALL	rGhostMapData
928b 928b d 57
928b 928b s 				LD		D,A
928c 928c d 3e57
928c 928c s 				LD		A,	'W'			;check up
928e 928e d cd5b97
928e 928e s 				CALL	isMoveValid
9291 9291 d c4ad92
9291 9291 s 				CALL	NZ,rGhostCheckU
9294 9294 d 3e53
9294 9294 s 				LD		A,	'S'			;down
9296 9296 d cd5b97
9296 9296 s 				CALL	isMoveValid
9299 9299 d c4bb92
9299 9299 s 				CALL	NZ,rGhostCheckD
929c 929c d 3e41
929c 929c s 				LD		A,	'A'			;left
929e 929e d cd5b97
929e 929e s 				CALL	isMoveValid
92a1 92a1 d c4c992
92a1 92a1 s 				CALL	NZ,rGhostCheckL
92a4 92a4 d 3e44
92a4 92a4 s 				LD		A,	'D'			;right
92a6 92a6 d cd5b97
92a6 92a6 s 				CALL	isMoveValid
92a9 92a9 d c4d792
92a9 92a9 s 				CALL	NZ,rGhostCheckR
92ac 92ac d c9
92ac 92ac s 				RET
92ad 92ad s 				
92ad 92ad s rGhostCheckU:	
92ad 92ad d f5
92ad 92ad s 				PUSH	AF
92ae 92ae d 3a1181
92ae 92ae s 				LD		A, (rGhostY)
92b1 92b1 d 3d
92b1 92b1 s 				DEC		A
92b2 92b2 d e61f
92b2 92b2 s 				AND		00011111B
92b4 92b4 d 47
92b4 92b4 s 				LD		B,A
92b5 92b5 d 3a1081
92b5 92b5 s 				LD		A,(rGhostX)
92b8 92b8 d 4f
92b8 92b8 s 				LD		C,A
92b9 92b9 d 182a
92b9 92b9 s 				JR		rGhostPathFind
92bb 92bb s rGhostCheckD:			
92bb 92bb d f5
92bb 92bb s 				PUSH	AF
92bc 92bc d 3a1181
92bc 92bc s 				LD		A, (rGhostY)
92bf 92bf d 3c
92bf 92bf s 				INC		A
92c0 92c0 d e61f
92c0 92c0 s 				AND		00011111B
92c2 92c2 d 47
92c2 92c2 s 				LD		B,A
92c3 92c3 d 3a1081
92c3 92c3 s 				LD		A,(rGhostX)
92c6 92c6 d 4f
92c6 92c6 s 				LD		C,A
92c7 92c7 d 181c
92c7 92c7 s 				JR		rGhostPathFind
92c9 92c9 s rGhostCheckL:		
92c9 92c9 d f5
92c9 92c9 s 				PUSH	AF	
92ca 92ca d 3a1081
92ca 92ca s 				LD		A, (rGhostX)
92cd 92cd d 3d
92cd 92cd s 				DEC		A
92ce 92ce d e61f
92ce 92ce s 				AND		00011111B
92d0 92d0 d 4f
92d0 92d0 s 				LD		C,A
92d1 92d1 d 3a1181
92d1 92d1 s 				LD		A,(rGhostY)
92d4 92d4 d 47
92d4 92d4 s 				LD		B,A
92d5 92d5 d 180e
92d5 92d5 s 				JR		rGhostPathFind
92d7 92d7 s rGhostCheckR:
92d7 92d7 d f5
92d7 92d7 s 				PUSH	AF	
92d8 92d8 d 3a1081
92d8 92d8 s 				LD		A, (rGhostX)
92db 92db d 3c
92db 92db s 				INC		A
92dc 92dc d e61f
92dc 92dc s 				AND		00011111B
92de 92de d 4f
92de 92de s 				LD		C,A
92df 92df d 3a1181
92df 92df s 				LD		A,(rGhostY)
92e2 92e2 d 47
92e2 92e2 s 				LD		B,A
92e3 92e3 d 1800
92e3 92e3 s 				JR		rGhostPathFind
92e5 92e5 s 
92e5 92e5 s rGhostPathFind:
92e5 92e5 d cd9997
92e5 92e5 s 				CALL	getAddressPF
92e8 92e8 d 3a1381
92e8 92e8 s 				LD		A,(ghostDis)
92eb 92eb d 5e
92eb 92eb s 				LD		E,(HL)
92ec 92ec d bb
92ec 92ec s 				CP		E
92ed 92ed d f5
92ed 92ed s                 PUSH    AF
92ee 92ee d 3a0481
92ee 92ee s                 LD      A,(pPActive)            ;Check power pellet is not activ, if it is, run away
92f1 92f1 d b7
92f1 92f1 s                 OR      A
92f2 92f2 d c2fc92
92f2 92f2 s                 JP      NZ,rGhostPFPP
92f5 92f5 d f1
92f5 92f5 s                 POP     AF
92f6 92f6 d d20893
92f6 92f6 s 				JP		NC,rGhostSetNewDir
92f9 92f9 d f1
92f9 92f9 s                 POP     AF
92fa 92fa d f1
92fa 92fa s 				POP		AF
92fb 92fb d c9
92fb 92fb s 				RET
92fc 92fc s rGhostPFPP:
92fc 92fc d f1
92fc 92fc s                 POP     AF
92fd 92fd d da0893
92fd 92fd s                 JP		C,rGhostSetNewDir
9300 9300 d feff
9300 9300 s                 CP      0FFH
9302 9302 d ca0893
9302 9302 s                 JP      Z,rGhostSetNewDir
9305 9305 d f1
9305 9305 s                 POP     AF
9306 9306 d f1
9306 9306 s 				POP		AF
9307 9307 d c9
9307 9307 s                 RET
9308 9308 s 
9308 9308 s rGhostSetNewDir:
9308 9308 d 7b
9308 9308 s 				LD		A,E
9309 9309 d 321381
9309 9309 s 				LD		(ghostDis),A
930c 930c d f1
930c 930c s 				POP		AF
930d 930d d 321281
930d 930d s 				LD		(rGhostDir),A
9310 9310 d c9
9310 9310 s 				RET
9311 9311 s 
9311 9311 s rGhostColide:   
9311 9311 d 3a0081
9311 9311 s                 LD      A,(pacx)                ;Compair X
9314 9314 d 47
9314 9314 s                 LD      B,A
9315 9315 d 3a1081
9315 9315 s                 LD      A,(rGhostX)
9318 9318 d b8
9318 9318 s                 CP      B
9319 9319 d c0
9319 9319 s                 RET     NZ
931a 931a d 3a0181
931a 931a s                 LD      A,(pacy)                ;Compair Y
931d 931d d 47
931d 931d s                 LD      B,A
931e 931e d 3a1181
931e 931e s                 LD      A,(rGhostY)
9321 9321 d b8
9321 9321 s                 CP      B
9322 9322 d c0
9322 9322 s                 RET     NZ
9323 9323 d 3a0481
9323 9323 s                 LD      A,(pPActive)              ;Colishion Happened
9326 9326 d b7
9326 9326 s                 OR      A
9327 9327 d ca3d91
9327 9327 s                 JP      Z,killPacman               ;If power pellet not active, run genric deth lib
932a 932a d 3e0e
932a 932a s                 LD		a, rGhostStoreX	           ;set rGhost Pos
932c 932c d 321081
932c 932c s 			    LD		(rGhostX),a
932f 932f d 3e0b
932f 932f s 			    LD		a, rGhostStoreY
9331 9331 d 321181
9331 9331 s 			    LD		(rGhostY),a
9334 9334 d 3e10
9334 9334 s                 LD		a, rGhostInitTimer
9336 9336 d 321581
9336 9336 s 			    LD		(rGhostTimer),a
9339 9339 d c9
9339 9339 s                 RET
933a 933a s ;x = l
933a 933a s ;y = h
933a 933a s rGhostStack:
933a 933a d 7d
933a 933a s 				LD      A,L               		;Compair X
933b 933b d 47
933b 933b s                 LD      B,A
933c 933c d 3a1081
933c 933c s                 LD      A,(rGhostX)
933f 933f d b8
933f 933f s                 CP      B
9340 9340 d c0
9340 9340 s                 RET     NZ
9341 9341 d 7c
9341 9341 s                 LD      A,h                		;Compair Y
9342 9342 d 47
9342 9342 s                 LD      B,A
9343 9343 d 3a1181
9343 9343 s                 LD      A,(rGhostY)
9346 9346 d b8
9346 9346 s                 CP      B
9347 9347 d c9
9347 9347 s                 RET
9348 9348 s 
9348 9348 f ghosts.asm
9348 9348 d 1b5b39316d4d1b5b306d00
9348 9348 s rGhost:		.BYTE	1BH,"[91mM",1BH,"[0m",0
9353 9353 s include ghosts/orange.asm
9353 9353 f ghosts/orange.asm
9353 9353 s oGhostInitX	    .EQU	15
9353 9353 s oGhostInitY	    .EQU	8
9353 9353 s oGhostInitTimer .EQU    20H
9353 9353 s oGhostStoreX	.EQU	15
9353 9353 s oGhostStoreY	.EQU	11
9353 9353 s 
9353 9353 s oGhostX		    .EQU	8120H		
9353 9353 s oGhostY		    .EQU	8121H
9353 9353 s oGhostDir		.EQU	8122H
9353 9353 s oGhostTimer     .EQU    8125H
9353 9353 s 
9353 9353 s oGhostClear:
9353 9353 d 3a2081
9353 9353 s 				LD		A, (oGhostX)		;Push X to stack
9356 9356 d 4f
9356 9356 s 				LD		C,A
9357 9357 d 3a2181
9357 9357 s 				LD		A, (oGhostY)		;Push Y to stack
935a 935a d 47
935a 935a s 				LD		B,A
935b 935b d cdb197
935b 935b s 				CALL 	printMapAt
935e 935e d c9
935e 935e s 				RET
935f 935f s 				
935f 935f s oGhostPrint:
935f 935f d 3a2081
935f 935f s 				LD		A, (oGhostX)		;Push X to stack
9362 9362 d 3c
9362 9362 s 				INC		A
9363 9363 d 6f
9363 9363 s 				LD		L,A
9364 9364 d 2600
9364 9364 s 				LD		H, $00			;We dont care about msb
9366 9366 d e5
9366 9366 s 				PUSH	HL
9367 9367 d 3a2181
9367 9367 s 				LD		A, (oGhostY)		;Push Y to stack
936a 936a d 3c
936a 936a s 				INC		A
936b 936b d 6f
936b 936b s 				LD		L,A
936c 936c d 2600
936c 936c s 				LD		H, $00			;Again we dont care
936e 936e d e5
936e 936e s 				PUSH	HL
936f 936f d cd2299
936f 936f s 				CALL	moveCursor
9372 9372 d 3a0481
9372 9372 s                 LD      A,(pPActive)
9375 9375 d b7
9375 9375 s                 OR      A
9376 9376 d c29691
9376 9376 s                 JP      NZ, printSGhost
9379 9379 d 218c94
9379 9379 s 				LD		HL, oGhost
937c 937c d cd9499
937c 937c s 				CALL 	print
937f 937f d c9
937f 937f s 				RET
9380 9380 s oGhostMapData:	
9380 9380 d 3a2081
9380 9380 s 				LD		A, (oGhostX)
9383 9383 d 4f
9383 9383 s 				LD		C,A
9384 9384 d 3a2181
9384 9384 s 				LD		A, (oGhostY)
9387 9387 d 47
9387 9387 s 				LD		B,A
9388 9388 d cd8197
9388 9388 s 				CALL	getMapAddress
938b 938b d 7e
938b 938b s                 LD      A,(HL)
938c 938c d c9
938c 938c s 				ret
938d 938d s 
938d 938d s 
938d 938d s oGhostInit:   
938d 938d d 3e0f
938d 938d s                 LD		a, oGhostStoreX	;set oGhost Pos
938f 938f d 322081
938f 938f s 			    LD		(oGhostX),a
9392 9392 d 3e0b
9392 9392 s 			    LD		a, oGhostStoreY
9394 9394 d 322181
9394 9394 s 			    LD		(oGhostY),a
9397 9397 d 3e20
9397 9397 s                 LD		a, oGhostInitTimer
9399 9399 d 322581
9399 9399 s 			    LD		(oGhostTimer),a
939c 939c d c9
939c 939c s                 RET
939d 939d s 
939d 939d s oGhostMove:
939d 939d d 3a2581
939d 939d s                 LD      A,(oGhostTimer)     ;Dont move if the ghost is in jale
93a0 93a0 d b7
93a0 93a0 s                 OR      A                
93a1 93a1 d c2b693
93a1 93a1 s                 JP      NZ,oGhostDecTimer   ;Decrement the timer if its x
93a4 93a4 d 3a0481
93a4 93a4 s                 LD      A,(pPActive)
93a7 93a7 d cb47
93a7 93a7 s                 BIT     0,A                 ;Move every other tick, bit 0 will always 0 when the power pellet isnt active
93a9 93a9 d c0
93a9 93a9 s                 RET     NZ
93aa 93aa d 3a2281
93aa 93aa s 				LD		A,(oGhostDir)
93ad 93ad d 112081
93ad 93ad s 				LD		DE,oGhostX
93b0 93b0 d 012181
93b0 93b0 s 				LD		BC,oGhostY
93b3 93b3 d c3a991
93b3 93b3 s 				JP		ghostMove
93b6 93b6 s 
93b6 93b6 s oGhostDecTimer:
93b6 93b6 d 3d
93b6 93b6 s                 DEC     A
93b7 93b7 d 322581
93b7 93b7 s                 LD      (oGhostTimer),A
93ba 93ba d b7
93ba 93ba s                 OR      A
93bb 93bb d c0
93bb 93bb s                 RET     NZ              ;IF Zero move ghost out of jale
93bc 93bc d 3e0f
93bc 93bc s                 LD		a, oGhostInitX	;set oGhost Pos
93be 93be d 322081
93be 93be s 			    LD		(oGhostX),a
93c1 93c1 d 3e08
93c1 93c1 s 			    LD		a, oGhostInitY
93c3 93c3 d 322181
93c3 93c3 s 			    LD		(oGhostY),a
93c6 93c6 d c9
93c6 93c6 s                 RET
93c7 93c7 s 
93c7 93c7 s oGhostNextMove:
93c7 93c7 d 3eff
93c7 93c7 s 				LD		A, 0FFH
93c9 93c9 d 321381
93c9 93c9 s 				LD		(ghostDis),A
93cc 93cc d cd8093
93cc 93cc s 				CALL	oGhostMapData
93cf 93cf d 57
93cf 93cf s 				LD		D,A
93d0 93d0 d 3e57
93d0 93d0 s 				LD		A,	'W'			;check up
93d2 93d2 d cd5b97
93d2 93d2 s 				CALL	isMoveValid
93d5 93d5 d c4f193
93d5 93d5 s 				CALL	NZ,oGhostCheckU
93d8 93d8 d 3e53
93d8 93d8 s 				LD		A,	'S'			;down
93da 93da d cd5b97
93da 93da s 				CALL	isMoveValid
93dd 93dd d c4ff93
93dd 93dd s 				CALL	NZ,oGhostCheckD
93e0 93e0 d 3e41
93e0 93e0 s 				LD		A,	'A'			;left
93e2 93e2 d cd5b97
93e2 93e2 s 				CALL	isMoveValid
93e5 93e5 d c40d94
93e5 93e5 s 				CALL	NZ,oGhostCheckL
93e8 93e8 d 3e44
93e8 93e8 s 				LD		A,	'D'			;right
93ea 93ea d cd5b97
93ea 93ea s 				CALL	isMoveValid
93ed 93ed d c41b94
93ed 93ed s 				CALL	NZ,oGhostCheckR
93f0 93f0 d c9
93f0 93f0 s 				RET
93f1 93f1 s 				
93f1 93f1 s oGhostCheckU:	
93f1 93f1 d f5
93f1 93f1 s 				PUSH	AF
93f2 93f2 d 3a2181
93f2 93f2 s 				LD		A, (oGhostY)
93f5 93f5 d 3d
93f5 93f5 s 				DEC		A
93f6 93f6 d e61f
93f6 93f6 s 				AND		00011111B
93f8 93f8 d 47
93f8 93f8 s 				LD		B,A
93f9 93f9 d 3a2081
93f9 93f9 s 				LD		A,(oGhostX)
93fc 93fc d 4f
93fc 93fc s 				LD		C,A
93fd 93fd d 182a
93fd 93fd s 				JR		oGhostPathFind
93ff 93ff s oGhostCheckD:			
93ff 93ff d f5
93ff 93ff s 				PUSH	AF
9400 9400 d 3a2181
9400 9400 s 				LD		A, (oGhostY)
9403 9403 d 3c
9403 9403 s 				INC		A
9404 9404 d e61f
9404 9404 s 				AND		00011111B
9406 9406 d 47
9406 9406 s 				LD		B,A
9407 9407 d 3a2081
9407 9407 s 				LD		A,(oGhostX)
940a 940a d 4f
940a 940a s 				LD		C,A
940b 940b d 181c
940b 940b s 				JR		oGhostPathFind
940d 940d s oGhostCheckL:		
940d 940d d f5
940d 940d s 				PUSH	AF	
940e 940e d 3a2081
940e 940e s 				LD		A, (oGhostX)
9411 9411 d 3d
9411 9411 s 				DEC		A
9412 9412 d e61f
9412 9412 s 				AND		00011111B
9414 9414 d 4f
9414 9414 s 				LD		C,A
9415 9415 d 3a2181
9415 9415 s 				LD		A,(oGhostY)
9418 9418 d 47
9418 9418 s 				LD		B,A
9419 9419 d 180e
9419 9419 s 				JR		oGhostPathFind
941b 941b s oGhostCheckR:
941b 941b d f5
941b 941b s 				PUSH	AF	
941c 941c d 3a2081
941c 941c s 				LD		A, (oGhostX)
941f 941f d 3c
941f 941f s 				INC		A
9420 9420 d e61f
9420 9420 s 				AND		00011111B
9422 9422 d 4f
9422 9422 s 				LD		C,A
9423 9423 d 3a2181
9423 9423 s 				LD		A,(oGhostY)
9426 9426 d 47
9426 9426 s 				LD		B,A
9427 9427 d 1800
9427 9427 s 				JR		oGhostPathFind
9429 9429 s 
9429 9429 s oGhostPathFind:
9429 9429 d cd9997
9429 9429 s 				CALL	getAddressPF
942c 942c d 3a1381
942c 942c s 				LD		A,(ghostDis)
942f 942f d 5e
942f 942f s 				LD		E,(HL)
9430 9430 d bb
9430 9430 s 				CP		E
9431 9431 d f5
9431 9431 s                 PUSH    AF
9432 9432 d 3a0481
9432 9432 s                 LD      A,(pPActive)            ;Check power pellet is not activ, if it is, run away
9435 9435 d b7
9435 9435 s                 OR      A
9436 9436 d c24094
9436 9436 s                 JP      NZ,oGhostPFPP
9439 9439 d f1
9439 9439 s                 POP     AF
943a 943a d d24c94
943a 943a s 				JP		NC,oGhostSetNewDir
943d 943d d f1
943d 943d s                 POP     AF
943e 943e d f1
943e 943e s 				POP		AF
943f 943f d c9
943f 943f s 				RET
9440 9440 s oGhostPFPP:
9440 9440 d f1
9440 9440 s                 POP     AF
9441 9441 d da4c94
9441 9441 s                 JP		C,oGhostSetNewDir
9444 9444 d feff
9444 9444 s                 CP      0FFH
9446 9446 d ca4c94
9446 9446 s                 JP      Z,oGhostSetNewDir
9449 9449 d f1
9449 9449 s                 POP     AF
944a 944a d f1
944a 944a s 				POP		AF
944b 944b d c9
944b 944b s                 RET
944c 944c s 
944c 944c s oGhostSetNewDir:
944c 944c d 7b
944c 944c s 				LD		A,E
944d 944d d 321381
944d 944d s 				LD		(ghostDis),A
9450 9450 d f1
9450 9450 s 				POP		AF
9451 9451 d 322281
9451 9451 s 				LD		(oGhostDir),A
9454 9454 d c9
9454 9454 s 				RET
9455 9455 s 
9455 9455 s oGhostColide:   
9455 9455 d 3a0081
9455 9455 s                 LD      A,(pacx)                ;Compair X
9458 9458 s 				;CALL	NumToHex
9458 9458 d 47
9458 9458 s                 LD      B,A
9459 9459 d 3a2081
9459 9459 s                 LD      A,(oGhostX)
945c 945c s 				;CALL	NumToHex
945c 945c d b8
945c 945c s                 CP      B
945d 945d d c0
945d 945d s                 RET     NZ
945e 945e d 3a0181
945e 945e s                 LD      A,(pacy)                ;Compair Y
9461 9461 s 				;CALL	NumToHex
9461 9461 d 47
9461 9461 s                 LD      B,A
9462 9462 d 3a2181
9462 9462 s                 LD      A,(oGhostY)
9465 9465 s 				;CALL	NumToHex
9465 9465 d b8
9465 9465 s                 CP      B
9466 9466 d c0
9466 9466 s                 RET     NZ
9467 9467 d 3a0481
9467 9467 s                 LD      A,(pPActive)              ;Colishion Happened
946a 946a d b7
946a 946a s                 OR      A
946b 946b d ca3d91
946b 946b s                 JP      Z,killPacman               ;If power pellet not active, run genric deth lib
946e 946e d 3e0f
946e 946e s                 LD		a, oGhostStoreX	           ;set oGhost Pos
9470 9470 d 322081
9470 9470 s 			    LD		(oGhostX),a
9473 9473 d 3e0b
9473 9473 s 			    LD		a, oGhostStoreY
9475 9475 d 322181
9475 9475 s 			    LD		(oGhostY),a
9478 9478 d 3e20
9478 9478 s                 LD		a, oGhostInitTimer
947a 947a d 322581
947a 947a s 			    LD		(oGhostTimer),a
947d 947d d c9
947d 947d s                 RET
947e 947e s ;x = l
947e 947e s ;y = h
947e 947e s oGhostStack:
947e 947e d 7d
947e 947e s 				LD      A,L               		;Compair X
947f 947f d 47
947f 947f s                 LD      B,A
9480 9480 d 3a2081
9480 9480 s                 LD      A,(oGhostX)
9483 9483 d b8
9483 9483 s                 CP      B
9484 9484 d c0
9484 9484 s                 RET     NZ
9485 9485 d 7c
9485 9485 s                 LD      A,h                		;Compair Y
9486 9486 d 47
9486 9486 s                 LD      B,A
9487 9487 d 3a2181
9487 9487 s                 LD      A,(oGhostY)
948a 948a d b8
948a 948a s                 CP      B
948b 948b d c9
948b 948b s                 RET
948c 948c s 
948c 948c f ghosts.asm
948c 948c d 1b5b33336d4d1b5b306d00
948c 948c s oGhost:		.BYTE	1BH,"[33mM",1BH,"[0m",0
9497 9497 s include ghosts/pink.asm
9497 9497 f ghosts/pink.asm
9497 9497 s pGhostInitX	    .EQU	15
9497 9497 s pGhostInitY	    .EQU	8
9497 9497 s pGhostInitTimer .EQU    30H
9497 9497 s pGhostStoreX	.EQU	16
9497 9497 s pGhostStoreY	.EQU	11
9497 9497 s 
9497 9497 s pGhostX		    .EQU	8130H		
9497 9497 s pGhostY		    .EQU	8131H
9497 9497 s pGhostDir		.EQU	8132H
9497 9497 s pGhostTimer     .EQU    8135H
9497 9497 s 
9497 9497 s pGhostClear:
9497 9497 d 3a3081
9497 9497 s 				LD		A, (pGhostX)		;Push X to stack
949a 949a d 4f
949a 949a s 				LD		C,A
949b 949b d 3a3181
949b 949b s 				LD		A, (pGhostY)		;Push Y to stack
949e 949e d 47
949e 949e s 				LD		B,A
949f 949f d cdb197
949f 949f s 				CALL 	printMapAt
94a2 94a2 d c9
94a2 94a2 s 				RET
94a3 94a3 s 				
94a3 94a3 s pGhostPrint:
94a3 94a3 d 3a3081
94a3 94a3 s 				LD		A, (pGhostX)		;Push X to stack
94a6 94a6 d 3c
94a6 94a6 s 				INC		A
94a7 94a7 d 6f
94a7 94a7 s 				LD		L,A
94a8 94a8 d 2600
94a8 94a8 s 				LD		H, $00			;We dont care about msb
94aa 94aa d e5
94aa 94aa s 				PUSH	HL
94ab 94ab d 3a3181
94ab 94ab s 				LD		A, (pGhostY)		;Push Y to stack
94ae 94ae d 3c
94ae 94ae s 				INC		A
94af 94af d 6f
94af 94af s 				LD		L,A
94b0 94b0 d 2600
94b0 94b0 s 				LD		H, $00			;Again we dont care
94b2 94b2 d e5
94b2 94b2 s 				PUSH	HL
94b3 94b3 d cd2299
94b3 94b3 s 				CALL	moveCursor
94b6 94b6 d 3a0481
94b6 94b6 s                 LD      A,(pPActive)
94b9 94b9 d b7
94b9 94b9 s                 OR      A
94ba 94ba d c29691
94ba 94ba s                 JP      NZ, printSGhost
94bd 94bd d 21d095
94bd 94bd s 				LD		HL, pGhost
94c0 94c0 d cd9499
94c0 94c0 s 				CALL 	print
94c3 94c3 d c9
94c3 94c3 s 				RET
94c4 94c4 s pGhostMapData:	
94c4 94c4 d 3a3081
94c4 94c4 s 				LD		A, (pGhostX)
94c7 94c7 d 4f
94c7 94c7 s 				LD		C,A
94c8 94c8 d 3a3181
94c8 94c8 s 				LD		A, (pGhostY)
94cb 94cb d 47
94cb 94cb s 				LD		B,A
94cc 94cc d cd8197
94cc 94cc s 				CALL	getMapAddress
94cf 94cf d 7e
94cf 94cf s                 LD      A,(HL)
94d0 94d0 d c9
94d0 94d0 s 				ret
94d1 94d1 s 
94d1 94d1 s 
94d1 94d1 s pGhostInit:   
94d1 94d1 d 3e10
94d1 94d1 s                 LD		a, pGhostStoreX	;set pGhost Pos
94d3 94d3 d 323081
94d3 94d3 s 			    LD		(pGhostX),a
94d6 94d6 d 3e0b
94d6 94d6 s 			    LD		a, pGhostStoreY
94d8 94d8 d 323181
94d8 94d8 s 			    LD		(pGhostY),a
94db 94db d 3e30
94db 94db s                 LD		a, pGhostInitTimer
94dd 94dd d 323581
94dd 94dd s 			    LD		(pGhostTimer),a
94e0 94e0 d c9
94e0 94e0 s                 RET
94e1 94e1 s 
94e1 94e1 s pGhostMove:
94e1 94e1 d 3a3581
94e1 94e1 s                 LD      A,(pGhostTimer)     ;Dont move if the ghost is in jale
94e4 94e4 d b7
94e4 94e4 s                 OR      A                
94e5 94e5 d c2fa94
94e5 94e5 s                 JP      NZ,pGhostDecTimer   ;Decrement the timer if its x
94e8 94e8 d 3a0481
94e8 94e8 s                 LD      A,(pPActive)
94eb 94eb d cb47
94eb 94eb s                 BIT     0,A                 ;Move every other tick, bit 0 will always 0 when the power pellet isnt active
94ed 94ed d c0
94ed 94ed s                 RET     NZ
94ee 94ee d 3a3281
94ee 94ee s 				LD		A,(pGhostDir)
94f1 94f1 d 113081
94f1 94f1 s 				LD		DE,pGhostX
94f4 94f4 d 013181
94f4 94f4 s 				LD		BC,pGhostY
94f7 94f7 d c3a991
94f7 94f7 s 				JP		ghostMove
94fa 94fa s 
94fa 94fa s 
94fa 94fa s pGhostDecTimer:
94fa 94fa d 3d
94fa 94fa s                 DEC     A
94fb 94fb d 323581
94fb 94fb s                 LD      (pGhostTimer),A
94fe 94fe d b7
94fe 94fe s                 OR      A
94ff 94ff d c0
94ff 94ff s                 RET     NZ              ;IF Zero move ghost out of jale
9500 9500 d 3e0f
9500 9500 s                 LD		a, pGhostInitX	;set pGhost Pos
9502 9502 d 323081
9502 9502 s 			    LD		(pGhostX),a
9505 9505 d 3e08
9505 9505 s 			    LD		a, pGhostInitY
9507 9507 d 323181
9507 9507 s 			    LD		(pGhostY),a
950a 950a d c9
950a 950a s                 RET
950b 950b s 
950b 950b s pGhostNextMove:
950b 950b d 3eff
950b 950b s 				LD		A, 0FFH
950d 950d d 321381
950d 950d s 				LD		(ghostDis),A
9510 9510 d cdc494
9510 9510 s 				CALL	pGhostMapData
9513 9513 d 57
9513 9513 s 				LD		D,A
9514 9514 d 3e57
9514 9514 s 				LD		A,	'W'			;check up
9516 9516 d cd5b97
9516 9516 s 				CALL	isMoveValid
9519 9519 d c43595
9519 9519 s 				CALL	NZ,pGhostCheckU
951c 951c d 3e53
951c 951c s 				LD		A,	'S'			;down
951e 951e d cd5b97
951e 951e s 				CALL	isMoveValid
9521 9521 d c44395
9521 9521 s 				CALL	NZ,pGhostCheckD
9524 9524 d 3e41
9524 9524 s 				LD		A,	'A'			;left
9526 9526 d cd5b97
9526 9526 s 				CALL	isMoveValid
9529 9529 d c45195
9529 9529 s 				CALL	NZ,pGhostCheckL
952c 952c d 3e44
952c 952c s 				LD		A,	'D'			;right
952e 952e d cd5b97
952e 952e s 				CALL	isMoveValid
9531 9531 d c45f95
9531 9531 s 				CALL	NZ,pGhostCheckR
9534 9534 d c9
9534 9534 s 				RET
9535 9535 s 				
9535 9535 s pGhostCheckU:	
9535 9535 d f5
9535 9535 s 				PUSH	AF
9536 9536 d 3a3181
9536 9536 s 				LD		A, (pGhostY)
9539 9539 d 3d
9539 9539 s 				DEC		A
953a 953a d e61f
953a 953a s 				AND		00011111B
953c 953c d 47
953c 953c s 				LD		B,A
953d 953d d 3a3081
953d 953d s 				LD		A,(pGhostX)
9540 9540 d 4f
9540 9540 s 				LD		C,A
9541 9541 d 182a
9541 9541 s 				JR		pGhostPathFind
9543 9543 s pGhostCheckD:			
9543 9543 d f5
9543 9543 s 				PUSH	AF
9544 9544 d 3a3181
9544 9544 s 				LD		A, (pGhostY)
9547 9547 d 3c
9547 9547 s 				INC		A
9548 9548 d e61f
9548 9548 s 				AND		00011111B
954a 954a d 47
954a 954a s 				LD		B,A
954b 954b d 3a3081
954b 954b s 				LD		A,(pGhostX)
954e 954e d 4f
954e 954e s 				LD		C,A
954f 954f d 181c
954f 954f s 				JR		pGhostPathFind
9551 9551 s pGhostCheckL:		
9551 9551 d f5
9551 9551 s 				PUSH	AF	
9552 9552 d 3a3081
9552 9552 s 				LD		A, (pGhostX)
9555 9555 d 3d
9555 9555 s 				DEC		A
9556 9556 d e61f
9556 9556 s 				AND		00011111B
9558 9558 d 4f
9558 9558 s 				LD		C,A
9559 9559 d 3a3181
9559 9559 s 				LD		A,(pGhostY)
955c 955c d 47
955c 955c s 				LD		B,A
955d 955d d 180e
955d 955d s 				JR		pGhostPathFind
955f 955f s pGhostCheckR:
955f 955f d f5
955f 955f s 				PUSH	AF	
9560 9560 d 3a3081
9560 9560 s 				LD		A, (pGhostX)
9563 9563 d 3c
9563 9563 s 				INC		A
9564 9564 d e61f
9564 9564 s 				AND		00011111B
9566 9566 d 4f
9566 9566 s 				LD		C,A
9567 9567 d 3a3181
9567 9567 s 				LD		A,(pGhostY)
956a 956a d 47
956a 956a s 				LD		B,A
956b 956b d 1800
956b 956b s 				JR		pGhostPathFind
956d 956d s 
956d 956d s pGhostPathFind:
956d 956d d cd9997
956d 956d s 				CALL	getAddressPF
9570 9570 d 3a1381
9570 9570 s 				LD		A,(ghostDis)
9573 9573 d 5e
9573 9573 s 				LD		E,(HL)
9574 9574 d bb
9574 9574 s 				CP		E
9575 9575 d f5
9575 9575 s                 PUSH    AF
9576 9576 d 3a0481
9576 9576 s                 LD      A,(pPActive)            ;Check power pellet is not activ, if it is, run away
9579 9579 d b7
9579 9579 s                 OR      A
957a 957a d c28495
957a 957a s                 JP      NZ,pGhostPFPP
957d 957d d f1
957d 957d s                 POP     AF
957e 957e d d29095
957e 957e s 				JP		NC,pGhostSetNewDir
9581 9581 d f1
9581 9581 s                 POP     AF
9582 9582 d f1
9582 9582 s 				POP		AF
9583 9583 d c9
9583 9583 s 				RET
9584 9584 s pGhostPFPP:
9584 9584 d f1
9584 9584 s                 POP     AF
9585 9585 d da9095
9585 9585 s                 JP		C,pGhostSetNewDir
9588 9588 d feff
9588 9588 s                 CP      0FFH
958a 958a d ca9095
958a 958a s                 JP      Z,pGhostSetNewDir
958d 958d d f1
958d 958d s                 POP     AF
958e 958e d f1
958e 958e s 				POP		AF
958f 958f d c9
958f 958f s                 RET
9590 9590 s 
9590 9590 s pGhostSetNewDir:
9590 9590 d 7b
9590 9590 s 				LD		A,E
9591 9591 d 321381
9591 9591 s 				LD		(ghostDis),A
9594 9594 d f1
9594 9594 s 				POP		AF
9595 9595 d 323281
9595 9595 s 				LD		(pGhostDir),A
9598 9598 d c9
9598 9598 s 				RET
9599 9599 s 
9599 9599 s pGhostColide:   
9599 9599 d 3a0081
9599 9599 s                 LD      A,(pacx)                ;Compair X
959c 959c s 				;CALL	NumToHex
959c 959c d 47
959c 959c s                 LD      B,A
959d 959d d 3a3081
959d 959d s                 LD      A,(pGhostX)
95a0 95a0 s 				;CALL	NumToHex
95a0 95a0 d b8
95a0 95a0 s                 CP      B
95a1 95a1 d c0
95a1 95a1 s                 RET     NZ
95a2 95a2 d 3a0181
95a2 95a2 s                 LD      A,(pacy)                ;Compair Y
95a5 95a5 s 				;CALL	NumToHex
95a5 95a5 d 47
95a5 95a5 s                 LD      B,A
95a6 95a6 d 3a3181
95a6 95a6 s                 LD      A,(pGhostY)
95a9 95a9 s 				;CALL	NumToHex
95a9 95a9 d b8
95a9 95a9 s                 CP      B
95aa 95aa d c0
95aa 95aa s                 RET     NZ
95ab 95ab d 3a0481
95ab 95ab s                 LD      A,(pPActive)              ;Colishion Happened
95ae 95ae d b7
95ae 95ae s                 OR      A
95af 95af d ca3d91
95af 95af s                 JP      Z,killPacman               ;If power pellet not active, run genric deth lib
95b2 95b2 d 3e10
95b2 95b2 s                 LD		a, pGhostStoreX	           ;set pGhost Pos
95b4 95b4 d 323081
95b4 95b4 s 			    LD		(pGhostX),a
95b7 95b7 d 3e0b
95b7 95b7 s 			    LD		a, pGhostStoreY
95b9 95b9 d 323181
95b9 95b9 s 			    LD		(pGhostY),a
95bc 95bc d 3e30
95bc 95bc s                 LD		a, pGhostInitTimer
95be 95be d 323581
95be 95be s 			    LD		(pGhostTimer),a
95c1 95c1 d c9
95c1 95c1 s                 RET
95c2 95c2 s 
95c2 95c2 s ;x = l
95c2 95c2 s ;y = h
95c2 95c2 s pGhostStack:
95c2 95c2 d 7d
95c2 95c2 s 				LD      A,L               		;Compair X
95c3 95c3 d 47
95c3 95c3 s                 LD      B,A
95c4 95c4 d 3a3081
95c4 95c4 s                 LD      A,(pGhostX)
95c7 95c7 d b8
95c7 95c7 s                 CP      B
95c8 95c8 d c0
95c8 95c8 s                 RET     NZ
95c9 95c9 d 7c
95c9 95c9 s                 LD      A,h                		;Compair Y
95ca 95ca d 47
95ca 95ca s                 LD      B,A
95cb 95cb d 3a3181
95cb 95cb s                 LD      A,(pGhostY)
95ce 95ce d b8
95ce 95ce s                 CP      B
95cf 95cf d c9
95cf 95cf s                 RET
95d0 95d0 s 
95d0 95d0 f ghosts.asm
95d0 95d0 d 1b5b39356d4d1b5b306d00
95d0 95d0 s pGhost:		.BYTE	1BH,"[95mM",1BH,"[0m",0
95db 95db s include ghosts/teal.asm
95db 95db f ghosts/teal.asm
95db 95db s tGhostInitX	    .EQU	15
95db 95db s tGhostInitY	    .EQU	8
95db 95db s tGhostInitTimer .EQU    40H
95db 95db s tGhostStoreX	.EQU	17 
95db 95db s tGhostStoreY	.EQU	11
95db 95db s 
95db 95db s tGhostX		    .EQU	8140H		
95db 95db s tGhostY		    .EQU	8141H
95db 95db s tGhostDir		.EQU	8142H
95db 95db s tGhostTimer     .EQU    8145H
95db 95db s 
95db 95db s tGhostClear:
95db 95db d 3a4081
95db 95db s 				LD		A, (tGhostX)		;Push X to stack
95de 95de d 4f
95de 95de s 				LD		C,A
95df 95df d 3a4181
95df 95df s 				LD		A, (tGhostY)		;Push Y to stack
95e2 95e2 d 47
95e2 95e2 s 				LD		B,A
95e3 95e3 d cdb197
95e3 95e3 s 				CALL 	printMapAt
95e6 95e6 d c9
95e6 95e6 s 				RET
95e7 95e7 s 				
95e7 95e7 s tGhostPrint:
95e7 95e7 d 3a4081
95e7 95e7 s 				LD		A, (tGhostX)		;Push X to stack
95ea 95ea d 3c
95ea 95ea s 				INC		A
95eb 95eb d 6f
95eb 95eb s 				LD		L,A
95ec 95ec d 2600
95ec 95ec s 				LD		H, $00			;We dont care about msb
95ee 95ee d e5
95ee 95ee s 				PUSH	HL
95ef 95ef d 3a4181
95ef 95ef s 				LD		A, (tGhostY)		;Push Y to stack
95f2 95f2 d 3c
95f2 95f2 s 				INC		A
95f3 95f3 d 6f
95f3 95f3 s 				LD		L,A
95f4 95f4 d 2600
95f4 95f4 s 				LD		H, $00			;Again we dont care
95f6 95f6 d e5
95f6 95f6 s 				PUSH	HL
95f7 95f7 d cd2299
95f7 95f7 s 				CALL	moveCursor
95fa 95fa d 3a0481
95fa 95fa s                 LD      A,(pPActive)
95fd 95fd d b7
95fd 95fd s                 OR      A
95fe 95fe d c29691
95fe 95fe s                 JP      NZ, printSGhost
9601 9601 d 211497
9601 9601 s 				LD		HL, tGhost
9604 9604 d cd9499
9604 9604 s 				CALL 	print
9607 9607 d c9
9607 9607 s 				RET
9608 9608 s tGhostMapData:	
9608 9608 d 3a4081
9608 9608 s 				LD		A, (tGhostX)
960b 960b d 4f
960b 960b s 				LD		C,A
960c 960c d 3a4181
960c 960c s 				LD		A, (tGhostY)
960f 960f d 47
960f 960f s 				LD		B,A
9610 9610 d cd8197
9610 9610 s 				CALL	getMapAddress
9613 9613 d 7e
9613 9613 s                 LD      A,(HL)
9614 9614 d c9
9614 9614 s 				ret
9615 9615 s 
9615 9615 s tGhostInit:   
9615 9615 d 3e11
9615 9615 s                 LD		a, tGhostStoreX	;set tGhost Pos
9617 9617 d 324081
9617 9617 s 			    LD		(tGhostX),a
961a 961a d 3e0b
961a 961a s 			    LD		a, tGhostStoreY
961c 961c d 324181
961c 961c s 			    LD		(tGhostY),a
961f 961f d 3e40
961f 961f s                 LD		a, tGhostInitTimer
9621 9621 d 324581
9621 9621 s 			    LD		(tGhostTimer),a
9624 9624 d c9
9624 9624 s                 RET
9625 9625 s 
9625 9625 s tGhostMove:
9625 9625 d 3a4581
9625 9625 s                 LD      A,(tGhostTimer)     ;Dont move if the ghost is in jale
9628 9628 d b7
9628 9628 s                 OR      A                
9629 9629 d c23e96
9629 9629 s                 JP      NZ,tGhostDecTimer   ;Decrement the timer if its x
962c 962c d 3a0481
962c 962c s                 LD      A,(pPActive)
962f 962f d cb47
962f 962f s                 BIT     0,A                 ;Move every other tick, bit 0 will always 0 when the power pellet isnt active
9631 9631 d c0
9631 9631 s                 RET     NZ
9632 9632 d 3a4281
9632 9632 s 				LD		A,(tGhostDir)
9635 9635 d 114081
9635 9635 s 				LD		DE,tGhostX
9638 9638 d 014181
9638 9638 s 				LD		BC,tGhostY
963b 963b d c3a991
963b 963b s 				JP		ghostMove
963e 963e s 
963e 963e s tGhostDecTimer:
963e 963e d 3d
963e 963e s                 DEC     A
963f 963f d 324581
963f 963f s                 LD      (tGhostTimer),A
9642 9642 d b7
9642 9642 s                 OR      A
9643 9643 d c0
9643 9643 s                 RET     NZ              ;IF Zero move ghost out of jale
9644 9644 d 3e0f
9644 9644 s                 LD		a, tGhostInitX	;set tGhost Pos
9646 9646 d 324081
9646 9646 s 			    LD		(tGhostX),a
9649 9649 d 3e08
9649 9649 s 			    LD		a, tGhostInitY
964b 964b d 324181
964b 964b s 			    LD		(tGhostY),a
964e 964e d c9
964e 964e s                 RET
964f 964f s 
964f 964f s tGhostNextMove:
964f 964f d 3eff
964f 964f s 				LD		A, 0FFH
9651 9651 d 321381
9651 9651 s 				LD		(ghostDis),A
9654 9654 d cd0896
9654 9654 s 				CALL	tGhostMapData
9657 9657 d 57
9657 9657 s 				LD		D,A
9658 9658 d 3e57
9658 9658 s 				LD		A,	'W'			;check up
965a 965a d cd5b97
965a 965a s 				CALL	isMoveValid
965d 965d d c47996
965d 965d s 				CALL	NZ,tGhostCheckU
9660 9660 d 3e53
9660 9660 s 				LD		A,	'S'			;down
9662 9662 d cd5b97
9662 9662 s 				CALL	isMoveValid
9665 9665 d c48796
9665 9665 s 				CALL	NZ,tGhostCheckD
9668 9668 d 3e41
9668 9668 s 				LD		A,	'A'			;left
966a 966a d cd5b97
966a 966a s 				CALL	isMoveValid
966d 966d d c49596
966d 966d s 				CALL	NZ,tGhostCheckL
9670 9670 d 3e44
9670 9670 s 				LD		A,	'D'			;right
9672 9672 d cd5b97
9672 9672 s 				CALL	isMoveValid
9675 9675 d c4a396
9675 9675 s 				CALL	NZ,tGhostCheckR
9678 9678 d c9
9678 9678 s 				RET
9679 9679 s 				
9679 9679 s tGhostCheckU:	
9679 9679 d f5
9679 9679 s 				PUSH	AF
967a 967a d 3a4181
967a 967a s 				LD		A, (tGhostY)
967d 967d d 3d
967d 967d s 				DEC		A
967e 967e d e61f
967e 967e s 				AND		00011111B
9680 9680 d 47
9680 9680 s 				LD		B,A
9681 9681 d 3a4081
9681 9681 s 				LD		A,(tGhostX)
9684 9684 d 4f
9684 9684 s 				LD		C,A
9685 9685 d 182a
9685 9685 s 				JR		tGhostPathFind
9687 9687 s tGhostCheckD:			
9687 9687 d f5
9687 9687 s 				PUSH	AF
9688 9688 d 3a4181
9688 9688 s 				LD		A, (tGhostY)
968b 968b d 3c
968b 968b s 				INC		A
968c 968c d e61f
968c 968c s 				AND		00011111B
968e 968e d 47
968e 968e s 				LD		B,A
968f 968f d 3a4081
968f 968f s 				LD		A,(tGhostX)
9692 9692 d 4f
9692 9692 s 				LD		C,A
9693 9693 d 181c
9693 9693 s 				JR		tGhostPathFind
9695 9695 s tGhostCheckL:		
9695 9695 d f5
9695 9695 s 				PUSH	AF	
9696 9696 d 3a4081
9696 9696 s 				LD		A, (tGhostX)
9699 9699 d 3d
9699 9699 s 				DEC		A
969a 969a d e61f
969a 969a s 				AND		00011111B
969c 969c d 4f
969c 969c s 				LD		C,A
969d 969d d 3a4181
969d 969d s 				LD		A,(tGhostY)
96a0 96a0 d 47
96a0 96a0 s 				LD		B,A
96a1 96a1 d 180e
96a1 96a1 s 				JR		tGhostPathFind
96a3 96a3 s tGhostCheckR:
96a3 96a3 d f5
96a3 96a3 s 				PUSH	AF	
96a4 96a4 d 3a4081
96a4 96a4 s 				LD		A, (tGhostX)
96a7 96a7 d 3c
96a7 96a7 s 				INC		A
96a8 96a8 d e61f
96a8 96a8 s 				AND		00011111B
96aa 96aa d 4f
96aa 96aa s 				LD		C,A
96ab 96ab d 3a4181
96ab 96ab s 				LD		A,(tGhostY)
96ae 96ae d 47
96ae 96ae s 				LD		B,A
96af 96af d 1800
96af 96af s 				JR		tGhostPathFind
96b1 96b1 s 
96b1 96b1 s tGhostPathFind:
96b1 96b1 d cd9997
96b1 96b1 s 				CALL	getAddressPF
96b4 96b4 d 3a1381
96b4 96b4 s 				LD		A,(ghostDis)
96b7 96b7 d 5e
96b7 96b7 s 				LD		E,(HL)
96b8 96b8 d bb
96b8 96b8 s 				CP		E
96b9 96b9 d f5
96b9 96b9 s                 PUSH    AF
96ba 96ba d 3a0481
96ba 96ba s                 LD      A,(pPActive)            ;Check power pellet is not activ, if it is, run away
96bd 96bd d b7
96bd 96bd s                 OR      A
96be 96be d c2c896
96be 96be s                 JP      NZ,tGhostPFPP
96c1 96c1 d f1
96c1 96c1 s                 POP     AF
96c2 96c2 d d2d496
96c2 96c2 s 				JP		NC,tGhostSetNewDir
96c5 96c5 d f1
96c5 96c5 s                 POP     AF
96c6 96c6 d f1
96c6 96c6 s 				POP		AF
96c7 96c7 d c9
96c7 96c7 s 				RET
96c8 96c8 s tGhostPFPP:
96c8 96c8 d f1
96c8 96c8 s                 POP     AF
96c9 96c9 d dad496
96c9 96c9 s                 JP		C,tGhostSetNewDir
96cc 96cc d feff
96cc 96cc s                 CP      0FFH
96ce 96ce d cad496
96ce 96ce s                 JP      Z,tGhostSetNewDir
96d1 96d1 d f1
96d1 96d1 s                 POP     AF
96d2 96d2 d f1
96d2 96d2 s 				POP		AF
96d3 96d3 d c9
96d3 96d3 s                 RET
96d4 96d4 s 
96d4 96d4 s tGhostSetNewDir:
96d4 96d4 d 7b
96d4 96d4 s 				LD		A,E
96d5 96d5 d 321381
96d5 96d5 s 				LD		(ghostDis),A
96d8 96d8 d f1
96d8 96d8 s 				POP		AF
96d9 96d9 d 324281
96d9 96d9 s 				LD		(tGhostDir),A
96dc 96dc d c9
96dc 96dc s 				RET
96dd 96dd s 
96dd 96dd s tGhostColide:   
96dd 96dd d 3a0081
96dd 96dd s                 LD      A,(pacx)                ;Compair X
96e0 96e0 s 				;CALL	NumToHex
96e0 96e0 d 47
96e0 96e0 s                 LD      B,A
96e1 96e1 d 3a4081
96e1 96e1 s                 LD      A,(tGhostX)
96e4 96e4 s 				;CALL	NumToHex
96e4 96e4 d b8
96e4 96e4 s                 CP      B
96e5 96e5 d c0
96e5 96e5 s                 RET     NZ
96e6 96e6 d 3a0181
96e6 96e6 s                 LD      A,(pacy)                ;Compair Y
96e9 96e9 s 				;CALL	NumToHex
96e9 96e9 d 47
96e9 96e9 s                 LD      B,A
96ea 96ea d 3a4181
96ea 96ea s                 LD      A,(tGhostY)
96ed 96ed s 				;CALL	NumToHex
96ed 96ed d b8
96ed 96ed s                 CP      B
96ee 96ee d c0
96ee 96ee s                 RET     NZ
96ef 96ef d 3a0481
96ef 96ef s                 LD      A,(pPActive)              ;Colishion Happened
96f2 96f2 d b7
96f2 96f2 s                 OR      A
96f3 96f3 d ca3d91
96f3 96f3 s                 JP      Z,killPacman               ;If power pellet not active, run genric deth lib
96f6 96f6 d 3e11
96f6 96f6 s                 LD		a, tGhostStoreX	           ;set tGhost Pos
96f8 96f8 d 324081
96f8 96f8 s 			    LD		(tGhostX),a
96fb 96fb d 3e0b
96fb 96fb s 			    LD		a, tGhostStoreY
96fd 96fd d 324181
96fd 96fd s 			    LD		(tGhostY),a
9700 9700 d 3e40
9700 9700 s                 LD		a, tGhostInitTimer
9702 9702 d 324581
9702 9702 s 			    LD		(tGhostTimer),a
9705 9705 d c9
9705 9705 s                 RET
9706 9706 s 
9706 9706 s ;x = l
9706 9706 s ;y = h
9706 9706 s tGhostStack:
9706 9706 d 7d
9706 9706 s 				LD      A,L               		;Compair X
9707 9707 d 47
9707 9707 s                 LD      B,A
9708 9708 d 3a4081
9708 9708 s                 LD      A,(tGhostX)
970b 970b d b8
970b 970b s                 CP      B
970c 970c d c0
970c 970c s                 RET     NZ
970d 970d d 7c
970d 970d s                 LD      A,h                		;Compair Y
970e 970e d 47
970e 970e s                 LD      B,A
970f 970f d 3a4181
970f 970f s                 LD      A,(tGhostY)
9712 9712 d b8
9712 9712 s                 CP      B
9713 9713 d c9
9713 9713 s                 RET
9714 9714 s 
9714 9714 f ghosts.asm
9714 9714 d 1b5b39366d4d1b5b306d00
9714 9714 s tGhost:		.BYTE	1BH,"[96mM",1BH,"[0m",0
971f 971f s 
971f 971f s 
971f 971f d 1b5b33346d4d1b5b306d00
971f 971f s sGhost0:	.BYTE	1BH,"[34mM",1BH,"[0m",0
972a 972a f main.asm
972a 972a d 1b5b39376d4d1b5b306d00
972a 972a s sGhost1:	.BYTE	1BH,"[97mM",1BH,"[0m",0
9735 9735 s ;-----------Spesific Libs -----;
9735 9735 s include movelibs.asm	
9735 9735 f movelibs.asm
9735 9735 s move:
9735 9735 d fe57
9735 9735 s 				CP		'W'
9737 9737 d 280a
9737 9737 s 				JR		Z,moveU
9739 9739 d fe41
9739 9739 s 				CP		'A'
973b 973b d 2812
973b 973b s 				JR		Z,moveL
973d 973d d fe53
973d 973d s 				CP		'S'
973f 973f d 2808
973f 973f s 				JR		Z,moveD
9741 9741 d 1812
9741 9741 s 				JR		moveR
9743 9743 s 
9743 9743 s moveU:			
9743 9743 d 0a
9743 9743 s 				LD		A, (BC)
9744 9744 d 3d
9744 9744 s 				DEC		A
9745 9745 d e61f
9745 9745 s 				AND		00011111B
9747 9747 d 02
9747 9747 s 				LD		(BC),A
9748 9748 d c9
9748 9748 s 				RET
9749 9749 s moveD:			
9749 9749 d 0a
9749 9749 s 				LD		A, (BC)
974a 974a d 3c
974a 974a s 				INC		A
974b 974b d e61f
974b 974b s 				AND		00011111B
974d 974d d 02
974d 974d s 				LD		(BC),A
974e 974e d c9
974e 974e s 				RET
974f 974f s moveL:			
974f 974f d 1a
974f 974f s 				LD		A, (DE)
9750 9750 d 3d
9750 9750 s 				DEC		A
9751 9751 d e61f
9751 9751 s 				AND		00011111B
9753 9753 d 12
9753 9753 s 				LD		(DE),A
9754 9754 d c9
9754 9754 s 				RET
9755 9755 s moveR:			
9755 9755 d 1a
9755 9755 s 				LD		A, (DE)
9756 9756 d 3c
9756 9756 s 				INC		A
9757 9757 d e61f
9757 9757 s 				AND		00011111B
9759 9759 d 12
9759 9759 s 				LD		(DE),A
975a 975a d c9
975a 975a s 				RET
975b 975b s isMoveValid:
975b 975b d fe57
975b 975b s 				CP		'W'
975d 975d d 280a
975d 975d s 				JR		Z,moveUValid
975f 975f d fe41
975f 975f s 				CP		'A'
9761 9761 d 280c
9761 9761 s 				JR		Z,moveLValid
9763 9763 d fe53
9763 9763 s 				CP		'S'
9765 9765 d 2805
9765 9765 s 				JR		Z,moveDValid
9767 9767 d 1809
9767 9767 s 				JR		moveRValid
9769 9769 s moveUValid:			
9769 9769 d cb42
9769 9769 s 				BIT		upBit,D
976b 976b d c9
976b 976b s 				RET
976c 976c s moveDValid:			
976c 976c d cb4a
976c 976c s 				BIT		downBit,D
976e 976e d c9
976e 976e s 				RET
976f 976f s moveLValid:			
976f 976f d cb52
976f 976f s 				BIT		leftBit,D
9771 9771 d c9
9771 9771 s 				RET
9772 9772 s moveRValid:			
9772 9772 d cb5a
9772 9772 s 				BIT		rightBit,D
9774 9774 f main.asm
9774 9774 d c9
9774 9774 s 				RET
9775 9775 s include	mapLibs.asm	
9775 9775 f mapLibs.asm
9775 9775 s pathFindDepth   .EQU	30H
9775 9775 s 
9775 9775 s ;-------- Map -------;
9775 9775 s ;InitiMap
9775 9775 s initMap:
9775 9775 d 010004
9775 9775 s 				LD		BC,400H
9778 9778 d 2100c0
9778 9778 s 				LD		HL,map
977b 977b d 1100e0
977b 977b s 				LD		DE,liveMap
977e 977e d edb0
977e 977e s 				LDIR
9780 9780 d c9
9780 9780 s 				RET
9781 9781 s 
9781 9781 s ;------- Get Map Data ----;
9781 9781 s ; C - X
9781 9781 s ; B	- Y
9781 9781 s getMapAddress:
9781 9781 d c5
9781 9781 s 				push	bc
9782 9782 d cb00
9782 9782 s 				rlc		b			;Shift b left 5
9784 9784 d cb00
9784 9784 s 				rlc		b			;Shift b left 5
9786 9786 d cb00
9786 9786 s 				rlc		b			;Shift b left 5
9788 9788 d cb00
9788 9788 s 				rlc		b			;Shift b left 5
978a 978a d cb00
978a 978a s 				rlc		b			;Shift b left 5
978c 978c d 78
978c 978c s 				ld		a,b
978d 978d d e6e0
978d 978d s 				and		11100000b	;Mask lower adress
978f 978f d b1
978f 978f s 				or		c			;Combine with C
9790 9790 d 6f
9790 9790 s 				ld		l,a			;A is now low byte of adress
9791 9791 d 78
9791 9791 s 				ld		a,b
9792 9792 d e603
9792 9792 s 				and		00000011b	;Mask upper adress
9794 9794 d f6e0
9794 9794 s 				or		0E0H		;Start of map
9796 9796 d 67
9796 9796 s 				ld		h,a
9797 9797 d c1
9797 9797 s 				pop		bc
9798 9798 d c9
9798 9798 s 				ret
9799 9799 s 
9799 9799 s ;------- Get Path Find Map Address----;
9799 9799 s ; C - X
9799 9799 s ; B	- Y
9799 9799 s getAddressPF:
9799 9799 d c5
9799 9799 s 				push	bc
979a 979a d cb00
979a 979a s 				rlc		b			;Shift b left 5
979c 979c d cb00
979c 979c s 				rlc		b			;Shift b left 5
979e 979e d cb00
979e 979e s 				rlc		b			;Shift b left 5
97a0 97a0 d cb00
97a0 97a0 s 				rlc		b			;Shift b left 5
97a2 97a2 d cb00
97a2 97a2 s 				rlc		b			;Shift b left 5
97a4 97a4 d 78
97a4 97a4 s 				ld		a,b
97a5 97a5 d e6e0
97a5 97a5 s 				and		11100000b	;Mask lower adress
97a7 97a7 d b1
97a7 97a7 s 				or		c			;Combine with C
97a8 97a8 d 6f
97a8 97a8 s 				ld		l,a			;A is now low byte of adress
97a9 97a9 d 78
97a9 97a9 s 				ld		a,b
97aa 97aa d e603
97aa 97aa s 				and		00000011b	;Mask upper adress
97ac 97ac d f6d0
97ac 97ac s 				or		0D0H		;Start of map
97ae 97ae d 67
97ae 97ae s 				ld		h,a
97af 97af d c1
97af 97af s 				pop		bc
97b0 97b0 d c9
97b0 97b0 s 				ret
97b1 97b1 s 
97b1 97b1 s 
97b1 97b1 s ;--------- Map print -------- ;
97b1 97b1 s ; C - X
97b1 97b1 s ; B	- Y
97b1 97b1 s printMapAt:	
97b1 97b1 d c5
97b1 97b1 s 			PUSH	BC
97b2 97b2 d 0c
97b2 97b2 s 			INC		C
97b3 97b3 d 69
97b3 97b3 s 			LD		L,C
97b4 97b4 d 2600
97b4 97b4 s 			LD		H, $00			;We dont care about msb
97b6 97b6 d e5
97b6 97b6 s 			PUSH	HL
97b7 97b7 d 04
97b7 97b7 s 			INC		B
97b8 97b8 d 68
97b8 97b8 s 			LD		L,B
97b9 97b9 d 2600
97b9 97b9 s 			LD		H, $00			;Again we dont care
97bb 97bb d e5
97bb 97bb s 			PUSH	HL
97bc 97bc d cd2299
97bc 97bc s 			CALL	moveCursor
97bf 97bf d c1
97bf 97bf s 			POP 	BC
97c0 97c0 d cd8197
97c0 97c0 s 			CALL	getMapAddress
97c3 97c3 d 7e
97c3 97c3 s 			LD		A,(HL)
97c4 97c4 d cde397
97c4 97c4 s 			CALL	pmChar
97c7 97c7 d c9
97c7 97c7 s 			RET
97c8 97c8 s 
97c8 97c8 s printMap:
97c8 97c8 d 3e20
97c8 97c8 s 				ld		a,32
97ca 97ca d 47
97ca 97ca s 				ld		b,a			; 32 chars per line
97cb 97cb d 4f
97cb 97cb s 				ld		c,a			; 32 lines per map
97cc 97cc d 2100e0
97cc 97cc s 				ld		hl,liveMap
97cf 97cf d 7e
97cf 97cf s pmLoop:			ld		a,(hl)		; get char
97d0 97d0 d cde397
97d0 97d0 s 				call	pmChar		; decode what to print
97d3 97d3 d 23
97d3 97d3 s 				inc		hl			; next char
97d4 97d4 d 10f9
97d4 97d4 s 				djnz	pmLoop		; if were not at the end of a line, print next char
97d6 97d6 d cd1999
97d6 97d6 s 				call	newline		; if we are, print a new line
97d9 97d9 d 41
97d9 97d9 s 				ld		b,c			;are we at the end of a block
97da 97da d 1001
97da 97da s 				djnz	pmNextLine
97dc 97dc d c9
97dc 97dc s 				ret
97dd 97dd s pmNextLine:	
97dd 97dd d 48
97dd 97dd s 				ld		c,b			;copy decremented b back to c
97de 97de d 3e20
97de 97de s 				ld 		a,32		;refill b withj 32
97e0 97e0 d 47
97e0 97e0 s 				ld		b,a
97e1 97e1 d 18ec
97e1 97e1 s 				jr		pmLoop		;draw next char
97e3 97e3 s 
97e3 97e3 s 
97e3 97e3 s pmChar:		;-- Print map char a
97e3 97e3 d e5
97e3 97e3 s 				push	hl
97e4 97e4 d cb67
97e4 97e4 s 				bit		powerpBit,a
97e6 97e6 d 200e
97e6 97e6 s 				jr		nz,printPP
97e8 97e8 d cb6f
97e8 97e8 s 				bit		pelletBit,a
97ea 97ea d 2012
97ea 97ea s 				jr		nz,printP
97ec 97ec d cb77
97ec 97ec s 				bit		wallBit,a
97ee 97ee d 2016
97ee 97ee s 				jr		nz,printWall
97f0 97f0 d cb7f
97f0 97f0 s 				bit		sfBit,a
97f2 97f2 d 201a
97f2 97f2 s 				jr		nz,printSF
97f4 97f4 d 1820
97f4 97f4 s 				jr	 	printVoid
97f6 97f6 s 			
97f6 97f6 s printPP:
97f6 97f6 d 21b199
97f6 97f6 s 				ld		hl,powerPellet
97f9 97f9 d cd9499
97f9 97f9 s 				call	print
97fc 97fc d 1820
97fc 97fc s 				jr		pmCharRet
97fe 97fe s printP:
97fe 97fe d 21bc99
97fe 97fe s 				ld		hl,pellet
9801 9801 d cd9499
9801 9801 s 				call	print
9804 9804 d 1818
9804 9804 s 				jr		pmCharRet
9806 9806 s printWall:
9806 9806 d 21a699
9806 9806 s 				ld		hl,wall
9809 9809 d cd9499
9809 9809 s 				call	print
980c 980c d 1810
980c 980c s 				jr		pmCharRet
980e 980e s printSF:
980e 980e d 21c799
980e 980e s 				ld		hl,superFruit
9811 9811 d cd9499
9811 9811 s 				call	print
9814 9814 d 1808
9814 9814 s 				jr		pmCharRet
9816 9816 s printVoid:
9816 9816 d 21e599
9816 9816 s 				ld		hl,void
9819 9819 d cd9499
9819 9819 s 				call	print
981c 981c d 1800
981c 981c s 				jr		pmCharRet
981e 981e s pmCharRet:	
981e 981e d e1
981e 981e s 				pop 	hl
981f 981f d c9
981f 981f s 				ret
9820 9820 s 				
9820 9820 s ;-------- Path Find Map -------;
9820 9820 s ;Initi Path Find Map
9820 9820 s initPathFind:
9820 9820 d 3e20
9820 9820 s 				ld		a,32
9822 9822 d 47
9822 9822 s 				ld		b,a			; 32 chars per line
9823 9823 d 4f
9823 9823 s 				ld		c,a			; 32 lines per map
9824 9824 d 2100d0
9824 9824 s 				ld		hl,pathFindMap
9827 9827 d 16ff
9827 9827 s initpPFLoop:	ld		D,0FFH		; set char
9829 9829 d 72
9829 9829 s 				LD		(HL),D
982a 982a d 23
982a 982a s 				inc		hl			; next char
982b 982b d 10fa
982b 982b s 				djnz	initpPFLoop		; if were not at the end of a line, print next char
982d 982d d 41
982d 982d s 				ld		b,c			;are we at the end of a block
982e 982e d 1001
982e 982e s 				djnz	pfNextRow
9830 9830 d c9
9830 9830 s 				ret
9831 9831 s pfNextRow:	
9831 9831 d 48
9831 9831 s 				ld		c,b			;copy decremented b back to c
9832 9832 d 3e20
9832 9832 s 				ld 		a,32		;refill b withj 32
9834 9834 d 47
9834 9834 s 				ld		b,a
9835 9835 d c32798
9835 9835 s 				jp		initpPFLoop		;draw next char
9838 9838 s 
9838 9838 s ;Calculate Map
9838 9838 s calculatePathMap:
9838 9838 d 01ffff
9838 9838 s 				ld		BC,0FFFFH		;Push Stack terminator		
983b 983b d c5
983b 983b s 				PUSH	BC
983c 983c d 3a0081
983c 983c s 				LD		A, (pacx)		;Push X to stack
983f 983f d 4f
983f 983f s 				LD		C,A
9840 9840 d 3a0181
9840 9840 s 				LD		A, (pacy)		;Push Y to stack
9843 9843 d 47
9843 9843 s 				LD		B,A
9844 9844 d cd9997
9844 9844 s 				CALL	getAddressPF
9847 9847 d 3600
9847 9847 s 				LD		(HL),00H
9849 9849 d c5
9849 9849 s 				PUSH	BC
984a 984a s calculatePathMapLoop:
984a 984a d c1
984a 984a s 				POP		BC			;Get node to visit
984b 984b d 78
984b 984b s 				LD		A,B			;Check Its not FFFF
984c 984c d b7
984c 984c s 				OR		A
984d 984d d feff
984d 984d s 				CP		0FFH
984f 984f d c8
984f 984f s 				RET		Z			;We only have to check half the byte as its imposable to have a cord more than 20h
9850 9850 d ed43f289
9850 9850 s 				LD		(originalBC),BC
9854 9854 d cd9997
9854 9854 s 				CALL	getAddressPF
9857 9857 d 7e
9857 9857 s 				LD		A,(HL)
9858 9858 d 3c
9858 9858 s 				INC		A
9859 9859 d fe30
9859 9859 s                 CP      pathFindDepth
985b 985b d ca4a98
985b 985b s 				JP 		Z,calculatePathMapLoop	;Skip if wer getting too long
985e 985e d 5f
985e 985e s 				LD		E,A			;Keep the distance were working with safe
985f 985f d cd8197
985f 985f s 				CALL	getMapAddress
9862 9862 d 56
9862 9862 s 				LD		D,(HL)
9863 9863 d 3e57
9863 9863 s 				LD		A,	'W'			;check up
9865 9865 d cd5b97
9865 9865 s 				CALL	isMoveValid
9868 9868 d c48698
9868 9868 s 				CALL	NZ,calculateMapU
986b 986b d 3e53
986b 986b s 				LD		A,	'S'			;down
986d 986d d cd5b97
986d 986d s 				CALL	isMoveValid
9870 9870 d c49298
9870 9870 s 				CALL	NZ,calculateMapD
9873 9873 d 3e41
9873 9873 s 				LD		A,	'A'			;left
9875 9875 d cd5b97
9875 9875 s 				CALL	isMoveValid
9878 9878 d c49e98
9878 9878 s 				CALL	NZ,calculateMapL
987b 987b d 3e44
987b 987b s 				LD		A,	'D'			;right
987d 987d d cd5b97
987d 987d s 				CALL	isMoveValid
9880 9880 d c4aa98
9880 9880 s 				CALL	NZ,calculateMapR
9883 9883 d c34a98
9883 9883 s 				JP		calculatePathMapLoop
9886 9886 s 				
9886 9886 s calculateMapU:	
9886 9886 d ed4bf289
9886 9886 s 				LD		BC,(originalBC)			;We want to preserve the OG BC Through this process so it can be used again in sub directions		
988a 988a d 78
988a 988a s 				LD		A, B				;Make modifications to corod
988b 988b d 3d
988b 988b s 				DEC		A
988c 988c d e61f
988c 988c s 				AND		00011111B			;Mask for looping
988e 988e d 47
988e 988e s 				LD		B,A
988f 988f d c3b698
988f 988f s 				JP		calculateMapCell
9892 9892 s calculateMapD:	
9892 9892 d ed4bf289
9892 9892 s 				LD		BC,(originalBC)	
9896 9896 d 78
9896 9896 s 				LD		A, B
9897 9897 d 3c
9897 9897 s 				INC		A
9898 9898 d e61f
9898 9898 s 				AND		00011111B
989a 989a d 47
989a 989a s 				LD		B,A
989b 989b d c3b698
989b 989b s 				JP		calculateMapCell
989e 989e s calculateMapL:	
989e 989e d ed4bf289
989e 989e s 				LD		BC,(originalBC)
98a2 98a2 d 79
98a2 98a2 s 				LD		A, C
98a3 98a3 d 3d
98a3 98a3 s 				DEC		A
98a4 98a4 d e61f
98a4 98a4 s 				AND		00011111B
98a6 98a6 d 4f
98a6 98a6 s 				LD		C,A
98a7 98a7 d c3b698
98a7 98a7 s 				JP		calculateMapCell
98aa 98aa s calculateMapR:
98aa 98aa d ed4bf289
98aa 98aa s 				LD		BC,(originalBC)
98ae 98ae d 79
98ae 98ae s 				LD		A, C
98af 98af d 3c
98af 98af s 				INC		A
98b0 98b0 d e61f
98b0 98b0 s 				AND		00011111B
98b2 98b2 d 4f
98b2 98b2 s 				LD		C,A
98b3 98b3 d c3b698
98b3 98b3 s 				JP		calculateMapCell
98b6 98b6 s 
98b6 98b6 s calculateMapCell:
98b6 98b6 d cd9997
98b6 98b6 s 				CALL	getAddressPF
98b9 98b9 d 7e
98b9 98b9 s 				LD		A,(HL)
98ba 98ba s 
98ba 98ba d bb
98ba 98ba s 				CP		E			;Compare current data (A) with E (the path were looking at)
98bb 98bb d d8
98bb 98bb s 				RET		C			;If carry is set (A < E)(whats there already < our path) then this route is a dud
98bc 98bc d c8
98bc 98bc s 				RET		Z			;If its equal we dont want to continue as we alreay have an equally fast route
98bd 98bd d 73
98bd 98bd s 				LD		(HL),E
98be 98be d e1
98be 98be s 				POP		HL			;We need the return adress on the top of the stack
98bf 98bf d c5
98bf 98bf s 				PUSH	BC			;Push Cell so it can be visited
98c0 98c0 d e5
98c0 98c0 s 				PUSH	HL
98c1 98c1 d c9
98c1 98c1 s 				RET
98c2 98c2 s 
98c2 98c2 s printPFMap:
98c2 98c2 d 210100
98c2 98c2 s                 LD		HL, $01
98c5 98c5 d e5
98c5 98c5 s 				PUSH	HL
98c6 98c6 d 211a00
98c6 98c6 s 				LD		HL, $1A
98c9 98c9 d e5
98c9 98c9 s 				PUSH	HL
98ca 98ca d cd2299
98ca 98ca s 				CALL	moveCursor
98cd 98cd d 3e20
98cd 98cd s 				ld		a,32
98cf 98cf d 47
98cf 98cf s 				ld		b,a			; 32 chars per line
98d0 98d0 d 3e1a
98d0 98d0 s                 ld		a,$1A
98d2 98d2 d 4f
98d2 98d2 s 				ld		c,a			; 32 lines per map
98d3 98d3 d 2100d0
98d3 98d3 s 				ld		hl,pathFindMap
98d6 98d6 d 7e
98d6 98d6 s pmPFLoop:		ld		a,(hl)		; get char
98d7 98d7 d feff
98d7 98d7 s                 cp      0FFH
98d9 98d9 d caf298
98d9 98d9 s                 JP      Z,pmPFSkip
98dc 98dc d cd6499
98dc 98dc s 				call	NumToHex	; decode what to print
98df 98df d 3e20
98df 98df s pmPFAfterSkip:  ld      a,' '
98e1 98e1 d cf
98e1 98e1 s                 rst     08H
98e2 98e2 d 23
98e2 98e2 s 				inc		hl			; next char
98e3 98e3 d 10f1
98e3 98e3 s 				djnz	pmPFLoop		; if were not at the end of a line, print next char
98e5 98e5 d cd1999
98e5 98e5 s 				call	newline		; if we are, print a new line
98e8 98e8 d 41
98e8 98e8 s 				ld		b,c			;are we at the end of a block
98e9 98e9 d 1001
98e9 98e9 s 				djnz	pmPFNextLine
98eb 98eb d c9
98eb 98eb s 				ret
98ec 98ec s pmPFNextLine:	
98ec 98ec d 48
98ec 98ec s 				ld		c,b			;copy decremented b back to c
98ed 98ed d 3e20
98ed 98ed s 				ld 		a,32		;refill b withj 32
98ef 98ef d 47
98ef 98ef s 				ld		b,a
98f0 98f0 d 18e4
98f0 98f0 s 				jr		pmPFLoop	;draw next char
98f2 98f2 s pmPFSkip:       
98f2 98f2 d 3e20
98f2 98f2 s                 ld      a,' '
98f4 98f4 d cf
98f4 98f4 s                 rst     08H
98f5 98f5 d 3e20
98f5 98f5 s                 ld      a,' '
98f7 98f7 d cf
98f7 98f7 s                 rst     08H
98f8 98f8 f main.asm
98f8 98f8 d c3df98
98f8 98f8 s                 JP      pmPFAfterSkip
98fb 98fb s 
98fb 98fb s ;------HUD;
98fb 98fb s include hud.asm
98fb 98fb f hud.asm
98fb 98fb s score			.EQU	8900H		;Score
98fb 98fb s 
98fb 98fb s printScore:					
98fb 98fb d 210200
98fb 98fb s 				LD		HL, $02
98fe 98fe d e5
98fe 98fe s 				PUSH	HL
98ff 98ff d 212300
98ff 98ff s 				LD		HL, $23
9902 9902 d e5
9902 9902 s 				PUSH	HL
9903 9903 d cd2299
9903 9903 s 				CALL	moveCursor
9906 9906 d 21d299
9906 9906 s 				LD		HL, scoreHUD
9909 9909 d cd9499
9909 9909 s 				CALL 	print
990c 990c d 2a0089
990c 990c s 				LD		HL, (score)
990f 990f d cd3999
990f 990f s 				CALL	HLToDec
9912 9912 d 3e0a
9912 9912 s 				LD		A,LF
9914 9914 d cf
9914 9914 s 				RST     08H
9915 9915 d 3e0d
9915 9915 s 				LD		A,CR
9917 9917 d cf
9917 9917 s 				RST     08H
9918 9918 f main.asm
9918 9918 d c9
9918 9918 s 				RET
9919 9919 s 			
9919 9919 s ;------- Libs ------------;
9919 9919 s include libs.asm
9919 9919 f libs.asm
9919 9919 s seed			.EQU	8888H		;Random seed
9919 9919 s 
9919 9919 s newline:			
9919 9919 d f5
9919 9919 s 				push 	af
991a 991a d 3e0d
991a 991a s 				ld		a, CR
991c 991c d cf
991c 991c s 				rst 	08H
991d 991d d 3e0a
991d 991d s 				ld		a, LF
991f 991f d cf
991f 991f s 				rst 	08H
9920 9920 d f1
9920 9920 s 				pop 	af
9921 9921 d c9
9921 9921 s 				ret
9922 9922 s 			
9922 9922 s ;move cursor to (sp,sp-2)				
9922 9922 s moveCursor:		
9922 9922 d d1
9922 9922 s 				POP		DE
9923 9923 d 3e1b
9923 9923 s 				LD		A,$1B
9925 9925 d cf
9925 9925 s 				RST     08H
9926 9926 d 3e5b
9926 9926 s 				LD		A,'['
9928 9928 d cf
9928 9928 s 				RST     08H
9929 9929 d e1
9929 9929 s 				POP		HL
992a 992a d cd3999
992a 992a s 				CALL	HLToDec
992d 992d d 3e3b
992d 992d s 				LD		A,$3B
992f 992f d cf
992f 992f s 				RST     08H
9930 9930 d e1
9930 9930 s 				POP		HL
9931 9931 d cd3999
9931 9931 s 				CALL	HLToDec
9934 9934 d 3e66
9934 9934 s 				LD		A,'f'
9936 9936 d cf
9936 9936 s 				RST     08H
9937 9937 d d5
9937 9937 s 				PUSH	DE
9938 9938 d c9
9938 9938 s 				RET
9939 9939 s 
9939 9939 s ;Prints	hl as decimal			
9939 9939 s HLToDec:
9939 9939 d f5
9939 9939 s 				PUSH	AF
993a 993a d c5
993a 993a s 				PUSH	BC
993b 993b d cd4199
993b 993b s 				CALL	DispHL
993e 993e d c1
993e 993e s 				POP		BC
993f 993f d f1
993f 993f s 				POP		AF
9940 9940 d c9
9940 9940 s 				RET
9941 9941 s DispHL:
9941 9941 d 01f0d8
9941 9941 s 				ld		bc,-10000
9944 9944 d cd5a99
9944 9944 s 				call	Num1
9947 9947 d 0118fc
9947 9947 s 				ld		bc,-1000
994a 994a d cd5a99
994a 994a s 				call	Num1
994d 994d d 019cff
994d 994d s 				ld		bc,-100
9950 9950 d cd5a99
9950 9950 s 				call	Num1
9953 9953 d 0ef6
9953 9953 s 				ld		c,-10
9955 9955 d cd5a99
9955 9955 s 				call	Num1
9958 9958 d 0eff
9958 9958 s 				ld		c,-1
995a 995a d 3e2f
995a 995a s Num1:			ld		a,'0'-1
995c 995c d 3c
995c 995c s Num2:			inc		a
995d 995d d 09
995d 995d s 				add		hl,bc
995e 995e d 38fc
995e 995e s 				jr		c,Num2
9960 9960 d ed42
9960 9960 s 				sbc		hl,bc
9962 9962 d cf
9962 9962 s 				RST     08H
9963 9963 d c9
9963 9963 s 				ret
9964 9964 s ;Print A as HEX				
9964 9964 s NumToHex:    	
9964 9964 d c5
9964 9964 s 				push	bc
9965 9965 d f5
9965 9965 s                 push    af
9966 9966 d 4f
9966 9966 s 				ld 		c, a   		; a = number to convert
9967 9967 d cd7399
9967 9967 s             	call 	Num1H
996a 996a d cf
996a 996a s             	RST     08H
996b 996b d 79
996b 996b s             	ld 		a, c
996c 996c d cd7799
996c 996c s             	call 	Num2H
996f 996f d cf
996f 996f s             	RST     08H
9970 9970 d f1
9970 9970 s                 pop     af
9971 9971 d c1
9971 9971 s 				pop		bc
9972 9972 d c9
9972 9972 s             	ret
9973 9973 s 
9973 9973 d 1f
9973 9973 s Num1H:        	rra
9974 9974 d 1f
9974 9974 s             	rra
9975 9975 d 1f
9975 9975 s             	rra
9976 9976 d 1f
9976 9976 s            		rra
9977 9977 d f6f0
9977 9977 s Num2H:        	or 		$F0
9979 9979 d 27
9979 9979 s             	daa
997a 997a d c6a0
997a 997a s             	add 	a, $A0
997c 997c d ce40
997c 997c s             	adc 	a, $40 		; Ascii hex at this point (0 to F)   
997e 997e d c9
997e 997e s             	ret
997f 997f s 
997f 997f s ;Get ABS of A
997f 997f s absA:
997f 997f d b7
997f 997f s      or a
9980 9980 d f0
9980 9980 s      ret p
9981 9981 d ed44
9981 9981 s      neg
9983 9983 d c9
9983 9983 s      ret
9984 9984 s 
9984 9984 s ;getArAndomA	 
9984 9984 s randomA:				
9984 9984 d 3a8888
9984 9984 s 				ld a, 	(seed)
9987 9987 d 47
9987 9987 s 				ld b, 	a 
9988 9988 s 
9988 9988 d 0f
9988 9988 s 				rrca ; multiply by 32
9989 9989 d 0f
9989 9989 s 				rrca
998a 998a d 0f
998a 998a s 				rrca
998b 998b d ee1f
998b 998b s 				xor $1f
998d 998d s 
998d 998d d 80
998d 998d s 				add 	a, b
998e 998e d deff
998e 998e s 				sbc a, 255 ; carry
9990 9990 s 
9990 9990 d 328888
9990 9990 s 				ld (seed), a
9993 9993 d c9
9993 9993 s 				ret
9994 9994 s 
9994 9994 s ;------- Print string
9994 9994 d f5
9994 9994 s print:			PUSH 	AF				; Preserve AF				
9995 9995 d 7e
9995 9995 s printLoop:      LD      A,(HL)          ; Get character
9996 9996 d b7
9996 9996 s                 OR      A               ; Is it $00 ?
9997 9997 d 2804
9997 9997 s                 JR     	Z,printRet      ; Then RETurn on terminator
9999 9999 d cf
9999 9999 s                 RST     08H             ; Print it
999a 999a d 23
999a 999a s                 INC     HL              ; Next Character
999b 999b d 18f8
999b 999b s                 JR      printLoop       ; Continue until $00
999d 999d s 				
999d 999d s ;delay loop
999d 999d s printRet:		
999d 999d d f1
999d 999d s 				POP		AF
999e 999e d c9
999e 999e s 				RET
999f 999f s delay:
999f 999f d 00
999f 999f s 				NOP
99a0 99a0 d 0b
99a0 99a0 s 				DEC 	BC
99a1 99a1 d 78
99a1 99a1 s 				LD 		A,B
99a2 99a2 d b1
99a2 99a2 s 				OR 		C
99a3 99a3 d c8
99a3 99a3 s 				RET 	Z
99a4 99a4 f main.asm
99a4 99a4 d 18f9
99a4 99a4 s 				JR 		delay
99a6 99a6 s 
99a6 99a6 s ;Strings
99a6 99a6 d 1b5b33346d231b5b306d00
99a6 99a6 s wall:			.BYTE	1BH,"[34m#",1BH,"[0m",0
99b1 99b1 d 1b5b39376d6f1b5b306d00
99b1 99b1 s powerPellet:	.BYTE	1BH,"[97mo",1BH,"[0m",0
99bc 99bc d 1b5b33376d2a1b5b306d00
99bc 99bc s pellet:			.BYTE	1BH,"[37m*",1BH,"[0m",0
99c7 99c7 d 1b5b33316d401b5b306d00
99c7 99c7 s superFruit:		.BYTE	1BH,"[31m@",1BH,"[0m",0
99d2 99d2 s 
99d2 99d2 d 53636f72653a2000
99d2 99d2 s scoreHUD:     	.BYTE "Score: ",0
99da 99da s 
99da 99da d 1b5b39336d431b5b306d00
99da 99da s pacman:			.BYTE	1BH,"[93mC",1BH,"[0m",0
99e5 99e5 s 
99e5 99e5 d 2000
99e5 99e5 s void:			.BYTE	" ",0
99e7 99e7 s 
99e7 99e7 d 1b5b481b5b324a00
99e7 99e7 s cls:      	  	.BYTE 1BH,"[H",1BH,"[2J",0
99ef 99ef d 1b5b3f32356c00
99ef 99ef s hideCursor:	  	.BYTE	1BH,"[?25l",0
99f6 99f6 d 1b5b3f32356800
99f6 99f6 s showCursor:	  	.BYTE	1BH,"[?25h",0
99fd 99fd s 
99fd 99fd s ;----- Map ------		
c000 c000 s 	.ORG 0C000H
c000 c000 s include map.asm
c000 c000 f map.asm
c000 c000 s ;----- Map data bit positions
c000 c000 s upBit			.EQU	0
c000 c000 s downBit			.EQU	1
c000 c000 s leftBit			.EQU	2
c000 c000 s rightBit		.EQU	3
c000 c000 s powerpBit		.EQU	4
c000 c000 s pelletBit		.EQU	5
c000 c000 s wallBit			.EQU	6
c000 c000 s sfBit			.EQU	7
c000 c000 s 
c000 c000 s ;----Pellet
c000 c000 s ww 		.EQU	40H
c000 c000 s 
c000 c000 s hp 		.EQU	2CH		;left 	right	pellet
c000 c000 s gp		.EQU	23H		;up		down	pellet
c000 c000 s 
c000 c000 s lp		.EQU	26H		;down 	left 	pellet
c000 c000 s rp		.EQU	2AH		;down 	right	pellet
c000 c000 s up		.EQU	25H		;up 	left	pellet
c000 c000 s dp		.EQU	29H		;up 	right	pellet
c000 c000 s 
c000 c000 s bp		.EQU	2BH		;up		down	right	pellet
c000 c000 s cp		.EQU	27H		;up		down	left	pellet
c000 c000 s vp		.EQU	2EH		;down	left	right	pellet
c000 c000 s kp		.EQU	2DH		;up		left	right	pellet
c000 c000 s 
c000 c000 s xp		.EQU	2FH		;all	pellet
c000 c000 s ;------- No pellet
c000 c000 s hn 		.EQU	0CH		;left 	right	pellet
c000 c000 s gn		.EQU	03H		;up		down	pellet
c000 c000 s 
c000 c000 s ln		.EQU	06H		;down 	left 	pellet
c000 c000 s rn		.EQU	0AH		;down 	right	pellet
c000 c000 s un		.EQU	05H		;up 	left	pellet
c000 c000 s dn		.EQU	09H		;up 	right	pellet
c000 c000 s 
c000 c000 s bn		.EQU	0BH		;up		down	right	pellet
c000 c000 s cn		.EQU	07H		;up		down	left	pellet
c000 c000 s vn		.EQU	0EH		;down	left	right	pellet
c000 c000 s kn		.EQU	0DH		;up		left	right	pellet
c000 c000 s 
c000 c000 s xn		.EQU	0FH		;all	pellet
c000 c000 s ;--------Power Pellet
c000 c000 s hs 		.EQU	1CH		;left 	right	pellet
c000 c000 s gs		.EQU	13H		;up		down	pellet
c000 c000 s 
c000 c000 s ls		.EQU	16H		;down 	left 	pellet
c000 c000 s rs		.EQU	1AH		;down 	right	pellet
c000 c000 s us		.EQU	15H		;up 	left	pellet
c000 c000 s ds		.EQU	19H		;up 	right	pellet
c000 c000 s 
c000 c000 s bs		.EQU	1BH		;up		down	right	pellet
c000 c000 s cs		.EQU	17H		;up		down	left	pellet
c000 c000 s vs		.EQU	1EH		;down	left	right	pellet
c000 c000 s ks		.EQU	1DH		;up		left	right	pellet
c000 c000 s 
c000 c000 s xs		.EQU	1FH		;all	pellet
c000 c000 s 
c000 c000 s 
c000 c000 d 0000404040404040404040404040404040404040404040404040404040400000
c000 c000 s map:	.BYTE	00,00,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,00,00
c020 c020 d 0000402a2c2c2c2c2e2c2c2c2c2c2640402a2c2c2c2c2c2e2c2c2c2c26400000
c020 c020 s 		.BYTE	00,00,ww,rp,hp,hp,hp,hp,vp,hp,hp,hp,hp,hp,lp,ww,ww,rp,hp,hp,hp,hp,hp,vp,hp,hp,hp,hp,lp,ww,00,00
c040 c040 d 0000401340404040234040404040234040234040404040234040404013400000
c040 c040 s 		.BYTE	00,00,ww,gs,ww,ww,ww,ww,gp,ww,ww,ww,ww,ww,gp,ww,ww,gp,ww,ww,ww,ww,ww,gp,ww,ww,ww,ww,gs,ww,00,00
c060 c060 d 0000402340404040234040404040234040234040404040234040404023400000
c060 c060 s 		.BYTE	00,00,ww,gp,ww,ww,ww,ww,gp,ww,ww,ww,ww,ww,gp,ww,ww,gp,ww,ww,ww,ww,ww,gp,ww,ww,ww,ww,gp,ww,00,00
c080 c080 d 0000402b2c2c2c2c2f2c2c2e2c2c2d2c2c2d2c2c2e2c2c2f2c2c2c2c27400000
c080 c080 s 		.BYTE	00,00,ww,bp,hp,hp,hp,hp,xp,hp,hp,vp,hp,hp,kp,hp,hp,kp,hp,hp,vp,hp,hp,xp,hp,hp,hp,hp,cp,ww,00,00
c0a0 c0a0 d 0000402340404040234040234040404040404040234040234040404023400000
c0a0 c0a0 s 		.BYTE	00,00,ww,gp,ww,ww,ww,ww,gp,ww,ww,gp,ww,ww,ww,ww,ww,ww,ww,ww,gp,ww,ww,gp,ww,ww,ww,ww,gp,ww,00,00
c0c0 c0c0 d 000040292c2c2c2c274040292c2c2640402a2c2c2540402b2c2c2c2c25400000
c0c0 c0c0 s 		.BYTE	00,00,ww,dp,hp,hp,hp,hp,cp,ww,ww,dp,hp,hp,lp,ww,ww,rp,hp,hp,up,ww,ww,bp,hp,hp,hp,hp,up,ww,00,00
c0e0 c0e0 d 0000404040404040234040404040034040034040404040234040404040400000
c0e0 c0e0 s 		.BYTE	00,00,ww,ww,ww,ww,ww,ww,gp,ww,ww,ww,ww,ww,gn,ww,ww,gn,ww,ww,ww,ww,ww,gp,ww,ww,ww,ww,ww,ww,00,00
c100 c100 d 00000000000000402340400a0c0c0d0c0c0d0c0c064040234000000000000000
c100 c100 s 		.BYTE	00,00,00,00,00,00,00,ww,gp,ww,ww,rn,hn,hn,kn,hn,hn,kn,hn,hn,ln,ww,ww,gp,ww,00,00,00,00,00,00,00
c120 c120 d 0000000000000040234040034040400000404040034040234000000000000000
c120 c120 s 		.BYTE	00,00,00,00,00,00,00,ww,gp,ww,ww,gn,ww,ww,ww,00,00,ww,ww,ww,gn,ww,ww,gp,ww,00,00,00,00,00,00,00
c140 c140 d 4040404040404040234040034000000000000040034040234040404040404040
c140 c140 s 		.BYTE	ww,ww,ww,ww,ww,ww,ww,ww,gp,ww,ww,gn,ww,00,00,00,00,00,00,ww,gn,ww,ww,gp,ww,ww,ww,ww,ww,ww,ww,ww
c160 c160 d 0c0c0c0c0c0c0c0c2f0c0c0740000000000000400b0c0c2f0c0c0c0c0c0c0c0c
c160 c160 s 		.BYTE	hn,hn,hn,hn,hn,hn,hn,hn,xp,hn,hn,cn,ww,00,00,00,00,00,00,ww,bn,hn,hn,xp,hn,hn,hn,hn,hn,hn,hn,hn
c180 c180 d 4040404040404040234040034000000000000040034040234040404040404040
c180 c180 s 		.BYTE	ww,ww,ww,ww,ww,ww,ww,ww,gp,ww,ww,gn,ww,00,00,00,00,00,00,ww,gn,ww,ww,gp,ww,ww,ww,ww,ww,ww,ww,ww
c1a0 c1a0 d 0000000000000040234040034040404040404040034040234000000000000000
c1a0 c1a0 s 		.BYTE	00,00,00,00,00,00,00,ww,gp,ww,ww,gn,ww,ww,ww,ww,ww,ww,ww,ww,gn,ww,ww,gp,ww,00,00,00,00,00,00,00
c1c0 c1c0 d 00000000000000402340400b0c0c0c0c0c0c0c0c074040234000000000000000
c1c0 c1c0 s 		.BYTE	00,00,00,00,00,00,00,ww,gp,ww,ww,bn,hn,hn,hn,hn,hn,hn,hn,hn,cn,ww,ww,gp,ww,00,00,00,00,00,00,00
c1e0 c1e0 d 0000404040404040234040034040404040404040034040234040404040400000
c1e0 c1e0 s 		.BYTE	00,00,ww,ww,ww,ww,ww,ww,gp,ww,ww,gn,ww,ww,ww,ww,ww,ww,ww,ww,gn,ww,ww,gp,ww,ww,ww,ww,ww,ww,00,00
c200 c200 d 0000402a2c2c2c2c2f2c2c2d2c2c2640402a2c2c2d2c2c2f2c2c2c2c26400000
c200 c200 s 		.BYTE	00,00,ww,rp,hp,hp,hp,hp,xp,hp,hp,kp,hp,hp,lp,ww,ww,rp,hp,hp,kp,hp,hp,xp,hp,hp,hp,hp,lp,ww,00,00
c220 c220 d 0000402340404040234040404040234040234040404040234040404023400000
c220 c220 s 		.BYTE	00,00,ww,gp,ww,ww,ww,ww,gp,ww,ww,ww,ww,ww,gp,ww,ww,gp,ww,ww,ww,ww,ww,gp,ww,ww,ww,ww,gp,ww,00,00
c240 c240 d 000040192c2640402b2c2c2e2c2c2d2c2c2d2c2c2e2c2c2740402a2c15400000
c240 c240 s 		.BYTE	00,00,ww,ds,hp,lp,ww,ww,bp,hp,hp,vp,hp,hp,kp,hp,hp,kp,hp,hp,vp,hp,hp,cp,ww,ww,rp,hp,us,ww,00,00
c260 c260 d 0000404040234040234040234040404040404040234040234040234040400000
c260 c260 s 		.BYTE	00,00,ww,ww,ww,gp,ww,ww,gp,ww,ww,gp,ww,ww,ww,ww,ww,ww,ww,ww,gp,ww,ww,gp,ww,ww,gp,ww,ww,ww,00,00
c280 c280 d 0000402a2c2d2c2c254040292c2c2640402a2c2c254040292c2c2d2c26400000
c280 c280 s 		.BYTE	00,00,ww,rp,hp,kp,hp,hp,up,ww,ww,dp,hp,hp,lp,ww,ww,rp,hp,hp,up,ww,ww,dp,hp,hp,kp,hp,lp,ww,00,00
c2a0 c2a0 d 0000402340404040404040404040234040234040404040404040404023400000
c2a0 c2a0 s 		.BYTE	00,00,ww,gp,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,gp,ww,ww,gp,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,gp,ww,00,00
c2c0 c2c0 d 000040292c2c2c2c2c2c2c2c2c2c2d2c2c2d2c2c2c2c2c2c2c2c2c2c25400000
c2c0 c2c0 s 		.BYTE	00,00,ww,dp,hp,hp,hp,hp,hp,hp,hp,hp,hp,hp,kp,hp,hp,kp,hp,hp,hp,hp,hp,hp,hp,hp,hp,hp,up,ww,00,00
c2e0 c2e0 d 0000404040404040404040404040404040404040404040404040404040400000
c2e0 c2e0 s 		.BYTE	00,00,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,00,00
c300 c300 d 0000000000000000000000000000000000000000000000000000000000000000
c300 c300 s 		.BYTE	00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
c320 c320 d 0000000000000000000000000000000000000000000000000000000000000000
c320 c320 s 		.BYTE	00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
c340 c340 d 0000000000000000000000000000000000000000000000000000000000000000
c340 c340 s 		.BYTE	00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
c360 c360 d 0000000000000000000000000000000000000000000000000000000000000000
c360 c360 s 		.BYTE	00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
c380 c380 d 0000000000000000000000000000000000000000000000000000000000000000
c380 c380 s 		.BYTE	00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
c3a0 c3a0 d 0000000000000000000000000000000000000000000000000000000000000000
c3a0 c3a0 s 		.BYTE	00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
c3c0 c3c0 d 0000000000000000000000000000000000000000000000000000000000000000
c3c0 c3c0 s 		.BYTE	00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
c3e0 c3e0 f main.asm
c3e0 c3e0 d 0000000000000000000000000000000000000000000000000000000000000000
c3e0 c3e0 s 		.BYTE	00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
c400 c400 s 
c400 c400 s ;-----Path find map
c400 c400 s pathFindMap	.EQU	0D000H
c400 c400 s 
c400 c400 f main.asm
c400 c400 s liveMap		.EQU	0E000H
000b v bn
0007 v cn
000a v lf
002b v bp
0029 v dp
000d v cr
0027 v cp
0023 v gp
002c v hp
000c v hn
0003 v gn
002d v kp
0026 v lp
0006 v ln
0009 v dn
000d v kn
000a v rn
001c v hs
002a v rp
0005 v un
0025 v up
002e v vp
000e v vn
002f v xp
000f v xn
0013 v gs
0016 v ls
001a v rs
0015 v us
0040 v ww
0019 v ds
001b v bs
0017 v cs
001e v vs
001d v ks
001f v xs
c000 a map
99e7 a cls
995a a num1
995c a num2
997f a absa
8888 v seed
8100 v pacx
8101 v pacy
99a6 a wall
99e5 a void
9735 a move
9973 a num1h
9977 a num2h
999f a delay
0007 v sfbit
9749 a moved
8900 v score
974f a movel
0000 v upbit
9755 a mover
9743 a moveu
9994 a print
9075 a input
9108 a checkh
99da a pacman
9116 a checkv
97e3 a pmchar
9941 a disphl
99bc a pellet
9126 a movepm
948c a oghost
95d0 a pghost
9348 a rghost
97cf a pmloop
9714 a tghost
97fe a printp
971f a sghost0
972a a sghost1
8102 v paccdir
8103 v pacndir
9984 a randoma
9939 a hltodec
908f a clearpm
0002 v leftbit
e000 v livemap
0006 v wallbit
9775 a initmap
9919 a newline
9131 a movepma
90e2 a getmove
0001 v downbit
980e a printsf
909b a printpm
8120 v oghostx
8121 v oghosty
8130 v pghostx
8110 v rghostx
8111 v rghosty
8131 v pghosty
8140 v tghostx
8141 v tghosty
97f6 a printpp
9039 a gameloop
8104 v ppactive
0003 v rightbit
99d2 a scorehud
000e v initpacx
000e v initpacy
8113 v ghostdis
98f2 a pmpfskip
97c8 a printmap
98d6 a pmpfloop
9964 a numtohex
999d a printret
90c2 a eatpellet
0005 v pelletbit
981e a pmcharret
8122 v oghostdir
8132 v pghostdir
8112 v rghostdir
8142 v tghostdir
917c a initghost
9189 a moveghost
0004 v powerpbit
91a9 a ghostmove
9806 a printwall
9816 a printvoid
9995 a printloop
9831 a pfnextrow
89f2 v originalbc
913d a killpacman
976c a movedvalid
9155 a clearghost
90da a eatppellet
90ce a eatspellet
976f a movelvalid
99ef a hidecursor
9772 a movervalid
9769 a moveuvalid
908b a validinput
97b1 a printmapat
91c4 a ghostmoved
98c2 a printpfmap
97dd a pmnextline
938d a oghostinit
98fb a printscore
94d1 a pghostinit
9249 a rghostinit
939d a oghostmove
9615 a tghostinit
9259 a rghostmove
94e1 a pghostmove
9625 a tghostmove
91b7 a ghostmoveu
9162 a printghost
91d1 a ghostmovel
91de a ghostmover
9922 a movecursor
92fc a rghostpfpp
9440 a oghostpfpp
9584 a pghostpfpp
96c8 a tghostpfpp
99c7 a superfruit
99f6 a showcursor
d000 v pathfindmap
916f a colideghost
9353 a oghostclear
9497 a pghostclear
920f a rghostclear
95db a tghostclear
975b a ismovevalid
0020 v ppellettics
947e a oghoststack
95c2 a pghoststack
933a a rghoststack
9706 a tghoststack
99b1 a powerpellet
9827 a initppfloop
8125 v oghosttimer
8135 v pghosttimer
8115 v rghosttimer
8145 v tghosttimer
000f v oghostinitx
935f a oghostprint
94a3 a pghostprint
000f v rghostinitx
921b a rghostprint
9196 a printsghost
95e7 a tghostprint
0008 v rghostinity
0008 v oghostinity
000f v pghostinitx
0008 v pghostinity
000f v tghostinitx
0008 v tghostinity
90b5 a getpmmapdata
91a2 a sghost1print
93ff a oghostcheckd
9543 a pghostcheckd
92bb a rghostcheckd
9687 a tghostcheckd
9799 a getaddresspf
940d a oghostcheckl
9551 a pghostcheckl
92c9 a rghostcheckl
9820 a initpathfind
9695 a tghostcheckl
9455 a oghostcolide
9599 a pghostcolide
941b a oghostcheckr
9311 a rghostcolide
92d7 a rghostcheckr
90fe a calcnextmove
96dd a tghostcolide
92ad a rghostchecku
93f1 a oghostchecku
9535 a pghostchecku
920a a ghostdostack
955f a pghostcheckr
9679 a tghostchecku
96a3 a tghostcheckr
98ec a pmpfnextline
000f v oghoststorex
000b v oghoststorey
0010 v pghoststorex
000e v rghoststorex
000b v rghoststorey
000b v pghoststorey
0011 v tghoststorex
000b v tghoststorey
9892 a calculatemapd
989e a calculatemapl
98aa a calculatemapr
9886 a calculatemapu
0030 v pathfinddepth
9781 a getmapaddress
9380 a oghostmapdata
94c4 a pghostmapdata
923c a rghostmapdata
9608 a tghostmapdata
98df a pmpfafterskip
90f7 a nextmovevalid
9148 a ghostnextmove
0020 v caughtjaletime
93b6 a oghostdectimer
9429 a oghostpathfind
94fa a pghostdectimer
9272 a rghostdectimer
92e5 a rghostpathfind
956d a pghostpathfind
963e a tghostdectimer
96b1 a tghostpathfind
93c7 a oghostnextmove
950b a pghostnextmove
9283 a rghostnextmove
964f a tghostnextmove
91eb a ghostcheckstack
89f0 v oldstackpointer
0020 v oghostinittimer
944c a oghostsetnewdir
0030 v pghostinittimer
0010 v rghostinittimer
9308 a rghostsetnewdir
9590 a pghostsetnewdir
0040 v tghostinittimer
96d4 a tghostsetnewdir
98b6 a calculatemapcell
9838 a calculatepathmap
984a a calculatepathmaploop
