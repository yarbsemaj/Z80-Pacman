binary-debuggable-source
0000 0000 f main.asm
0000 0000 s CR              .EQU     0DH
0000 0000 s LF              .EQU     0AH
0000 0000 s 
0000 0000 s oldStackPointer	.EQU	89F0H		;Old Stack Location 	
0000 0000 s originalBC		.EQU	89F2H		;BC before manipulation, used for calculating board position
0000 0000 s 
9000 9000 s 	.ORG 9000H
9000 9000 d ed73f089
9000 9000 s 			ld		(oldStackPointer), SP
9004 9004 d 31ffff
9004 9004 s 			ld		sp,0FFFFH
9007 9007 s gameTop:
9007 9007 d cdc197
9007 9007 s 			CALL	initMap
900a 900a d 21fda0
900a 900a s 			LD		HL, cls			;Clear screen
900d 900d d cd74a0
900d 900d s 			CALL	print
9010 9010 d 2105a1
9010 9010 s 			LD		HL, hideCursor	;Hide Cursor
9013 9013 d cd74a0
9013 9013 s 			CALL	print
9016 9016 d cd5398
9016 9016 s 			CALL 	printMap
9019 9019 d c3409e
9019 9019 s 			JP		displayTitleScreen
901c 901c s startGame:
901c 901c d cda190
901c 901c s 			CALL	initPacman
901f 901f d cdcd91
901f 901f s 			CALL	initGhost
9022 9022 d cdc197
9022 9022 s 			CALL	initMap
9025 9025 d 21fda0
9025 9025 s 			LD		HL, cls			;Clear screen
9028 9028 d cd74a0
9028 9028 s 			CALL	print
902b 902b d cd5398
902b 902b s 			CALL 	printMap
902e 902e d cdce99
902e 902e s 			CALL	countdown
9031 9031 d 21f9a0
9031 9031 s 			LD		HL, home		;Go home
9034 9034 d cd74a0
9034 9034 s 			CALL	print
9037 9037 d cd5398
9037 9037 s 			CALL 	printMap
903a 903a s gameLoop:		
903a 903a d cd8790
903a 903a s 			call	input
903d 903d d cd1191
903d 903d s 			call 	getMove
9040 9040 d cdc490
9040 9040 s 			call 	clearPM
9043 9043 d cd5591
9043 9043 s 			call	movePM
9046 9046 d cdd090
9046 9046 s 			call 	printPM
9049 9049 d cdf190
9049 9049 s 			call	eatPellet
904c 904c s 			
904c 904c d cdab98
904c 904c s 			call	initPathFind
904f 904f d cdc398
904f 904f s 			call	calculatePathMap
9052 9052 s 
9052 9052 d cd9991
9052 9052 s 			call	ghostNextMove
9055 9055 d cda691
9055 9055 s 			call	clearGhost
9058 9058 d cdc091
9058 9058 s 			call	colideGhost
905b 905b d cdda91
905b 905b s 			call	moveGhost
905e 905e d cdb391
905e 905e s 			call	printGhost
9061 9061 s 
9061 9061 d cdc091
9061 9061 s 			call	colideGhost
9064 9064 s 
9064 9064 s 
9064 9064 s 			;call 	printPFMap
9064 9064 s 			
9064 9064 d cd8299
9064 9064 s 			call 	printHUD
9067 9067 d cdf59f
9067 9067 s 			call	newline
906a 906a d cde597
906a 906a s 			call	checkNextLevel
906d 906d d 060f
906d 906d s 			LD 		B,0FH   ;delay
906f 906f d 0eff
906f 906f s 			LD		C,0FFH
9071 9071 d cdc2a0
9071 9071 s 			CALL 	DELAY
9074 9074 d c33a90
9074 9074 s 			JP		gameLoop
9077 9077 d ed7bf089
9077 9077 s 			LD		SP,(oldStackPointer)
907b 907b d c9
907b 907b s 			ret
907c 907c s 
907c 907c d 210ca1
907c 907c s quit:       LD		HL, showCursor	;Hide Cursor
907f 907f d cd74a0
907f 907f s 			CALL	print
9082 9082 d ed7bf089
9082 9082 s             LD		SP,(oldStackPointer)
9086 9086 d c9
9086 9086 s 			RET	
9087 9087 s 		
9087 9087 s ;-------------- Input --------------------------					
9087 9087 s include input.asm	
9087 9087 f input.asm
9087 9087 s input:
9087 9087 d df
9087 9087 s 				RST		18H
9088 9088 d c8
9088 9088 s 				RET		Z
9089 9089 d d7
9089 9089 s 				RST		10H
908a 908a d e6df
908a 908a s 				AND     11011111b       ; lower to uppercase
908c 908c d fe57
908c 908c s 				CP		'W'
908e 908e d 280d
908e 908e s 				JR		Z,validInput
9090 9090 d fe41
9090 9090 s 				CP		'A'
9092 9092 d 2809
9092 9092 s 				JR		Z,validInput
9094 9094 d fe53
9094 9094 s 				CP		'S'
9096 9096 d 2805
9096 9096 s 				JR		Z,validInput
9098 9098 d fe44
9098 9098 s 				CP		'D'
909a 909a d 2801
909a 909a s 				JR		Z,validInput
909c 909c d c9
909c 909c s 				RET
909d 909d s validInput:		
909d 909d d 320381
909d 909d s 				LD		(pacNDir), A
90a0 90a0 f main.asm
90a0 90a0 d c9
90a0 90a0 s 				RET
90a1 90a1 s ;----------Pacman------;
90a1 90a1 s include	pacman.asm
90a1 90a1 f pacman.asm
90a1 90a1 s ;Packman
90a1 90a1 s pacx			.EQU	8100H
90a1 90a1 s pacy			.EQU	8101H
90a1 90a1 s pacCDir			.EQU	8102H		;Pacmans current direction
90a1 90a1 s pacNDir			.EQU	8103H		;Pacman next direction (from key press)
90a1 90a1 s pacLives		.EQU	8105H		;Pacman next direction (from key press)
90a1 90a1 s 
90a1 90a1 s initPacx		.EQU	14
90a1 90a1 s initPacy		.EQU	14
90a1 90a1 s initLives		.EQU	4
90a1 90a1 s 
90a1 90a1 s pPelletTics     .EQU    20H         ;Power Pellet last time
90a1 90a1 s 
90a1 90a1 s pPActive        .EQU    8104H       ;Power Pellet Timer
90a1 90a1 s 
90a1 90a1 s initPacman:
90a1 90a1 d 210000
90a1 90a1 s 				LD		HL, 0H
90a4 90a4 d 220089
90a4 90a4 s 				LD		(score), HL
90a7 90a7 d 3e04
90a7 90a7 s 				LD		a,initLives
90a9 90a9 d 320581
90a9 90a9 s 				LD		(pacLives),a
90ac 90ac d 3e0e
90ac 90ac s resetPacMan:	LD		a, initPacx		;set Pacman Pos
90ae 90ae d 320081
90ae 90ae s 				LD		(pacx),a
90b1 90b1 d 3e0e
90b1 90b1 s 				LD		a, initPacy
90b3 90b3 d 320181
90b3 90b3 s 				LD		(pacy),a
90b6 90b6 d 3e44
90b6 90b6 s 				LD		a, 'D'			;Set start direction
90b8 90b8 d 320281
90b8 90b8 s 				LD		(pacCDir),A
90bb 90bb d 320381
90bb 90bb s 				LD		(pacNDir),A
90be 90be d 3e00
90be 90be s 				LD		a,0
90c0 90c0 d 320481
90c0 90c0 s 				LD		(pPActive),A
90c3 90c3 d c9
90c3 90c3 s 				RET
90c4 90c4 s 
90c4 90c4 s clearPM:
90c4 90c4 d 3a0081
90c4 90c4 s 				LD		A, (pacx)		;Push X to stack
90c7 90c7 d 4f
90c7 90c7 s 				LD		C,A
90c8 90c8 d 3a0181
90c8 90c8 s 				LD		A, (pacy)		;Push Y to stack
90cb 90cb d 47
90cb 90cb s 				LD		B,A
90cc 90cc d cd4498
90cc 90cc s 				CALL 	printMapAt
90cf 90cf d c9
90cf 90cf s 				RET
90d0 90d0 s 				
90d0 90d0 s printPM:
90d0 90d0 d 3a0081
90d0 90d0 s 				LD		A, (pacx)		;Push X to stack
90d3 90d3 d 3c
90d3 90d3 s 				INC		A
90d4 90d4 d 4f
90d4 90d4 s 				LD		C,A
90d5 90d5 d 3a0181
90d5 90d5 s 				LD		A, (pacy)		;Push Y to stack
90d8 90d8 d 3c
90d8 90d8 s 				INC		A
90d9 90d9 d 47
90d9 90d9 s 				LD		B,A
90da 90da d cdfe9f
90da 90da s 				CALL	moveCursor
90dd 90dd d 218e91
90dd 90dd s 				LD		HL, pacman
90e0 90e0 d cd74a0
90e0 90e0 s 				CALL 	print
90e3 90e3 d c9
90e3 90e3 s 				RET
90e4 90e4 s getPMMapData:	
90e4 90e4 d 3a0081
90e4 90e4 s 				LD		A, (pacx)
90e7 90e7 d 4f
90e7 90e7 s 				LD		C,A
90e8 90e8 d 3a0181
90e8 90e8 s 				LD		A, (pacy)
90eb 90eb d 47
90eb 90eb s 				LD		B,A
90ec 90ec d cdcd97
90ec 90ec s 				CALL	getMapAddress
90ef 90ef d 7e
90ef 90ef s                 LD      A,(HL)
90f0 90f0 d c9
90f0 90f0 s 				ret
90f1 90f1 s eatPellet:		;Eat pellet at packman location
90f1 90f1 d cde490
90f1 90f1 s 				CALL 	getPMMapData
90f4 90f4 d cb6f
90f4 90f4 s 				BIT		pelletBit,A
90f6 90f6 d 2005
90f6 90f6 s 				JR		NZ,eatSPellet
90f8 90f8 d cb67
90f8 90f8 s                 BIT		powerPBit,A
90fa 90fa d 200d
90fa 90fa s 				JR		NZ,eatPPellet
90fc 90fc d c9
90fc 90fc s 				RET
90fd 90fd s 				
90fd 90fd s eatSPellet:		
90fd 90fd d e5
90fd 90fd s 				PUSH	HL		
90fe 90fe d 2a0089
90fe 90fe s 				LD		HL,(score)
9101 9101 d 23
9101 9101 s 				INC		HL
9102 9102 d 220089
9102 9102 s 				LD		(score),HL
9105 9105 d e1
9105 9105 s 				POP		HL
9106 9106 d cbae
9106 9106 s 				RES		pelletBit,(HL)
9108 9108 d c9
9108 9108 s 				RET
9109 9109 s 
9109 9109 s eatPPellet:		
9109 9109 d 3e20
9109 9109 s 				LD      A,pPelletTics
910b 910b d 320481
910b 910b s                 LD      (pPActive),A
910e 910e d cba6
910e 910e s                 RES		powerPBit,(HL)
9110 9110 d c9
9110 9110 s 				RET
9111 9111 s 				
9111 9111 s getMove:		;Sets the current move var
9111 9111 d cde490
9111 9111 s 				CALL	getPMMapData
9114 9114 d 57
9114 9114 s 				LD		D,A
9115 9115 d 3a0381
9115 9115 s 				LD		A,(pacNDir)			;Is the next move valid
9118 9118 d cda797
9118 9118 s 				CALL	isMoveValid
911b 911b d 2009
911b 911b s 				JR		NZ,nextMoveValid
911d 911d d 3a0281
911d 911d s 				LD		A,(pacCDir)			;Is the current move valid
9120 9120 d cda797
9120 9120 s 				CALL	isMoveValid
9123 9123 d c0
9123 9123 s 				RET		NZ
9124 9124 d 1807
9124 9124 s 				JR		calcNextMove
9126 9126 s 				
9126 9126 s nextMoveValid:
9126 9126 d 320281
9126 9126 s 				LD		(pacCDir),A
9129 9129 d 320381
9129 9129 s 				LD		(pacNDir),A
912c 912c d c9
912c 912c s 				RET
912d 912d s 				
912d 912d s calcNextMove:	
912d 912d d fe41
912d 912d s 				CP		'A'
912f 912f d 2814
912f 912f s 				JR		Z,checkV
9131 9131 d fe44
9131 9131 s 				CP		'D'
9133 9133 d 2810
9133 9133 s 				JR		Z,checkV
9135 9135 d 1800
9135 9135 s 				JR		checkH
9137 9137 s checkH:
9137 9137 d 3e41
9137 9137 s 				LD		A,'A'
9139 9139 d cda797
9139 9139 s 				CALL	isMoveValid
913c 913c d 20e8
913c 913c s 				JR		NZ,nextMoveValid
913e 913e d 3e44
913e 913e s 				LD		A,'D'
9140 9140 d cda797
9140 9140 s 				CALL	isMoveValid
9143 9143 d 20e1
9143 9143 s 				JR		NZ,nextMoveValid
9145 9145 s checkV:
9145 9145 d 3e57
9145 9145 s 				LD		A,'W'
9147 9147 d cda797
9147 9147 s 				CALL	isMoveValid
914a 914a d 20da
914a 914a s 				JR		NZ,nextMoveValid
914c 914c d 3e53
914c 914c s 				LD		A,'S'
914e 914e d cda797
914e 914e s 				CALL	isMoveValid
9151 9151 d 20d3
9151 9151 s 				JR		NZ,nextMoveValid
9153 9153 d 18e2
9153 9153 s 				JR		checkH
9155 9155 s ;Move
9155 9155 s movePM:
9155 9155 d 3a0481
9155 9155 s 				LD      A,(pPActive)
9158 9158 d b7
9158 9158 s                 OR      A
9159 9159 d ca6091
9159 9159 s                 JP      Z,movePMA
915c 915c d 3d
915c 915c s                 DEC     A
915d 915d d 320481
915d 915d s                 LD      (pPActive),A
9160 9160 d 3a0281
9160 9160 s movePMA:        LD		A,(pacCDir)
9163 9163 d 110081
9163 9163 s 				LD		DE,pacx
9166 9166 d 010181
9166 9166 s 				LD		BC,pacy
9169 9169 d c38197
9169 9169 s 				JP		move
916c 916c s 
916c 916c s killPacman:
916c 916c d e1
916c 916c s 				POP		HL
916d 916d d e1
916d 916d s 				POP		HL
916e 916e d 3a0581
916e 916e s 				LD		A,(pacLives)
9171 9171 d 3d
9171 9171 s 				DEC		A
9172 9172 d b7
9172 9172 s 				OR		A
9173 9173 d ca609f
9173 9173 s 				JP		Z,displayGameOver
9176 9176 d 320581
9176 9176 s 				LD		(pacLives),A
9179 9179 d cdac90
9179 9179 s 				CALL	resetPacMan
917c 917c d cdcd91
917c 917c s 				CALL	initGhost
917f 917f d cdce99
917f 917f s 				CALL	countdown
9182 9182 d 21f9a0
9182 9182 s 				LD		HL, home		;Go home
9185 9185 d cd74a0
9185 9185 s 				CALL	print
9188 9188 d cd5398
9188 9188 s 				CALL 	printMap
918b 918b d c33a90
918b 918b s 				JP		gameLoop
918e 918e s 
918e 918e f main.asm
918e 918e d 1b5b39336d431b5b306d00
918e 918e s pacman:			.BYTE	1BH,"[93mC",1BH,"[0m",0
9199 9199 s ;------------Ghost
9199 9199 s include ghosts.asm
9199 9199 f ghosts.asm
9199 9199 s ghostDis		.EQU	8113H		;ghost move distance from pacman
9199 9199 s caughtJaleTime  .EQU    20H
9199 9199 s 
9199 9199 s ghostNextMove:
9199 9199 d cdd592
9199 9199 s                 CALL    rGhostNextMove
919c 919c d cd1694
919c 919c s                 CALL    oGhostNextMove
919f 919f d cd5795
919f 919f s                 CALL    pGhostNextMove
91a2 91a2 d cd9896
91a2 91a2 s                 CALL    tGhostNextMove
91a5 91a5 d c9
91a5 91a5 s                 RET
91a6 91a6 s clearGhost:
91a6 91a6 d cd6792
91a6 91a6 s                 CALL    rGhostClear
91a9 91a9 d cda893
91a9 91a9 s                 CALL    oGhostClear
91ac 91ac d cde994
91ac 91ac s                 CALL    pGhostClear
91af 91af d cd2a96
91af 91af s                 CALL    tGhostClear
91b2 91b2 d c9
91b2 91b2 s                 RET
91b3 91b3 s printGhost:
91b3 91b3 d cd7392
91b3 91b3 s                 CALL    rGhostPrint
91b6 91b6 d cdb493
91b6 91b6 s                 CALL    oGhostPrint
91b9 91b9 d cdf594
91b9 91b9 s                 CALL    pGhostPrint
91bc 91bc d cd3696
91bc 91bc s                 CALL    tGhostPrint
91bf 91bf d c9
91bf 91bf s                 RET
91c0 91c0 s colideGhost:
91c0 91c0 d cd6393
91c0 91c0 s                 CALL    rGhostColide
91c3 91c3 d cda494
91c3 91c3 s                 CALL    oGhostColide
91c6 91c6 d cde595
91c6 91c6 s                 CALL    pGhostColide
91c9 91c9 d cd2697
91c9 91c9 s                 CALL    tGhostColide
91cc 91cc d c9
91cc 91cc s                 RET
91cd 91cd s initGhost:
91cd 91cd d cd9b92
91cd 91cd s                 CALL    rGhostInit
91d0 91d0 d cddc93
91d0 91d0 s                 CALL    oGhostInit
91d3 91d3 d cd1d95
91d3 91d3 s                 CALL    pGhostInit
91d6 91d6 d cd5e96
91d6 91d6 s                 CALL    tGhostInit
91d9 91d9 d c9
91d9 91d9 s                 RET
91da 91da s moveGhost:
91da 91da d cdab92
91da 91da s                 CALL    rGhostMove
91dd 91dd d cdec93
91dd 91dd s                 CALL    oGhostMove
91e0 91e0 d cd2d95
91e0 91e0 s                 CALL    pGhostMove
91e3 91e3 d cd6e96
91e3 91e3 s                 CALL    tGhostMove
91e6 91e6 d c9
91e6 91e6 s                 RET
91e7 91e7 s 
91e7 91e7 s printSGhost:
91e7 91e7 d cb47
91e7 91e7 s                 BIT     0,A
91e9 91e9 d caf391
91e9 91e9 s                 JP      Z,sGhost1Print
91ec 91ec d 216b97
91ec 91ec s                 LD		HL, sGhost0
91ef 91ef d cd74a0
91ef 91ef s 				CALL 	print
91f2 91f2 d c9
91f2 91f2 s 				RET
91f3 91f3 s sGhost1Print:
91f3 91f3 d 217697
91f3 91f3 s                 LD		HL, sGhost1
91f6 91f6 d cd74a0
91f6 91f6 s 				CALL 	print
91f9 91f9 d c9
91f9 91f9 s 				RET
91fa 91fa s 
91fa 91fa s ghostMove:
91fa 91fa d fe57
91fa 91fa s 				CP		'W'
91fc 91fc d 280a
91fc 91fc s 				JR		Z,ghostMoveU
91fe 91fe d fe41
91fe 91fe s 				CP		'A'
9200 9200 d 281e
9200 9200 s 				JR		Z,ghostMoveL
9202 9202 d fe53
9202 9202 s 				CP		'S'
9204 9204 d 280e
9204 9204 s 				JR		Z,ghostMoveD
9206 9206 d 1824
9206 9206 s 				JR		ghostMoveR
9208 9208 s 
9208 9208 s ghostMoveU:			
9208 9208 d 1a
9208 9208 s 				LD      A, (DE)
9209 9209 d 6f
9209 9209 s                 LD      L,A         ;ld x
920a 920a d 0a
920a 920a s                 LD		A, (BC)
920b 920b d 3d
920b 920b s 				DEC		A
920c 920c d e61f
920c 920c s 				AND		00011111B
920e 920e d 67
920e 920e s                 LD      H,A         ;ld y
920f 920f d cd3892
920f 920f s                 CALL    ghostCheckStack
9212 9212 d 02
9212 9212 s 				LD		(BC),A
9213 9213 d c9
9213 9213 s 				RET
9214 9214 s ghostMoveD:		
9214 9214 d 1a
9214 9214 s 	            LD      A, (DE)
9215 9215 d 6f
9215 9215 s                 LD      L,A         ;ld x
9216 9216 d 0a
9216 9216 s 				LD		A, (BC)
9217 9217 d 3c
9217 9217 s 				INC		A
9218 9218 d e61f
9218 9218 s 				AND		00011111B
921a 921a d 67
921a 921a s                 LD      H,A         ;ld y
921b 921b d cd3892
921b 921b s                 CALL    ghostCheckStack
921e 921e d 02
921e 921e s 				LD		(BC),A
921f 921f d c9
921f 921f s 				RET
9220 9220 s ghostMoveL:		
9220 9220 d 0a
9220 9220 s                 LD      A, (BC)
9221 9221 d 67
9221 9221 s                 LD      H,A         ;ld y
9222 9222 d 1a
9222 9222 s 				LD		A, (DE)
9223 9223 d 3d
9223 9223 s 				DEC		A
9224 9224 d e61f
9224 9224 s 				AND		00011111B
9226 9226 d 6f
9226 9226 s                 LD      L,A         ;ld x
9227 9227 d cd3892
9227 9227 s                 CALL    ghostCheckStack
922a 922a d 12
922a 922a s 				LD		(DE),A
922b 922b d c9
922b 922b s 				RET
922c 922c s ghostMoveR:		
922c 922c d 0a
922c 922c s                 LD      A, (BC)
922d 922d d 67
922d 922d s                 LD      H,A         ;ld y
922e 922e d 1a
922e 922e s 				LD		A, (DE)
922f 922f d 3c
922f 922f s 				INC		A
9230 9230 d e61f
9230 9230 s 				AND		00011111B
9232 9232 d 6f
9232 9232 s                 LD      L,A         ;ld x
9233 9233 d cd3892
9233 9233 s                 CALL    ghostCheckStack
9236 9236 d 12
9236 9236 s 				LD		(DE),A
9237 9237 d c9
9237 9237 s 				RET
9238 9238 s ghostCheckStack:
9238 9238 d f5
9238 9238 s                 PUSH   AF
9239 9239 d c5
9239 9239 s                 PUSH   BC
923a 923a d d5
923a 923a s                 PUSH   DE
923b 923b d cd8f93
923b 923b s                 CALL   rGhostStack
923e 923e d ca5792
923e 923e s                 JP     Z,ghostDoStack
9241 9241 d cdd094
9241 9241 s                 CALL   oGhostStack
9244 9244 d ca5792
9244 9244 s                 JP     Z,ghostDoStack
9247 9247 d cd1196
9247 9247 s                 CALL   pGhostStack
924a 924a d ca5792
924a 924a s                 JP     Z,ghostDoStack
924d 924d d cd5297
924d 924d s                 CALL   tGhostStack
9250 9250 d ca5792
9250 9250 s                 JP     Z,ghostDoStack
9253 9253 d d1
9253 9253 s                 POP    DE
9254 9254 d c1
9254 9254 s                 POP    BC
9255 9255 d f1
9255 9255 s                 POP    AF
9256 9256 d c9
9256 9256 s                 RET
9257 9257 s ghostDoStack:   
9257 9257 d d1
9257 9257 s                 POP    DE
9258 9258 d c1
9258 9258 s                 POP    BC
9259 9259 d f1
9259 9259 s                 POP    AF
925a 925a d f1
925a 925a s                 POP    AF
925b 925b d c9
925b 925b s                 RET
925c 925c s 
925c 925c s eatGhost:       
925c 925c d 2a0089
925c 925c s                 LD      HL,(score)
925f 925f d 010a00
925f 925f s                 LD      BC,10
9262 9262 d 09
9262 9262 s                 ADD     HL,BC
9263 9263 d 220089
9263 9263 s                 LD      (score),HL
9266 9266 d c9
9266 9266 s                 RET
9267 9267 s                 
9267 9267 s include ghosts/red.asm
9267 9267 f ghosts/red.asm
9267 9267 s rGhostInitX	    .EQU	15
9267 9267 s rGhostInitY	    .EQU	8
9267 9267 s rGhostInitTimer .EQU    10H
9267 9267 s rGhostStoreX	.EQU	14
9267 9267 s rGhostStoreY	.EQU	11
9267 9267 s 
9267 9267 s rGhostX		    .EQU	8110H		
9267 9267 s rGhostY		    .EQU	8111H
9267 9267 s rGhostDir		.EQU	8112H
9267 9267 s rGhostTimer     .EQU    8115H
9267 9267 s 
9267 9267 s rGhostClear:
9267 9267 d 3a1081
9267 9267 s 				LD		A, (rGhostX)		;Push X to stack
926a 926a d 4f
926a 926a s 				LD		C,A
926b 926b d 3a1181
926b 926b s 				LD		A, (rGhostY)		;Push Y to stack
926e 926e d 47
926e 926e s 				LD		B,A
926f 926f d cd4498
926f 926f s 				CALL 	printMapAt
9272 9272 d c9
9272 9272 s 				RET
9273 9273 s 				
9273 9273 s rGhostPrint:
9273 9273 d 3a1081
9273 9273 s 				LD		A, (rGhostX)		;Push X to stack
9276 9276 d 3c
9276 9276 s 				INC		A
9277 9277 d 4f
9277 9277 s 				LD		C,A
9278 9278 d 3a1181
9278 9278 s 				LD		A, (rGhostY)		;Push Y to stack
927b 927b d 3c
927b 927b s 				INC		A
927c 927c d 47
927c 927c s 				LD		B,A
927d 927d d cdfe9f
927d 927d s 				CALL	moveCursor
9280 9280 d 3a0481
9280 9280 s                 LD      A,(pPActive)
9283 9283 d b7
9283 9283 s                 OR      A
9284 9284 d c2e791
9284 9284 s                 JP      NZ, printSGhost
9287 9287 d 219d93
9287 9287 s 				LD		HL, rGhost
928a 928a d cd74a0
928a 928a s 				CALL 	print
928d 928d d c9
928d 928d s 				RET
928e 928e s rGhostMapData:	
928e 928e d 3a1081
928e 928e s 				LD		A, (rGhostX)
9291 9291 d 4f
9291 9291 s 				LD		C,A
9292 9292 d 3a1181
9292 9292 s 				LD		A, (rGhostY)
9295 9295 d 47
9295 9295 s 				LD		B,A
9296 9296 d cdcd97
9296 9296 s 				CALL	getMapAddress
9299 9299 d 7e
9299 9299 s                 LD      A,(HL)
929a 929a d c9
929a 929a s 				ret
929b 929b s 
929b 929b s 
929b 929b s rGhostInit:   
929b 929b d 3e0e
929b 929b s                 LD		a, rGhostStoreX	;set rGhost Pos
929d 929d d 321081
929d 929d s 			    LD		(rGhostX),a
92a0 92a0 d 3e0b
92a0 92a0 s 			    LD		a, rGhostStoreY
92a2 92a2 d 321181
92a2 92a2 s 			    LD		(rGhostY),a
92a5 92a5 d 3e10
92a5 92a5 s                 LD		a, rGhostInitTimer
92a7 92a7 d 321581
92a7 92a7 s 			    LD		(rGhostTimer),a
92aa 92aa d c9
92aa 92aa s                 RET
92ab 92ab s 
92ab 92ab s rGhostMove:
92ab 92ab d 3a1581
92ab 92ab s                 LD      A,(rGhostTimer)     ;Dont move if the ghost is in jale
92ae 92ae d b7
92ae 92ae s                 OR      A                
92af 92af d c2c492
92af 92af s                 JP      NZ,rGhostDecTimer   ;Decrement the timer if its x
92b2 92b2 d 3a0481
92b2 92b2 s                 LD      A,(pPActive)
92b5 92b5 d cb47
92b5 92b5 s                 BIT     0,A                 ;Move every other tick, bit 0 will always 0 when the power pellet isnt active
92b7 92b7 d c0
92b7 92b7 s                 RET     NZ
92b8 92b8 d 3a1281
92b8 92b8 s 				LD		A,(rGhostDir)
92bb 92bb d 111081
92bb 92bb s 				LD		DE,rGhostX
92be 92be d 011181
92be 92be s 				LD		BC,rGhostY
92c1 92c1 d c3fa91
92c1 92c1 s 				JP		ghostMove
92c4 92c4 s 
92c4 92c4 s 
92c4 92c4 s rGhostDecTimer:
92c4 92c4 d 3d
92c4 92c4 s                 DEC     A
92c5 92c5 d 321581
92c5 92c5 s                 LD      (rGhostTimer),A
92c8 92c8 d b7
92c8 92c8 s                 OR      A
92c9 92c9 d c0
92c9 92c9 s                 RET     NZ              ;IF Zero move ghost out of jale
92ca 92ca d 3e0f
92ca 92ca s                 LD		a, rGhostInitX	;set rGhost Pos
92cc 92cc d 321081
92cc 92cc s 			    LD		(rGhostX),a
92cf 92cf d 3e08
92cf 92cf s 			    LD		a, rGhostInitY
92d1 92d1 d 321181
92d1 92d1 s 			    LD		(rGhostY),a
92d4 92d4 d c9
92d4 92d4 s                 RET
92d5 92d5 s 
92d5 92d5 s rGhostNextMove:
92d5 92d5 d 3eff
92d5 92d5 s 				LD		A, 0FFH
92d7 92d7 d 321381
92d7 92d7 s 				LD		(ghostDis),A
92da 92da d cd8e92
92da 92da s 				CALL	rGhostMapData
92dd 92dd d 57
92dd 92dd s 				LD		D,A
92de 92de d 3e57
92de 92de s 				LD		A,	'W'			;check up
92e0 92e0 d cda797
92e0 92e0 s 				CALL	isMoveValid
92e3 92e3 d c4ff92
92e3 92e3 s 				CALL	NZ,rGhostCheckU
92e6 92e6 d 3e53
92e6 92e6 s 				LD		A,	'S'			;down
92e8 92e8 d cda797
92e8 92e8 s 				CALL	isMoveValid
92eb 92eb d c40d93
92eb 92eb s 				CALL	NZ,rGhostCheckD
92ee 92ee d 3e41
92ee 92ee s 				LD		A,	'A'			;left
92f0 92f0 d cda797
92f0 92f0 s 				CALL	isMoveValid
92f3 92f3 d c41b93
92f3 92f3 s 				CALL	NZ,rGhostCheckL
92f6 92f6 d 3e44
92f6 92f6 s 				LD		A,	'D'			;right
92f8 92f8 d cda797
92f8 92f8 s 				CALL	isMoveValid
92fb 92fb d c42993
92fb 92fb s 				CALL	NZ,rGhostCheckR
92fe 92fe d c9
92fe 92fe s 				RET
92ff 92ff s 				
92ff 92ff s rGhostCheckU:	
92ff 92ff d f5
92ff 92ff s 				PUSH	AF
9300 9300 d 3a1181
9300 9300 s 				LD		A, (rGhostY)
9303 9303 d 3d
9303 9303 s 				DEC		A
9304 9304 d e61f
9304 9304 s 				AND		00011111B
9306 9306 d 47
9306 9306 s 				LD		B,A
9307 9307 d 3a1081
9307 9307 s 				LD		A,(rGhostX)
930a 930a d 4f
930a 930a s 				LD		C,A
930b 930b d 182a
930b 930b s 				JR		rGhostPathFind
930d 930d s rGhostCheckD:			
930d 930d d f5
930d 930d s 				PUSH	AF
930e 930e d 3a1181
930e 930e s 				LD		A, (rGhostY)
9311 9311 d 3c
9311 9311 s 				INC		A
9312 9312 d e61f
9312 9312 s 				AND		00011111B
9314 9314 d 47
9314 9314 s 				LD		B,A
9315 9315 d 3a1081
9315 9315 s 				LD		A,(rGhostX)
9318 9318 d 4f
9318 9318 s 				LD		C,A
9319 9319 d 181c
9319 9319 s 				JR		rGhostPathFind
931b 931b s rGhostCheckL:		
931b 931b d f5
931b 931b s 				PUSH	AF	
931c 931c d 3a1081
931c 931c s 				LD		A, (rGhostX)
931f 931f d 3d
931f 931f s 				DEC		A
9320 9320 d e61f
9320 9320 s 				AND		00011111B
9322 9322 d 4f
9322 9322 s 				LD		C,A
9323 9323 d 3a1181
9323 9323 s 				LD		A,(rGhostY)
9326 9326 d 47
9326 9326 s 				LD		B,A
9327 9327 d 180e
9327 9327 s 				JR		rGhostPathFind
9329 9329 s rGhostCheckR:
9329 9329 d f5
9329 9329 s 				PUSH	AF	
932a 932a d 3a1081
932a 932a s 				LD		A, (rGhostX)
932d 932d d 3c
932d 932d s 				INC		A
932e 932e d e61f
932e 932e s 				AND		00011111B
9330 9330 d 4f
9330 9330 s 				LD		C,A
9331 9331 d 3a1181
9331 9331 s 				LD		A,(rGhostY)
9334 9334 d 47
9334 9334 s 				LD		B,A
9335 9335 d 1800
9335 9335 s 				JR		rGhostPathFind
9337 9337 s 
9337 9337 s rGhostPathFind:
9337 9337 d cd2c98
9337 9337 s 				CALL	getAddressPF
933a 933a d 3a1381
933a 933a s 				LD		A,(ghostDis)
933d 933d d 5e
933d 933d s 				LD		E,(HL)
933e 933e d bb
933e 933e s 				CP		E
933f 933f d f5
933f 933f s                 PUSH    AF
9340 9340 d 3a0481
9340 9340 s                 LD      A,(pPActive)            ;Check power pellet is not activ, if it is, run away
9343 9343 d b7
9343 9343 s                 OR      A
9344 9344 d c24e93
9344 9344 s                 JP      NZ,rGhostPFPP
9347 9347 d f1
9347 9347 s                 POP     AF
9348 9348 d d25a93
9348 9348 s 				JP		NC,rGhostSetNewDir
934b 934b d f1
934b 934b s                 POP     AF
934c 934c d f1
934c 934c s 				POP		AF
934d 934d d c9
934d 934d s 				RET
934e 934e s rGhostPFPP:
934e 934e d f1
934e 934e s                 POP     AF
934f 934f d da5a93
934f 934f s                 JP		C,rGhostSetNewDir
9352 9352 d feff
9352 9352 s                 CP      0FFH
9354 9354 d ca5a93
9354 9354 s                 JP      Z,rGhostSetNewDir
9357 9357 d f1
9357 9357 s                 POP     AF
9358 9358 d f1
9358 9358 s 				POP		AF
9359 9359 d c9
9359 9359 s                 RET
935a 935a s 
935a 935a s rGhostSetNewDir:
935a 935a d 7b
935a 935a s 				LD		A,E
935b 935b d 321381
935b 935b s 				LD		(ghostDis),A
935e 935e d f1
935e 935e s 				POP		AF
935f 935f d 321281
935f 935f s 				LD		(rGhostDir),A
9362 9362 d c9
9362 9362 s 				RET
9363 9363 s 
9363 9363 s rGhostColide:   
9363 9363 d 3a0081
9363 9363 s                 LD      A,(pacx)                ;Compair X
9366 9366 d 47
9366 9366 s                 LD      B,A
9367 9367 d 3a1081
9367 9367 s                 LD      A,(rGhostX)
936a 936a d b8
936a 936a s                 CP      B
936b 936b d c0
936b 936b s                 RET     NZ
936c 936c d 3a0181
936c 936c s                 LD      A,(pacy)                ;Compair Y
936f 936f d 47
936f 936f s                 LD      B,A
9370 9370 d 3a1181
9370 9370 s                 LD      A,(rGhostY)
9373 9373 d b8
9373 9373 s                 CP      B
9374 9374 d c0
9374 9374 s                 RET     NZ
9375 9375 d 3a0481
9375 9375 s                 LD      A,(pPActive)              ;Colishion Happened
9378 9378 d b7
9378 9378 s                 OR      A
9379 9379 d ca6c91
9379 9379 s                 JP      Z,killPacman               ;If power pellet not active, run genric deth lib
937c 937c d cd5c92
937c 937c s 				CALL	eatGhost
937f 937f d 3e0e
937f 937f s                 LD		a, rGhostStoreX	           ;set rGhost Pos
9381 9381 d 321081
9381 9381 s 			    LD		(rGhostX),a
9384 9384 d 3e0b
9384 9384 s 			    LD		a, rGhostStoreY
9386 9386 d 321181
9386 9386 s 			    LD		(rGhostY),a
9389 9389 d 3e10
9389 9389 s                 LD		a, rGhostInitTimer
938b 938b d 321581
938b 938b s 			    LD		(rGhostTimer),a
938e 938e d c9
938e 938e s                 RET
938f 938f s ;x = l
938f 938f s ;y = h
938f 938f s rGhostStack:
938f 938f d 7d
938f 938f s 				LD      A,L               		;Compair X
9390 9390 d 47
9390 9390 s                 LD      B,A
9391 9391 d 3a1081
9391 9391 s                 LD      A,(rGhostX)
9394 9394 d b8
9394 9394 s                 CP      B
9395 9395 d c0
9395 9395 s                 RET     NZ
9396 9396 d 7c
9396 9396 s                 LD      A,h                		;Compair Y
9397 9397 d 47
9397 9397 s                 LD      B,A
9398 9398 d 3a1181
9398 9398 s                 LD      A,(rGhostY)
939b 939b d b8
939b 939b s                 CP      B
939c 939c d c9
939c 939c s                 RET
939d 939d s 
939d 939d f ghosts.asm
939d 939d d 1b5b39316d4d1b5b306d00
939d 939d s rGhost:		.BYTE	1BH,"[91mM",1BH,"[0m",0
93a8 93a8 s include ghosts/orange.asm
93a8 93a8 f ghosts/orange.asm
93a8 93a8 s oGhostInitX	    .EQU	15
93a8 93a8 s oGhostInitY	    .EQU	8
93a8 93a8 s oGhostInitTimer .EQU    20H
93a8 93a8 s oGhostStoreX	.EQU	15
93a8 93a8 s oGhostStoreY	.EQU	11
93a8 93a8 s 
93a8 93a8 s oGhostX		    .EQU	8120H		
93a8 93a8 s oGhostY		    .EQU	8121H
93a8 93a8 s oGhostDir		.EQU	8122H
93a8 93a8 s oGhostTimer     .EQU    8125H
93a8 93a8 s 
93a8 93a8 s oGhostClear:
93a8 93a8 d 3a2081
93a8 93a8 s 				LD		A, (oGhostX)		;Push X to stack
93ab 93ab d 4f
93ab 93ab s 				LD		C,A
93ac 93ac d 3a2181
93ac 93ac s 				LD		A, (oGhostY)		;Push Y to stack
93af 93af d 47
93af 93af s 				LD		B,A
93b0 93b0 d cd4498
93b0 93b0 s 				CALL 	printMapAt
93b3 93b3 d c9
93b3 93b3 s 				RET
93b4 93b4 s 				
93b4 93b4 s oGhostPrint:
93b4 93b4 d 3a2081
93b4 93b4 s 				LD		A, (oGhostX)		;Push X to stack
93b7 93b7 d 3c
93b7 93b7 s 				INC		A
93b8 93b8 d 4f
93b8 93b8 s 				LD		C,A
93b9 93b9 d 3a2181
93b9 93b9 s 				LD		A, (oGhostY)		;Push Y to stack
93bc 93bc d 3c
93bc 93bc s 				INC		A
93bd 93bd d 47
93bd 93bd s 				LD		B,A
93be 93be d cdfe9f
93be 93be s 				CALL	moveCursor
93c1 93c1 d 3a0481
93c1 93c1 s                 LD      A,(pPActive)
93c4 93c4 d b7
93c4 93c4 s                 OR      A
93c5 93c5 d c2e791
93c5 93c5 s                 JP      NZ, printSGhost
93c8 93c8 d 21de94
93c8 93c8 s 				LD		HL, oGhost
93cb 93cb d cd74a0
93cb 93cb s 				CALL 	print
93ce 93ce d c9
93ce 93ce s 				RET
93cf 93cf s oGhostMapData:	
93cf 93cf d 3a2081
93cf 93cf s 				LD		A, (oGhostX)
93d2 93d2 d 4f
93d2 93d2 s 				LD		C,A
93d3 93d3 d 3a2181
93d3 93d3 s 				LD		A, (oGhostY)
93d6 93d6 d 47
93d6 93d6 s 				LD		B,A
93d7 93d7 d cdcd97
93d7 93d7 s 				CALL	getMapAddress
93da 93da d 7e
93da 93da s                 LD      A,(HL)
93db 93db d c9
93db 93db s 				ret
93dc 93dc s 
93dc 93dc s 
93dc 93dc s oGhostInit:   
93dc 93dc d 3e0f
93dc 93dc s                 LD		a, oGhostStoreX	;set oGhost Pos
93de 93de d 322081
93de 93de s 			    LD		(oGhostX),a
93e1 93e1 d 3e0b
93e1 93e1 s 			    LD		a, oGhostStoreY
93e3 93e3 d 322181
93e3 93e3 s 			    LD		(oGhostY),a
93e6 93e6 d 3e20
93e6 93e6 s                 LD		a, oGhostInitTimer
93e8 93e8 d 322581
93e8 93e8 s 			    LD		(oGhostTimer),a
93eb 93eb d c9
93eb 93eb s                 RET
93ec 93ec s 
93ec 93ec s oGhostMove:
93ec 93ec d 3a2581
93ec 93ec s                 LD      A,(oGhostTimer)     ;Dont move if the ghost is in jale
93ef 93ef d b7
93ef 93ef s                 OR      A                
93f0 93f0 d c20594
93f0 93f0 s                 JP      NZ,oGhostDecTimer   ;Decrement the timer if its x
93f3 93f3 d 3a0481
93f3 93f3 s                 LD      A,(pPActive)
93f6 93f6 d cb47
93f6 93f6 s                 BIT     0,A                 ;Move every other tick, bit 0 will always 0 when the power pellet isnt active
93f8 93f8 d c0
93f8 93f8 s                 RET     NZ
93f9 93f9 d 3a2281
93f9 93f9 s 				LD		A,(oGhostDir)
93fc 93fc d 112081
93fc 93fc s 				LD		DE,oGhostX
93ff 93ff d 012181
93ff 93ff s 				LD		BC,oGhostY
9402 9402 d c3fa91
9402 9402 s 				JP		ghostMove
9405 9405 s 
9405 9405 s oGhostDecTimer:
9405 9405 d 3d
9405 9405 s                 DEC     A
9406 9406 d 322581
9406 9406 s                 LD      (oGhostTimer),A
9409 9409 d b7
9409 9409 s                 OR      A
940a 940a d c0
940a 940a s                 RET     NZ              ;IF Zero move ghost out of jale
940b 940b d 3e0f
940b 940b s                 LD		a, oGhostInitX	;set oGhost Pos
940d 940d d 322081
940d 940d s 			    LD		(oGhostX),a
9410 9410 d 3e08
9410 9410 s 			    LD		a, oGhostInitY
9412 9412 d 322181
9412 9412 s 			    LD		(oGhostY),a
9415 9415 d c9
9415 9415 s                 RET
9416 9416 s 
9416 9416 s oGhostNextMove:
9416 9416 d 3eff
9416 9416 s 				LD		A, 0FFH
9418 9418 d 321381
9418 9418 s 				LD		(ghostDis),A
941b 941b d cdcf93
941b 941b s 				CALL	oGhostMapData
941e 941e d 57
941e 941e s 				LD		D,A
941f 941f d 3e57
941f 941f s 				LD		A,	'W'			;check up
9421 9421 d cda797
9421 9421 s 				CALL	isMoveValid
9424 9424 d c44094
9424 9424 s 				CALL	NZ,oGhostCheckU
9427 9427 d 3e53
9427 9427 s 				LD		A,	'S'			;down
9429 9429 d cda797
9429 9429 s 				CALL	isMoveValid
942c 942c d c44e94
942c 942c s 				CALL	NZ,oGhostCheckD
942f 942f d 3e41
942f 942f s 				LD		A,	'A'			;left
9431 9431 d cda797
9431 9431 s 				CALL	isMoveValid
9434 9434 d c45c94
9434 9434 s 				CALL	NZ,oGhostCheckL
9437 9437 d 3e44
9437 9437 s 				LD		A,	'D'			;right
9439 9439 d cda797
9439 9439 s 				CALL	isMoveValid
943c 943c d c46a94
943c 943c s 				CALL	NZ,oGhostCheckR
943f 943f d c9
943f 943f s 				RET
9440 9440 s 				
9440 9440 s oGhostCheckU:	
9440 9440 d f5
9440 9440 s 				PUSH	AF
9441 9441 d 3a2181
9441 9441 s 				LD		A, (oGhostY)
9444 9444 d 3d
9444 9444 s 				DEC		A
9445 9445 d e61f
9445 9445 s 				AND		00011111B
9447 9447 d 47
9447 9447 s 				LD		B,A
9448 9448 d 3a2081
9448 9448 s 				LD		A,(oGhostX)
944b 944b d 4f
944b 944b s 				LD		C,A
944c 944c d 182a
944c 944c s 				JR		oGhostPathFind
944e 944e s oGhostCheckD:			
944e 944e d f5
944e 944e s 				PUSH	AF
944f 944f d 3a2181
944f 944f s 				LD		A, (oGhostY)
9452 9452 d 3c
9452 9452 s 				INC		A
9453 9453 d e61f
9453 9453 s 				AND		00011111B
9455 9455 d 47
9455 9455 s 				LD		B,A
9456 9456 d 3a2081
9456 9456 s 				LD		A,(oGhostX)
9459 9459 d 4f
9459 9459 s 				LD		C,A
945a 945a d 181c
945a 945a s 				JR		oGhostPathFind
945c 945c s oGhostCheckL:		
945c 945c d f5
945c 945c s 				PUSH	AF	
945d 945d d 3a2081
945d 945d s 				LD		A, (oGhostX)
9460 9460 d 3d
9460 9460 s 				DEC		A
9461 9461 d e61f
9461 9461 s 				AND		00011111B
9463 9463 d 4f
9463 9463 s 				LD		C,A
9464 9464 d 3a2181
9464 9464 s 				LD		A,(oGhostY)
9467 9467 d 47
9467 9467 s 				LD		B,A
9468 9468 d 180e
9468 9468 s 				JR		oGhostPathFind
946a 946a s oGhostCheckR:
946a 946a d f5
946a 946a s 				PUSH	AF	
946b 946b d 3a2081
946b 946b s 				LD		A, (oGhostX)
946e 946e d 3c
946e 946e s 				INC		A
946f 946f d e61f
946f 946f s 				AND		00011111B
9471 9471 d 4f
9471 9471 s 				LD		C,A
9472 9472 d 3a2181
9472 9472 s 				LD		A,(oGhostY)
9475 9475 d 47
9475 9475 s 				LD		B,A
9476 9476 d 1800
9476 9476 s 				JR		oGhostPathFind
9478 9478 s 
9478 9478 s oGhostPathFind:
9478 9478 d cd2c98
9478 9478 s 				CALL	getAddressPF
947b 947b d 3a1381
947b 947b s 				LD		A,(ghostDis)
947e 947e d 5e
947e 947e s 				LD		E,(HL)
947f 947f d bb
947f 947f s 				CP		E
9480 9480 d f5
9480 9480 s                 PUSH    AF
9481 9481 d 3a0481
9481 9481 s                 LD      A,(pPActive)            ;Check power pellet is not activ, if it is, run away
9484 9484 d b7
9484 9484 s                 OR      A
9485 9485 d c28f94
9485 9485 s                 JP      NZ,oGhostPFPP
9488 9488 d f1
9488 9488 s                 POP     AF
9489 9489 d d29b94
9489 9489 s 				JP		NC,oGhostSetNewDir
948c 948c d f1
948c 948c s                 POP     AF
948d 948d d f1
948d 948d s 				POP		AF
948e 948e d c9
948e 948e s 				RET
948f 948f s oGhostPFPP:
948f 948f d f1
948f 948f s                 POP     AF
9490 9490 d da9b94
9490 9490 s                 JP		C,oGhostSetNewDir
9493 9493 d feff
9493 9493 s                 CP      0FFH
9495 9495 d ca9b94
9495 9495 s                 JP      Z,oGhostSetNewDir
9498 9498 d f1
9498 9498 s                 POP     AF
9499 9499 d f1
9499 9499 s 				POP		AF
949a 949a d c9
949a 949a s                 RET
949b 949b s 
949b 949b s oGhostSetNewDir:
949b 949b d 7b
949b 949b s 				LD		A,E
949c 949c d 321381
949c 949c s 				LD		(ghostDis),A
949f 949f d f1
949f 949f s 				POP		AF
94a0 94a0 d 322281
94a0 94a0 s 				LD		(oGhostDir),A
94a3 94a3 d c9
94a3 94a3 s 				RET
94a4 94a4 s 
94a4 94a4 s oGhostColide:   
94a4 94a4 d 3a0081
94a4 94a4 s                 LD      A,(pacx)                ;Compair X
94a7 94a7 d 47
94a7 94a7 s                 LD      B,A
94a8 94a8 d 3a2081
94a8 94a8 s                 LD      A,(oGhostX)
94ab 94ab d b8
94ab 94ab s                 CP      B
94ac 94ac d c0
94ac 94ac s                 RET     NZ
94ad 94ad d 3a0181
94ad 94ad s                 LD      A,(pacy)                ;Compair Y
94b0 94b0 d 47
94b0 94b0 s                 LD      B,A
94b1 94b1 d 3a2181
94b1 94b1 s                 LD      A,(oGhostY)
94b4 94b4 d b8
94b4 94b4 s                 CP      B
94b5 94b5 d c0
94b5 94b5 s                 RET     NZ
94b6 94b6 d 3a0481
94b6 94b6 s                 LD      A,(pPActive)              ;Colishion Happened
94b9 94b9 d b7
94b9 94b9 s                 OR      A
94ba 94ba d ca6c91
94ba 94ba s                 JP      Z,killPacman               ;If power pellet not active, run genric deth lib
94bd 94bd d cd5c92
94bd 94bd s 				CALL	eatGhost
94c0 94c0 d 3e0f
94c0 94c0 s                 LD		a, oGhostStoreX	           ;set oGhost Pos
94c2 94c2 d 322081
94c2 94c2 s 			    LD		(oGhostX),a
94c5 94c5 d 3e0b
94c5 94c5 s 			    LD		a, oGhostStoreY
94c7 94c7 d 322181
94c7 94c7 s 			    LD		(oGhostY),a
94ca 94ca d 3e20
94ca 94ca s                 LD		a, oGhostInitTimer
94cc 94cc d 322581
94cc 94cc s 			    LD		(oGhostTimer),a
94cf 94cf d c9
94cf 94cf s                 RET
94d0 94d0 s ;x = l
94d0 94d0 s ;y = h
94d0 94d0 s oGhostStack:
94d0 94d0 d 7d
94d0 94d0 s 				LD      A,L               		;Compair X
94d1 94d1 d 47
94d1 94d1 s                 LD      B,A
94d2 94d2 d 3a2081
94d2 94d2 s                 LD      A,(oGhostX)
94d5 94d5 d b8
94d5 94d5 s                 CP      B
94d6 94d6 d c0
94d6 94d6 s                 RET     NZ
94d7 94d7 d 7c
94d7 94d7 s                 LD      A,h                		;Compair Y
94d8 94d8 d 47
94d8 94d8 s                 LD      B,A
94d9 94d9 d 3a2181
94d9 94d9 s                 LD      A,(oGhostY)
94dc 94dc d b8
94dc 94dc s                 CP      B
94dd 94dd d c9
94dd 94dd s                 RET
94de 94de s 
94de 94de f ghosts.asm
94de 94de d 1b5b33336d4d1b5b306d00
94de 94de s oGhost:		.BYTE	1BH,"[33mM",1BH,"[0m",0
94e9 94e9 s include ghosts/pink.asm
94e9 94e9 f ghosts/pink.asm
94e9 94e9 s pGhostInitX	    .EQU	15
94e9 94e9 s pGhostInitY	    .EQU	8
94e9 94e9 s pGhostInitTimer .EQU    30H
94e9 94e9 s pGhostStoreX	.EQU	16
94e9 94e9 s pGhostStoreY	.EQU	11
94e9 94e9 s 
94e9 94e9 s pGhostX		    .EQU	8130H		
94e9 94e9 s pGhostY		    .EQU	8131H
94e9 94e9 s pGhostDir		.EQU	8132H
94e9 94e9 s pGhostTimer     .EQU    8135H
94e9 94e9 s 
94e9 94e9 s pGhostClear:
94e9 94e9 d 3a3081
94e9 94e9 s 				LD		A, (pGhostX)		;Push X to stack
94ec 94ec d 4f
94ec 94ec s 				LD		C,A
94ed 94ed d 3a3181
94ed 94ed s 				LD		A, (pGhostY)		;Push Y to stack
94f0 94f0 d 47
94f0 94f0 s 				LD		B,A
94f1 94f1 d cd4498
94f1 94f1 s 				CALL 	printMapAt
94f4 94f4 d c9
94f4 94f4 s 				RET
94f5 94f5 s 				
94f5 94f5 s pGhostPrint:
94f5 94f5 d 3a3081
94f5 94f5 s 				LD		A, (pGhostX)		;Push X to stack
94f8 94f8 d 3c
94f8 94f8 s 				INC		A
94f9 94f9 d 4f
94f9 94f9 s 				LD		C,A
94fa 94fa d 3a3181
94fa 94fa s 				LD		A, (pGhostY)		;Push Y to stack
94fd 94fd d 3c
94fd 94fd s 				INC		A
94fe 94fe d 47
94fe 94fe s 				LD		B,A
94ff 94ff d cdfe9f
94ff 94ff s 				CALL	moveCursor
9502 9502 d 3a0481
9502 9502 s                 LD      A,(pPActive)
9505 9505 d b7
9505 9505 s                 OR      A
9506 9506 d c2e791
9506 9506 s                 JP      NZ, printSGhost
9509 9509 d 211f96
9509 9509 s 				LD		HL, pGhost
950c 950c d cd74a0
950c 950c s 				CALL 	print
950f 950f d c9
950f 950f s 				RET
9510 9510 s pGhostMapData:	
9510 9510 d 3a3081
9510 9510 s 				LD		A, (pGhostX)
9513 9513 d 4f
9513 9513 s 				LD		C,A
9514 9514 d 3a3181
9514 9514 s 				LD		A, (pGhostY)
9517 9517 d 47
9517 9517 s 				LD		B,A
9518 9518 d cdcd97
9518 9518 s 				CALL	getMapAddress
951b 951b d 7e
951b 951b s                 LD      A,(HL)
951c 951c d c9
951c 951c s 				ret
951d 951d s 
951d 951d s 
951d 951d s pGhostInit:   
951d 951d d 3e10
951d 951d s                 LD		a, pGhostStoreX	;set pGhost Pos
951f 951f d 323081
951f 951f s 			    LD		(pGhostX),a
9522 9522 d 3e0b
9522 9522 s 			    LD		a, pGhostStoreY
9524 9524 d 323181
9524 9524 s 			    LD		(pGhostY),a
9527 9527 d 3e30
9527 9527 s                 LD		a, pGhostInitTimer
9529 9529 d 323581
9529 9529 s 			    LD		(pGhostTimer),a
952c 952c d c9
952c 952c s                 RET
952d 952d s 
952d 952d s pGhostMove:
952d 952d d 3a3581
952d 952d s                 LD      A,(pGhostTimer)     ;Dont move if the ghost is in jale
9530 9530 d b7
9530 9530 s                 OR      A                
9531 9531 d c24695
9531 9531 s                 JP      NZ,pGhostDecTimer   ;Decrement the timer if its x
9534 9534 d 3a0481
9534 9534 s                 LD      A,(pPActive)
9537 9537 d cb47
9537 9537 s                 BIT     0,A                 ;Move every other tick, bit 0 will always 0 when the power pellet isnt active
9539 9539 d c0
9539 9539 s                 RET     NZ
953a 953a d 3a3281
953a 953a s 				LD		A,(pGhostDir)
953d 953d d 113081
953d 953d s 				LD		DE,pGhostX
9540 9540 d 013181
9540 9540 s 				LD		BC,pGhostY
9543 9543 d c3fa91
9543 9543 s 				JP		ghostMove
9546 9546 s 
9546 9546 s 
9546 9546 s pGhostDecTimer:
9546 9546 d 3d
9546 9546 s                 DEC     A
9547 9547 d 323581
9547 9547 s                 LD      (pGhostTimer),A
954a 954a d b7
954a 954a s                 OR      A
954b 954b d c0
954b 954b s                 RET     NZ              ;IF Zero move ghost out of jale
954c 954c d 3e0f
954c 954c s                 LD		a, pGhostInitX	;set pGhost Pos
954e 954e d 323081
954e 954e s 			    LD		(pGhostX),a
9551 9551 d 3e08
9551 9551 s 			    LD		a, pGhostInitY
9553 9553 d 323181
9553 9553 s 			    LD		(pGhostY),a
9556 9556 d c9
9556 9556 s                 RET
9557 9557 s 
9557 9557 s pGhostNextMove:
9557 9557 d 3eff
9557 9557 s 				LD		A, 0FFH
9559 9559 d 321381
9559 9559 s 				LD		(ghostDis),A
955c 955c d cd1095
955c 955c s 				CALL	pGhostMapData
955f 955f d 57
955f 955f s 				LD		D,A
9560 9560 d 3e57
9560 9560 s 				LD		A,	'W'			;check up
9562 9562 d cda797
9562 9562 s 				CALL	isMoveValid
9565 9565 d c48195
9565 9565 s 				CALL	NZ,pGhostCheckU
9568 9568 d 3e53
9568 9568 s 				LD		A,	'S'			;down
956a 956a d cda797
956a 956a s 				CALL	isMoveValid
956d 956d d c48f95
956d 956d s 				CALL	NZ,pGhostCheckD
9570 9570 d 3e41
9570 9570 s 				LD		A,	'A'			;left
9572 9572 d cda797
9572 9572 s 				CALL	isMoveValid
9575 9575 d c49d95
9575 9575 s 				CALL	NZ,pGhostCheckL
9578 9578 d 3e44
9578 9578 s 				LD		A,	'D'			;right
957a 957a d cda797
957a 957a s 				CALL	isMoveValid
957d 957d d c4ab95
957d 957d s 				CALL	NZ,pGhostCheckR
9580 9580 d c9
9580 9580 s 				RET
9581 9581 s 				
9581 9581 s pGhostCheckU:	
9581 9581 d f5
9581 9581 s 				PUSH	AF
9582 9582 d 3a3181
9582 9582 s 				LD		A, (pGhostY)
9585 9585 d 3d
9585 9585 s 				DEC		A
9586 9586 d e61f
9586 9586 s 				AND		00011111B
9588 9588 d 47
9588 9588 s 				LD		B,A
9589 9589 d 3a3081
9589 9589 s 				LD		A,(pGhostX)
958c 958c d 4f
958c 958c s 				LD		C,A
958d 958d d 182a
958d 958d s 				JR		pGhostPathFind
958f 958f s pGhostCheckD:			
958f 958f d f5
958f 958f s 				PUSH	AF
9590 9590 d 3a3181
9590 9590 s 				LD		A, (pGhostY)
9593 9593 d 3c
9593 9593 s 				INC		A
9594 9594 d e61f
9594 9594 s 				AND		00011111B
9596 9596 d 47
9596 9596 s 				LD		B,A
9597 9597 d 3a3081
9597 9597 s 				LD		A,(pGhostX)
959a 959a d 4f
959a 959a s 				LD		C,A
959b 959b d 181c
959b 959b s 				JR		pGhostPathFind
959d 959d s pGhostCheckL:		
959d 959d d f5
959d 959d s 				PUSH	AF	
959e 959e d 3a3081
959e 959e s 				LD		A, (pGhostX)
95a1 95a1 d 3d
95a1 95a1 s 				DEC		A
95a2 95a2 d e61f
95a2 95a2 s 				AND		00011111B
95a4 95a4 d 4f
95a4 95a4 s 				LD		C,A
95a5 95a5 d 3a3181
95a5 95a5 s 				LD		A,(pGhostY)
95a8 95a8 d 47
95a8 95a8 s 				LD		B,A
95a9 95a9 d 180e
95a9 95a9 s 				JR		pGhostPathFind
95ab 95ab s pGhostCheckR:
95ab 95ab d f5
95ab 95ab s 				PUSH	AF	
95ac 95ac d 3a3081
95ac 95ac s 				LD		A, (pGhostX)
95af 95af d 3c
95af 95af s 				INC		A
95b0 95b0 d e61f
95b0 95b0 s 				AND		00011111B
95b2 95b2 d 4f
95b2 95b2 s 				LD		C,A
95b3 95b3 d 3a3181
95b3 95b3 s 				LD		A,(pGhostY)
95b6 95b6 d 47
95b6 95b6 s 				LD		B,A
95b7 95b7 d 1800
95b7 95b7 s 				JR		pGhostPathFind
95b9 95b9 s 
95b9 95b9 s pGhostPathFind:
95b9 95b9 d cd2c98
95b9 95b9 s 				CALL	getAddressPF
95bc 95bc d 3a1381
95bc 95bc s 				LD		A,(ghostDis)
95bf 95bf d 5e
95bf 95bf s 				LD		E,(HL)
95c0 95c0 d bb
95c0 95c0 s 				CP		E
95c1 95c1 d f5
95c1 95c1 s                 PUSH    AF
95c2 95c2 d 3a0481
95c2 95c2 s                 LD      A,(pPActive)            ;Check power pellet is not activ, if it is, run away
95c5 95c5 d b7
95c5 95c5 s                 OR      A
95c6 95c6 d c2d095
95c6 95c6 s                 JP      NZ,pGhostPFPP
95c9 95c9 d f1
95c9 95c9 s                 POP     AF
95ca 95ca d d2dc95
95ca 95ca s 				JP		NC,pGhostSetNewDir
95cd 95cd d f1
95cd 95cd s                 POP     AF
95ce 95ce d f1
95ce 95ce s 				POP		AF
95cf 95cf d c9
95cf 95cf s 				RET
95d0 95d0 s pGhostPFPP:
95d0 95d0 d f1
95d0 95d0 s                 POP     AF
95d1 95d1 d dadc95
95d1 95d1 s                 JP		C,pGhostSetNewDir
95d4 95d4 d feff
95d4 95d4 s                 CP      0FFH
95d6 95d6 d cadc95
95d6 95d6 s                 JP      Z,pGhostSetNewDir
95d9 95d9 d f1
95d9 95d9 s                 POP     AF
95da 95da d f1
95da 95da s 				POP		AF
95db 95db d c9
95db 95db s                 RET
95dc 95dc s 
95dc 95dc s pGhostSetNewDir:
95dc 95dc d 7b
95dc 95dc s 				LD		A,E
95dd 95dd d 321381
95dd 95dd s 				LD		(ghostDis),A
95e0 95e0 d f1
95e0 95e0 s 				POP		AF
95e1 95e1 d 323281
95e1 95e1 s 				LD		(pGhostDir),A
95e4 95e4 d c9
95e4 95e4 s 				RET
95e5 95e5 s 
95e5 95e5 s pGhostColide:   
95e5 95e5 d 3a0081
95e5 95e5 s                 LD      A,(pacx)                ;Compair X
95e8 95e8 d 47
95e8 95e8 s                 LD      B,A
95e9 95e9 d 3a3081
95e9 95e9 s                 LD      A,(pGhostX)
95ec 95ec d b8
95ec 95ec s                 CP      B
95ed 95ed d c0
95ed 95ed s                 RET     NZ
95ee 95ee d 3a0181
95ee 95ee s                 LD      A,(pacy)                ;Compair Y
95f1 95f1 d 47
95f1 95f1 s                 LD      B,A
95f2 95f2 d 3a3181
95f2 95f2 s                 LD      A,(pGhostY)
95f5 95f5 d b8
95f5 95f5 s                 CP      B
95f6 95f6 d c0
95f6 95f6 s                 RET     NZ
95f7 95f7 d 3a0481
95f7 95f7 s                 LD      A,(pPActive)              ;Colishion Happened
95fa 95fa d b7
95fa 95fa s                 OR      A
95fb 95fb d ca6c91
95fb 95fb s                 JP      Z,killPacman               ;If power pellet not active, run genric deth lib
95fe 95fe d cd5c92
95fe 95fe s 				CALL	eatGhost
9601 9601 d 3e10
9601 9601 s                 LD		a, pGhostStoreX	           ;set pGhost Pos
9603 9603 d 323081
9603 9603 s 			    LD		(pGhostX),a
9606 9606 d 3e0b
9606 9606 s 			    LD		a, pGhostStoreY
9608 9608 d 323181
9608 9608 s 			    LD		(pGhostY),a
960b 960b d 3e30
960b 960b s                 LD		a, pGhostInitTimer
960d 960d d 323581
960d 960d s 			    LD		(pGhostTimer),a
9610 9610 d c9
9610 9610 s                 RET
9611 9611 s 
9611 9611 s ;x = l
9611 9611 s ;y = h
9611 9611 s pGhostStack:
9611 9611 d 7d
9611 9611 s 				LD      A,L               		;Compair X
9612 9612 d 47
9612 9612 s                 LD      B,A
9613 9613 d 3a3081
9613 9613 s                 LD      A,(pGhostX)
9616 9616 d b8
9616 9616 s                 CP      B
9617 9617 d c0
9617 9617 s                 RET     NZ
9618 9618 d 7c
9618 9618 s                 LD      A,h                		;Compair Y
9619 9619 d 47
9619 9619 s                 LD      B,A
961a 961a d 3a3181
961a 961a s                 LD      A,(pGhostY)
961d 961d d b8
961d 961d s                 CP      B
961e 961e d c9
961e 961e s                 RET
961f 961f s 
961f 961f f ghosts.asm
961f 961f d 1b5b39356d4d1b5b306d00
961f 961f s pGhost:		.BYTE	1BH,"[95mM",1BH,"[0m",0
962a 962a s include ghosts/teal.asm
962a 962a f ghosts/teal.asm
962a 962a s tGhostInitX	    .EQU	15
962a 962a s tGhostInitY	    .EQU	8
962a 962a s tGhostInitTimer .EQU    40H
962a 962a s tGhostStoreX	.EQU	17 
962a 962a s tGhostStoreY	.EQU	11
962a 962a s 
962a 962a s tGhostX		    .EQU	8140H		
962a 962a s tGhostY		    .EQU	8141H
962a 962a s tGhostDir		.EQU	8142H
962a 962a s tGhostTimer     .EQU    8145H
962a 962a s 
962a 962a s tGhostClear:
962a 962a d 3a4081
962a 962a s 				LD		A, (tGhostX)		;Push X to stack
962d 962d d 4f
962d 962d s 				LD		C,A
962e 962e d 3a4181
962e 962e s 				LD		A, (tGhostY)		;Push Y to stack
9631 9631 d 47
9631 9631 s 				LD		B,A
9632 9632 d cd4498
9632 9632 s 				CALL 	printMapAt
9635 9635 d c9
9635 9635 s 				RET
9636 9636 s 				
9636 9636 s tGhostPrint:
9636 9636 d 3a4081
9636 9636 s 				LD		A, (tGhostX)		;Push X to stack
9639 9639 d 3c
9639 9639 s 				INC		A
963a 963a d 4f
963a 963a s 				LD		C,A
963b 963b d 3a4181
963b 963b s 				LD		A, (tGhostY)		;Push Y to stack
963e 963e d 3c
963e 963e s 				INC		A
963f 963f d 47
963f 963f s 				LD		B,A
9640 9640 d cdfe9f
9640 9640 s 				CALL	moveCursor
9643 9643 d 3a0481
9643 9643 s                 LD      A,(pPActive)
9646 9646 d b7
9646 9646 s                 OR      A
9647 9647 d c2e791
9647 9647 s                 JP      NZ, printSGhost
964a 964a d 216097
964a 964a s 				LD		HL, tGhost
964d 964d d cd74a0
964d 964d s 				CALL 	print
9650 9650 d c9
9650 9650 s 				RET
9651 9651 s tGhostMapData:	
9651 9651 d 3a4081
9651 9651 s 				LD		A, (tGhostX)
9654 9654 d 4f
9654 9654 s 				LD		C,A
9655 9655 d 3a4181
9655 9655 s 				LD		A, (tGhostY)
9658 9658 d 47
9658 9658 s 				LD		B,A
9659 9659 d cdcd97
9659 9659 s 				CALL	getMapAddress
965c 965c d 7e
965c 965c s                 LD      A,(HL)
965d 965d d c9
965d 965d s 				ret
965e 965e s 
965e 965e s tGhostInit:   
965e 965e d 3e11
965e 965e s                 LD		a, tGhostStoreX	;set tGhost Pos
9660 9660 d 324081
9660 9660 s 			    LD		(tGhostX),a
9663 9663 d 3e0b
9663 9663 s 			    LD		a, tGhostStoreY
9665 9665 d 324181
9665 9665 s 			    LD		(tGhostY),a
9668 9668 d 3e40
9668 9668 s                 LD		a, tGhostInitTimer
966a 966a d 324581
966a 966a s 			    LD		(tGhostTimer),a
966d 966d d c9
966d 966d s                 RET
966e 966e s 
966e 966e s tGhostMove:
966e 966e d 3a4581
966e 966e s                 LD      A,(tGhostTimer)     ;Dont move if the ghost is in jale
9671 9671 d b7
9671 9671 s                 OR      A                
9672 9672 d c28796
9672 9672 s                 JP      NZ,tGhostDecTimer   ;Decrement the timer if its x
9675 9675 d 3a0481
9675 9675 s                 LD      A,(pPActive)
9678 9678 d cb47
9678 9678 s                 BIT     0,A                 ;Move every other tick, bit 0 will always 0 when the power pellet isnt active
967a 967a d c0
967a 967a s                 RET     NZ
967b 967b d 3a4281
967b 967b s 				LD		A,(tGhostDir)
967e 967e d 114081
967e 967e s 				LD		DE,tGhostX
9681 9681 d 014181
9681 9681 s 				LD		BC,tGhostY
9684 9684 d c3fa91
9684 9684 s 				JP		ghostMove
9687 9687 s 
9687 9687 s tGhostDecTimer:
9687 9687 d 3d
9687 9687 s                 DEC     A
9688 9688 d 324581
9688 9688 s                 LD      (tGhostTimer),A
968b 968b d b7
968b 968b s                 OR      A
968c 968c d c0
968c 968c s                 RET     NZ              ;IF Zero move ghost out of jale
968d 968d d 3e0f
968d 968d s                 LD		a, tGhostInitX	;set tGhost Pos
968f 968f d 324081
968f 968f s 			    LD		(tGhostX),a
9692 9692 d 3e08
9692 9692 s 			    LD		a, tGhostInitY
9694 9694 d 324181
9694 9694 s 			    LD		(tGhostY),a
9697 9697 d c9
9697 9697 s                 RET
9698 9698 s 
9698 9698 s tGhostNextMove:
9698 9698 d 3eff
9698 9698 s 				LD		A, 0FFH
969a 969a d 321381
969a 969a s 				LD		(ghostDis),A
969d 969d d cd5196
969d 969d s 				CALL	tGhostMapData
96a0 96a0 d 57
96a0 96a0 s 				LD		D,A
96a1 96a1 d 3e57
96a1 96a1 s 				LD		A,	'W'			;check up
96a3 96a3 d cda797
96a3 96a3 s 				CALL	isMoveValid
96a6 96a6 d c4c296
96a6 96a6 s 				CALL	NZ,tGhostCheckU
96a9 96a9 d 3e53
96a9 96a9 s 				LD		A,	'S'			;down
96ab 96ab d cda797
96ab 96ab s 				CALL	isMoveValid
96ae 96ae d c4d096
96ae 96ae s 				CALL	NZ,tGhostCheckD
96b1 96b1 d 3e41
96b1 96b1 s 				LD		A,	'A'			;left
96b3 96b3 d cda797
96b3 96b3 s 				CALL	isMoveValid
96b6 96b6 d c4de96
96b6 96b6 s 				CALL	NZ,tGhostCheckL
96b9 96b9 d 3e44
96b9 96b9 s 				LD		A,	'D'			;right
96bb 96bb d cda797
96bb 96bb s 				CALL	isMoveValid
96be 96be d c4ec96
96be 96be s 				CALL	NZ,tGhostCheckR
96c1 96c1 d c9
96c1 96c1 s 				RET
96c2 96c2 s 				
96c2 96c2 s tGhostCheckU:	
96c2 96c2 d f5
96c2 96c2 s 				PUSH	AF
96c3 96c3 d 3a4181
96c3 96c3 s 				LD		A, (tGhostY)
96c6 96c6 d 3d
96c6 96c6 s 				DEC		A
96c7 96c7 d e61f
96c7 96c7 s 				AND		00011111B
96c9 96c9 d 47
96c9 96c9 s 				LD		B,A
96ca 96ca d 3a4081
96ca 96ca s 				LD		A,(tGhostX)
96cd 96cd d 4f
96cd 96cd s 				LD		C,A
96ce 96ce d 182a
96ce 96ce s 				JR		tGhostPathFind
96d0 96d0 s tGhostCheckD:			
96d0 96d0 d f5
96d0 96d0 s 				PUSH	AF
96d1 96d1 d 3a4181
96d1 96d1 s 				LD		A, (tGhostY)
96d4 96d4 d 3c
96d4 96d4 s 				INC		A
96d5 96d5 d e61f
96d5 96d5 s 				AND		00011111B
96d7 96d7 d 47
96d7 96d7 s 				LD		B,A
96d8 96d8 d 3a4081
96d8 96d8 s 				LD		A,(tGhostX)
96db 96db d 4f
96db 96db s 				LD		C,A
96dc 96dc d 181c
96dc 96dc s 				JR		tGhostPathFind
96de 96de s tGhostCheckL:		
96de 96de d f5
96de 96de s 				PUSH	AF	
96df 96df d 3a4081
96df 96df s 				LD		A, (tGhostX)
96e2 96e2 d 3d
96e2 96e2 s 				DEC		A
96e3 96e3 d e61f
96e3 96e3 s 				AND		00011111B
96e5 96e5 d 4f
96e5 96e5 s 				LD		C,A
96e6 96e6 d 3a4181
96e6 96e6 s 				LD		A,(tGhostY)
96e9 96e9 d 47
96e9 96e9 s 				LD		B,A
96ea 96ea d 180e
96ea 96ea s 				JR		tGhostPathFind
96ec 96ec s tGhostCheckR:
96ec 96ec d f5
96ec 96ec s 				PUSH	AF	
96ed 96ed d 3a4081
96ed 96ed s 				LD		A, (tGhostX)
96f0 96f0 d 3c
96f0 96f0 s 				INC		A
96f1 96f1 d e61f
96f1 96f1 s 				AND		00011111B
96f3 96f3 d 4f
96f3 96f3 s 				LD		C,A
96f4 96f4 d 3a4181
96f4 96f4 s 				LD		A,(tGhostY)
96f7 96f7 d 47
96f7 96f7 s 				LD		B,A
96f8 96f8 d 1800
96f8 96f8 s 				JR		tGhostPathFind
96fa 96fa s 
96fa 96fa s tGhostPathFind:
96fa 96fa d cd2c98
96fa 96fa s 				CALL	getAddressPF
96fd 96fd d 3a1381
96fd 96fd s 				LD		A,(ghostDis)
9700 9700 d 5e
9700 9700 s 				LD		E,(HL)
9701 9701 d bb
9701 9701 s 				CP		E
9702 9702 d f5
9702 9702 s                 PUSH    AF
9703 9703 d 3a0481
9703 9703 s                 LD      A,(pPActive)            ;Check power pellet is not activ, if it is, run away
9706 9706 d b7
9706 9706 s                 OR      A
9707 9707 d c21197
9707 9707 s                 JP      NZ,tGhostPFPP
970a 970a d f1
970a 970a s                 POP     AF
970b 970b d d21d97
970b 970b s 				JP		NC,tGhostSetNewDir
970e 970e d f1
970e 970e s                 POP     AF
970f 970f d f1
970f 970f s 				POP		AF
9710 9710 d c9
9710 9710 s 				RET
9711 9711 s tGhostPFPP:
9711 9711 d f1
9711 9711 s                 POP     AF
9712 9712 d da1d97
9712 9712 s                 JP		C,tGhostSetNewDir
9715 9715 d feff
9715 9715 s                 CP      0FFH
9717 9717 d ca1d97
9717 9717 s                 JP      Z,tGhostSetNewDir
971a 971a d f1
971a 971a s                 POP     AF
971b 971b d f1
971b 971b s 				POP		AF
971c 971c d c9
971c 971c s                 RET
971d 971d s 
971d 971d s tGhostSetNewDir:
971d 971d d 7b
971d 971d s 				LD		A,E
971e 971e d 321381
971e 971e s 				LD		(ghostDis),A
9721 9721 d f1
9721 9721 s 				POP		AF
9722 9722 d 324281
9722 9722 s 				LD		(tGhostDir),A
9725 9725 d c9
9725 9725 s 				RET
9726 9726 s 
9726 9726 s tGhostColide:   
9726 9726 d 3a0081
9726 9726 s                 LD      A,(pacx)                ;Compair X
9729 9729 d 47
9729 9729 s                 LD      B,A
972a 972a d 3a4081
972a 972a s                 LD      A,(tGhostX)
972d 972d d b8
972d 972d s                 CP      B
972e 972e d c0
972e 972e s                 RET     NZ
972f 972f d 3a0181
972f 972f s                 LD      A,(pacy)                ;Compair Y
9732 9732 d 47
9732 9732 s                 LD      B,A
9733 9733 d 3a4181
9733 9733 s                 LD      A,(tGhostY)
9736 9736 d b8
9736 9736 s                 CP      B
9737 9737 d c0
9737 9737 s                 RET     NZ
9738 9738 d 3a0481
9738 9738 s                 LD      A,(pPActive)              ;Colishion Happened
973b 973b d b7
973b 973b s                 OR      A
973c 973c d ca6c91
973c 973c s                 JP      Z,killPacman               ;If power pellet not active, run genric deth lib
973f 973f d cd5c92
973f 973f s 				CALL	eatGhost
9742 9742 d 3e11
9742 9742 s                 LD		a, tGhostStoreX	           ;set tGhost Pos
9744 9744 d 324081
9744 9744 s 			    LD		(tGhostX),a
9747 9747 d 3e0b
9747 9747 s 			    LD		a, tGhostStoreY
9749 9749 d 324181
9749 9749 s 			    LD		(tGhostY),a
974c 974c d 3e40
974c 974c s                 LD		a, tGhostInitTimer
974e 974e d 324581
974e 974e s 			    LD		(tGhostTimer),a
9751 9751 d c9
9751 9751 s                 RET
9752 9752 s 
9752 9752 s ;x = l
9752 9752 s ;y = h
9752 9752 s tGhostStack:
9752 9752 d 7d
9752 9752 s 				LD      A,L               		;Compair X
9753 9753 d 47
9753 9753 s                 LD      B,A
9754 9754 d 3a4081
9754 9754 s                 LD      A,(tGhostX)
9757 9757 d b8
9757 9757 s                 CP      B
9758 9758 d c0
9758 9758 s                 RET     NZ
9759 9759 d 7c
9759 9759 s                 LD      A,h                		;Compair Y
975a 975a d 47
975a 975a s                 LD      B,A
975b 975b d 3a4181
975b 975b s                 LD      A,(tGhostY)
975e 975e d b8
975e 975e s                 CP      B
975f 975f d c9
975f 975f s                 RET
9760 9760 s 
9760 9760 f ghosts.asm
9760 9760 d 1b5b39366d4d1b5b306d00
9760 9760 s tGhost:		.BYTE	1BH,"[96mM",1BH,"[0m",0
976b 976b s 
976b 976b s 
976b 976b d 1b5b33346d4d1b5b306d00
976b 976b s sGhost0:	.BYTE	1BH,"[34mM",1BH,"[0m",0
9776 9776 f main.asm
9776 9776 d 1b5b39376d4d1b5b306d00
9776 9776 s sGhost1:	.BYTE	1BH,"[97mM",1BH,"[0m",0
9781 9781 s ;-----------Spesific Libs -----;
9781 9781 s include movelibs.asm	
9781 9781 f movelibs.asm
9781 9781 s move:
9781 9781 d fe57
9781 9781 s 				CP		'W'
9783 9783 d 280a
9783 9783 s 				JR		Z,moveU
9785 9785 d fe41
9785 9785 s 				CP		'A'
9787 9787 d 2812
9787 9787 s 				JR		Z,moveL
9789 9789 d fe53
9789 9789 s 				CP		'S'
978b 978b d 2808
978b 978b s 				JR		Z,moveD
978d 978d d 1812
978d 978d s 				JR		moveR
978f 978f s 
978f 978f s moveU:			
978f 978f d 0a
978f 978f s 				LD		A, (BC)
9790 9790 d 3d
9790 9790 s 				DEC		A
9791 9791 d e61f
9791 9791 s 				AND		00011111B
9793 9793 d 02
9793 9793 s 				LD		(BC),A
9794 9794 d c9
9794 9794 s 				RET
9795 9795 s moveD:			
9795 9795 d 0a
9795 9795 s 				LD		A, (BC)
9796 9796 d 3c
9796 9796 s 				INC		A
9797 9797 d e61f
9797 9797 s 				AND		00011111B
9799 9799 d 02
9799 9799 s 				LD		(BC),A
979a 979a d c9
979a 979a s 				RET
979b 979b s moveL:			
979b 979b d 1a
979b 979b s 				LD		A, (DE)
979c 979c d 3d
979c 979c s 				DEC		A
979d 979d d e61f
979d 979d s 				AND		00011111B
979f 979f d 12
979f 979f s 				LD		(DE),A
97a0 97a0 d c9
97a0 97a0 s 				RET
97a1 97a1 s moveR:			
97a1 97a1 d 1a
97a1 97a1 s 				LD		A, (DE)
97a2 97a2 d 3c
97a2 97a2 s 				INC		A
97a3 97a3 d e61f
97a3 97a3 s 				AND		00011111B
97a5 97a5 d 12
97a5 97a5 s 				LD		(DE),A
97a6 97a6 d c9
97a6 97a6 s 				RET
97a7 97a7 s isMoveValid:
97a7 97a7 d fe57
97a7 97a7 s 				CP		'W'
97a9 97a9 d 280a
97a9 97a9 s 				JR		Z,moveUValid
97ab 97ab d fe41
97ab 97ab s 				CP		'A'
97ad 97ad d 280c
97ad 97ad s 				JR		Z,moveLValid
97af 97af d fe53
97af 97af s 				CP		'S'
97b1 97b1 d 2805
97b1 97b1 s 				JR		Z,moveDValid
97b3 97b3 d 1809
97b3 97b3 s 				JR		moveRValid
97b5 97b5 s moveUValid:			
97b5 97b5 d cb42
97b5 97b5 s 				BIT		upBit,D
97b7 97b7 d c9
97b7 97b7 s 				RET
97b8 97b8 s moveDValid:			
97b8 97b8 d cb4a
97b8 97b8 s 				BIT		downBit,D
97ba 97ba d c9
97ba 97ba s 				RET
97bb 97bb s moveLValid:			
97bb 97bb d cb52
97bb 97bb s 				BIT		leftBit,D
97bd 97bd d c9
97bd 97bd s 				RET
97be 97be s moveRValid:			
97be 97be d cb5a
97be 97be s 				BIT		rightBit,D
97c0 97c0 f main.asm
97c0 97c0 d c9
97c0 97c0 s 				RET
97c1 97c1 s include	mapLibs.asm	
97c1 97c1 f mapLibs.asm
97c1 97c1 s pathFindDepth   .EQU	30H
97c1 97c1 s 
97c1 97c1 s ;-------- Map -------;
97c1 97c1 s ;InitiMap
97c1 97c1 s initMap:
97c1 97c1 d 010004
97c1 97c1 s 				LD		BC,400H
97c4 97c4 d 2113a5
97c4 97c4 s 				LD		HL,map
97c7 97c7 d 1100e0
97c7 97c7 s 				LD		DE,liveMap
97ca 97ca d edb0
97ca 97ca s 				LDIR
97cc 97cc d c9
97cc 97cc s 				RET
97cd 97cd s 
97cd 97cd s ;------- Get Map Data ----;
97cd 97cd s ; C - X
97cd 97cd s ; B	- Y
97cd 97cd s getMapAddress:
97cd 97cd d c5
97cd 97cd s 				push	bc
97ce 97ce d cb00
97ce 97ce s 				rlc		b			;Shift b left 5
97d0 97d0 d cb00
97d0 97d0 s 				rlc		b			;Shift b left 5
97d2 97d2 d cb00
97d2 97d2 s 				rlc		b			;Shift b left 5
97d4 97d4 d cb00
97d4 97d4 s 				rlc		b			;Shift b left 5
97d6 97d6 d cb00
97d6 97d6 s 				rlc		b			;Shift b left 5
97d8 97d8 d 78
97d8 97d8 s 				ld		a,b
97d9 97d9 d e6e0
97d9 97d9 s 				and		11100000b	;Mask lower adress
97db 97db d b1
97db 97db s 				or		c			;Combine with C
97dc 97dc d 6f
97dc 97dc s 				ld		l,a			;A is now low byte of adress
97dd 97dd d 78
97dd 97dd s 				ld		a,b
97de 97de d e603
97de 97de s 				and		00000011b	;Mask upper adress
97e0 97e0 d f6e0
97e0 97e0 s 				or		0E0H		;Start of map
97e2 97e2 d 67
97e2 97e2 s 				ld		h,a
97e3 97e3 d c1
97e3 97e3 s 				pop		bc
97e4 97e4 d c9
97e4 97e4 s 				ret
97e5 97e5 s 
97e5 97e5 s ;--------Check map for pellets ------;
97e5 97e5 s checkNextLevel:
97e5 97e5 d cd0498
97e5 97e5 s 				CALL	checkMap
97e8 97e8 d 7b
97e8 97e8 s 				LD		A,E
97e9 97e9 d b7
97e9 97e9 s 				OR		A
97ea 97ea d c0
97ea 97ea s 				RET		NZ
97eb 97eb d 7a
97eb 97eb s 				LD		A,D
97ec 97ec d b7
97ec 97ec s 				OR		A
97ed 97ed d c0
97ed 97ed s 				RET		NZ
97ee 97ee s 
97ee 97ee d cdce99
97ee 97ee s 				CALL	countdown
97f1 97f1 d cdc197
97f1 97f1 s 				CALL	initMap
97f4 97f4 d cdcd91
97f4 97f4 s 				CALL	initGhost
97f7 97f7 d cdac90
97f7 97f7 s 				CALL	resetPacman
97fa 97fa d 21f9a0
97fa 97fa s 				LD		HL, home		;Go home
97fd 97fd d cd74a0
97fd 97fd s 				CALL	print
9800 9800 d cd5398
9800 9800 s 				CALL 	printMap
9803 9803 d c9
9803 9803 s 				ret
9804 9804 s 
9804 9804 s checkMap:
9804 9804 d 3e20
9804 9804 s 				ld		a,32
9806 9806 d 47
9806 9806 s 				ld		b,a			; 32 chars per line
9807 9807 d 4f
9807 9807 s 				ld		c,a			; 32 lines per map
9808 9808 d 2100e0
9808 9808 s 				ld		hl,liveMap
980b 980b d 110000
980b 980b s 				ld		de,0
980e 980e d 7e
980e 980e s checkMapLoop:	ld		a,(hl)		; get char
980f 980f d cd1f98
980f 980f s 				call	checkMapChar; check the char
9812 9812 d 23
9812 9812 s 				inc		hl			; next char
9813 9813 d 10f9
9813 9813 s 				djnz	checkMapLoop; if were not at the end of a line, print next char
9815 9815 d 41
9815 9815 s 				ld		b,c			;are we at the end of a block
9816 9816 d 1001
9816 9816 s 				djnz	checkMapNextLine
9818 9818 d c9
9818 9818 s 				ret
9819 9819 s checkMapNextLine:	
9819 9819 d 48
9819 9819 s 				ld		c,b			;copy decremented b back to c
981a 981a d 3e20
981a 981a s 				ld 		a,32		;refill b withj 32
981c 981c d 47
981c 981c s 				ld		b,a
981d 981d d 18ef
981d 981d s 				jr		checkMapLoop;draw next char
981f 981f s 
981f 981f s checkMapChar:
981f 981f d cb6f
981f 981f s 				bit		pelletBit,a
9821 9821 d c42a98
9821 9821 s 				CALL	NZ,incrementDE
9824 9824 d cb67
9824 9824 s 				bit		powerpBit,a
9826 9826 d c42a98
9826 9826 s 				CALL	NZ,incrementDE
9829 9829 d c9
9829 9829 s 				RET
982a 982a s incrementDE:
982a 982a d 13
982a 982a s 				INC		DE
982b 982b d c9
982b 982b s 				RET
982c 982c s 
982c 982c s ;------- Get Path Find Map Address----;
982c 982c s ; C - X
982c 982c s ; B	- Y
982c 982c s getAddressPF:
982c 982c d c5
982c 982c s 				push	bc
982d 982d d cb00
982d 982d s 				rlc		b			;Shift b left 5
982f 982f d cb00
982f 982f s 				rlc		b			;Shift b left 5
9831 9831 d cb00
9831 9831 s 				rlc		b			;Shift b left 5
9833 9833 d cb00
9833 9833 s 				rlc		b			;Shift b left 5
9835 9835 d cb00
9835 9835 s 				rlc		b			;Shift b left 5
9837 9837 d 78
9837 9837 s 				ld		a,b
9838 9838 d e6e0
9838 9838 s 				and		11100000b	;Mask lower adress
983a 983a d b1
983a 983a s 				or		c			;Combine with C
983b 983b d 6f
983b 983b s 				ld		l,a			;A is now low byte of adress
983c 983c d 78
983c 983c s 				ld		a,b
983d 983d d e603
983d 983d s 				and		00000011b	;Mask upper adress
983f 983f d f6d0
983f 983f s 				or		0D0H		;Start of map
9841 9841 d 67
9841 9841 s 				ld		h,a
9842 9842 d c1
9842 9842 s 				pop		bc
9843 9843 d c9
9843 9843 s 				ret
9844 9844 s 
9844 9844 s 
9844 9844 s ;--------- Map print -------- ;
9844 9844 s ; C - X
9844 9844 s ; B	- Y
9844 9844 s printMapAt:	
9844 9844 d c5
9844 9844 s 			PUSH	BC
9845 9845 d 0c
9845 9845 s 			INC		C
9846 9846 d 04
9846 9846 s 			INC		B
9847 9847 d cdfe9f
9847 9847 s 			CALL	moveCursor
984a 984a d c1
984a 984a s 			POP 	BC
984b 984b d cdcd97
984b 984b s 			CALL	getMapAddress
984e 984e d 7e
984e 984e s 			LD		A,(HL)
984f 984f d cd6e98
984f 984f s 			CALL	pmChar
9852 9852 d c9
9852 9852 s 			RET
9853 9853 s 
9853 9853 s printMap:
9853 9853 d 3e20
9853 9853 s 				ld		a,32
9855 9855 d 47
9855 9855 s 				ld		b,a			; 32 chars per line
9856 9856 d 4f
9856 9856 s 				ld		c,a			; 32 lines per map
9857 9857 d 2100e0
9857 9857 s 				ld		hl,liveMap
985a 985a d 7e
985a 985a s pmLoop:			ld		a,(hl)		; get char
985b 985b d cd6e98
985b 985b s 				call	pmChar		; decode what to print
985e 985e d 23
985e 985e s 				inc		hl			; next char
985f 985f d 10f9
985f 985f s 				djnz	pmLoop		; if were not at the end of a line, print next char
9861 9861 d cdf59f
9861 9861 s 				call	newline		; if we are, print a new line
9864 9864 d 41
9864 9864 s 				ld		b,c			;are we at the end of a block
9865 9865 d 1001
9865 9865 s 				djnz	pmNextLine
9867 9867 d c9
9867 9867 s 				ret
9868 9868 s pmNextLine:	
9868 9868 d 48
9868 9868 s 				ld		c,b			;copy decremented b back to c
9869 9869 d 3e20
9869 9869 s 				ld 		a,32		;refill b withj 32
986b 986b d 47
986b 986b s 				ld		b,a
986c 986c d 18ec
986c 986c s 				jr		pmLoop		;draw next char
986e 986e s 
986e 986e s 
986e 986e s pmChar:		;-- Print map char a
986e 986e d e5
986e 986e s 				push	hl
986f 986f d cb67
986f 986f s 				bit		powerpBit,a
9871 9871 d 200e
9871 9871 s 				jr		nz,printPP
9873 9873 d cb6f
9873 9873 s 				bit		pelletBit,a
9875 9875 d 2012
9875 9875 s 				jr		nz,printP
9877 9877 d cb77
9877 9877 s 				bit		wallBit,a
9879 9879 d 2016
9879 9879 s 				jr		nz,printWall
987b 987b d cb7f
987b 987b s 				bit		sfBit,a
987d 987d d 201a
987d 987d s 				jr		nz,printSF
987f 987f d 1820
987f 987f s 				jr	 	printVoid
9881 9881 s 			
9881 9881 s printPP:
9881 9881 d 21d6a0
9881 9881 s 				ld		hl,powerPellet
9884 9884 d cd74a0
9884 9884 s 				call	print
9887 9887 d 1820
9887 9887 s 				jr		pmCharRet
9889 9889 s printP:
9889 9889 d 21e1a0
9889 9889 s 				ld		hl,pellet
988c 988c d cd74a0
988c 988c s 				call	print
988f 988f d 1818
988f 988f s 				jr		pmCharRet
9891 9891 s printWall:
9891 9891 d 21cba0
9891 9891 s 				ld		hl,wall
9894 9894 d cd74a0
9894 9894 s 				call	print
9897 9897 d 1810
9897 9897 s 				jr		pmCharRet
9899 9899 s printSF:
9899 9899 d 21eca0
9899 9899 s 				ld		hl,superFruit
989c 989c d cd74a0
989c 989c s 				call	print
989f 989f d 1808
989f 989f s 				jr		pmCharRet
98a1 98a1 s printVoid:
98a1 98a1 d 21f7a0
98a1 98a1 s 				ld		hl,void
98a4 98a4 d cd74a0
98a4 98a4 s 				call	print
98a7 98a7 d 1800
98a7 98a7 s 				jr		pmCharRet
98a9 98a9 s pmCharRet:	
98a9 98a9 d e1
98a9 98a9 s 				pop 	hl
98aa 98aa d c9
98aa 98aa s 				ret
98ab 98ab s 				
98ab 98ab s ;-------- Path Find Map -------;
98ab 98ab s ;Initi Path Find Map
98ab 98ab s initPathFind:
98ab 98ab d 3e20
98ab 98ab s 				ld		a,32
98ad 98ad d 47
98ad 98ad s 				ld		b,a			; 32 chars per line
98ae 98ae d 4f
98ae 98ae s 				ld		c,a			; 32 lines per map
98af 98af d 2100d0
98af 98af s 				ld		hl,pathFindMap
98b2 98b2 d 16ff
98b2 98b2 s initpPFLoop:	ld		D,0FFH		; set char
98b4 98b4 d 72
98b4 98b4 s 				LD		(HL),D
98b5 98b5 d 23
98b5 98b5 s 				inc		hl			; next char
98b6 98b6 d 10fa
98b6 98b6 s 				djnz	initpPFLoop		; if were not at the end of a line, print next char
98b8 98b8 d 41
98b8 98b8 s 				ld		b,c			;are we at the end of a block
98b9 98b9 d 1001
98b9 98b9 s 				djnz	pfNextRow
98bb 98bb d c9
98bb 98bb s 				ret
98bc 98bc s pfNextRow:	
98bc 98bc d 48
98bc 98bc s 				ld		c,b			;copy decremented b back to c
98bd 98bd d 3e20
98bd 98bd s 				ld 		a,32		;refill b withj 32
98bf 98bf d 47
98bf 98bf s 				ld		b,a
98c0 98c0 d c3b298
98c0 98c0 s 				jp		initpPFLoop		;draw next char
98c3 98c3 s 
98c3 98c3 s ;Calculate Map
98c3 98c3 s calculatePathMap:
98c3 98c3 d 01ffff
98c3 98c3 s 				ld		BC,0FFFFH		;Push Stack terminator		
98c6 98c6 d c5
98c6 98c6 s 				PUSH	BC
98c7 98c7 d 3a0081
98c7 98c7 s 				LD		A, (pacx)		;Push X to stack
98ca 98ca d 4f
98ca 98ca s 				LD		C,A
98cb 98cb d 3a0181
98cb 98cb s 				LD		A, (pacy)		;Push Y to stack
98ce 98ce d 47
98ce 98ce s 				LD		B,A
98cf 98cf d cd2c98
98cf 98cf s 				CALL	getAddressPF
98d2 98d2 d 3600
98d2 98d2 s 				LD		(HL),00H
98d4 98d4 d c5
98d4 98d4 s 				PUSH	BC
98d5 98d5 s calculatePathMapLoop:
98d5 98d5 d c1
98d5 98d5 s 				POP		BC			;Get node to visit
98d6 98d6 d 78
98d6 98d6 s 				LD		A,B			;Check Its not FFFF
98d7 98d7 d b7
98d7 98d7 s 				OR		A
98d8 98d8 d feff
98d8 98d8 s 				CP		0FFH
98da 98da d c8
98da 98da s 				RET		Z			;We only have to check half the byte as its imposable to have a cord more than 20h
98db 98db d ed43f289
98db 98db s 				LD		(originalBC),BC
98df 98df d cd2c98
98df 98df s 				CALL	getAddressPF
98e2 98e2 d 7e
98e2 98e2 s 				LD		A,(HL)
98e3 98e3 d 3c
98e3 98e3 s 				INC		A
98e4 98e4 d fe30
98e4 98e4 s                 CP      pathFindDepth
98e6 98e6 d cad598
98e6 98e6 s 				JP 		Z,calculatePathMapLoop	;Skip if wer getting too long
98e9 98e9 d 5f
98e9 98e9 s 				LD		E,A			;Keep the distance were working with safe
98ea 98ea d cdcd97
98ea 98ea s 				CALL	getMapAddress
98ed 98ed d 56
98ed 98ed s 				LD		D,(HL)
98ee 98ee d 3e57
98ee 98ee s 				LD		A,	'W'			;check up
98f0 98f0 d cda797
98f0 98f0 s 				CALL	isMoveValid
98f3 98f3 d c41199
98f3 98f3 s 				CALL	NZ,calculateMapU
98f6 98f6 d 3e53
98f6 98f6 s 				LD		A,	'S'			;down
98f8 98f8 d cda797
98f8 98f8 s 				CALL	isMoveValid
98fb 98fb d c41d99
98fb 98fb s 				CALL	NZ,calculateMapD
98fe 98fe d 3e41
98fe 98fe s 				LD		A,	'A'			;left
9900 9900 d cda797
9900 9900 s 				CALL	isMoveValid
9903 9903 d c42999
9903 9903 s 				CALL	NZ,calculateMapL
9906 9906 d 3e44
9906 9906 s 				LD		A,	'D'			;right
9908 9908 d cda797
9908 9908 s 				CALL	isMoveValid
990b 990b d c43599
990b 990b s 				CALL	NZ,calculateMapR
990e 990e d c3d598
990e 990e s 				JP		calculatePathMapLoop
9911 9911 s 				
9911 9911 s calculateMapU:	
9911 9911 d ed4bf289
9911 9911 s 				LD		BC,(originalBC)			;We want to preserve the OG BC Through this process so it can be used again in sub directions		
9915 9915 d 78
9915 9915 s 				LD		A, B				;Make modifications to corod
9916 9916 d 3d
9916 9916 s 				DEC		A
9917 9917 d e61f
9917 9917 s 				AND		00011111B			;Mask for looping
9919 9919 d 47
9919 9919 s 				LD		B,A
991a 991a d c34199
991a 991a s 				JP		calculateMapCell
991d 991d s calculateMapD:	
991d 991d d ed4bf289
991d 991d s 				LD		BC,(originalBC)	
9921 9921 d 78
9921 9921 s 				LD		A, B
9922 9922 d 3c
9922 9922 s 				INC		A
9923 9923 d e61f
9923 9923 s 				AND		00011111B
9925 9925 d 47
9925 9925 s 				LD		B,A
9926 9926 d c34199
9926 9926 s 				JP		calculateMapCell
9929 9929 s calculateMapL:	
9929 9929 d ed4bf289
9929 9929 s 				LD		BC,(originalBC)
992d 992d d 79
992d 992d s 				LD		A, C
992e 992e d 3d
992e 992e s 				DEC		A
992f 992f d e61f
992f 992f s 				AND		00011111B
9931 9931 d 4f
9931 9931 s 				LD		C,A
9932 9932 d c34199
9932 9932 s 				JP		calculateMapCell
9935 9935 s calculateMapR:
9935 9935 d ed4bf289
9935 9935 s 				LD		BC,(originalBC)
9939 9939 d 79
9939 9939 s 				LD		A, C
993a 993a d 3c
993a 993a s 				INC		A
993b 993b d e61f
993b 993b s 				AND		00011111B
993d 993d d 4f
993d 993d s 				LD		C,A
993e 993e d c34199
993e 993e s 				JP		calculateMapCell
9941 9941 s 
9941 9941 s calculateMapCell:
9941 9941 d cd2c98
9941 9941 s 				CALL	getAddressPF
9944 9944 d 7e
9944 9944 s 				LD		A,(HL)
9945 9945 s 
9945 9945 d bb
9945 9945 s 				CP		E			;Compare current data (A) with E (the path were looking at)
9946 9946 d d8
9946 9946 s 				RET		C			;If carry is set (A < E)(whats there already < our path) then this route is a dud
9947 9947 d c8
9947 9947 s 				RET		Z			;If its equal we dont want to continue as we alreay have an equally fast route
9948 9948 d 73
9948 9948 s 				LD		(HL),E
9949 9949 d e1
9949 9949 s 				POP		HL			;We need the return adress on the top of the stack
994a 994a d c5
994a 994a s 				PUSH	BC			;Push Cell so it can be visited
994b 994b d e5
994b 994b s 				PUSH	HL
994c 994c d c9
994c 994c s 				RET
994d 994d s 
994d 994d s printPFMap:
994d 994d d 0e01
994d 994d s                 LD		C, $01
994f 994f d 061a
994f 994f s 				LD		B, $1A
9951 9951 d cdfe9f
9951 9951 s 				CALL	moveCursor
9954 9954 d 3e20
9954 9954 s 				ld		a,32
9956 9956 d 47
9956 9956 s 				ld		b,a			; 32 chars per line
9957 9957 d 3e1a
9957 9957 s                 ld		a,$1A
9959 9959 d 4f
9959 9959 s 				ld		c,a			; 32 lines per map
995a 995a d 2100d0
995a 995a s 				ld		hl,pathFindMap
995d 995d d 7e
995d 995d s pmPFLoop:		ld		a,(hl)		; get char
995e 995e d feff
995e 995e s                 cp      0FFH
9960 9960 d ca7999
9960 9960 s                 JP      Z,pmPFSkip
9963 9963 d cd44a0
9963 9963 s 				call	NumToHex	; decode what to print
9966 9966 d 3e20
9966 9966 s pmPFAfterSkip:  ld      a,' '
9968 9968 d cf
9968 9968 s                 rst     08H
9969 9969 d 23
9969 9969 s 				inc		hl			; next char
996a 996a d 10f1
996a 996a s 				djnz	pmPFLoop		; if were not at the end of a line, print next char
996c 996c d cdf59f
996c 996c s 				call	newline		; if we are, print a new line
996f 996f d 41
996f 996f s 				ld		b,c			;are we at the end of a block
9970 9970 d 1001
9970 9970 s 				djnz	pmPFNextLine
9972 9972 d c9
9972 9972 s 				ret
9973 9973 s pmPFNextLine:	
9973 9973 d 48
9973 9973 s 				ld		c,b			;copy decremented b back to c
9974 9974 d 3e20
9974 9974 s 				ld 		a,32		;refill b withj 32
9976 9976 d 47
9976 9976 s 				ld		b,a
9977 9977 d 18e4
9977 9977 s 				jr		pmPFLoop	;draw next char
9979 9979 s pmPFSkip:       
9979 9979 d 3e20
9979 9979 s                 ld      a,' '
997b 997b d cf
997b 997b s                 rst     08H
997c 997c d 3e20
997c 997c s                 ld      a,' '
997e 997e d cf
997e 997e s                 rst     08H
997f 997f f main.asm
997f 997f d c36699
997f 997f s                 JP      pmPFAfterSkip
9982 9982 s 
9982 9982 s ;------HUD;
9982 9982 s include hud.asm
9982 9982 f hud.asm
9982 9982 s score			.EQU	8900H		;Score
9982 9982 s 
9982 9982 s printHud:
9982 9982 d cd8999
9982 9982 s 				CALL	printScore
9985 9985 d cda399
9985 9985 s 				CALL	printLives
9988 9988 d c9
9988 9988 s 				RET
9989 9989 s ;Hud elements
9989 9989 s printScore:					
9989 9989 d 0e02
9989 9989 s 				LD		C, $02
998b 998b d 0623
998b 998b s 				LD		B, $23
998d 998d d cdfe9f
998d 998d s 				CALL	moveCursor
9990 9990 d 21c299
9990 9990 s 				LD		HL, scoreHUD
9993 9993 d cd74a0
9993 9993 s 				CALL 	print
9996 9996 d 2a0089
9996 9996 s 				LD		HL, (score)
9999 9999 d cd19a0
9999 9999 s 				CALL	HLToDec
999c 999c d 3e0a
999c 999c s 				LD		A,LF
999e 999e d cf
999e 999e s 				RST     08H
999f 999f d 3e0d
999f 999f s 				LD		A,CR
99a1 99a1 d cf
99a1 99a1 s 				RST     08H
99a2 99a2 d c9
99a2 99a2 s 				RET
99a3 99a3 s 
99a3 99a3 s printLives:					
99a3 99a3 d 0e02
99a3 99a3 s 				LD		C, $02
99a5 99a5 d 0624
99a5 99a5 s 				LD		B, $24
99a7 99a7 d cdfe9f
99a7 99a7 s 				CALL	moveCursor
99aa 99aa d 3a0581
99aa 99aa s 				LD 		A,(pacLives)
99ad 99ad d 3d
99ad 99ad s 				DEC		A
99ae 99ae d b7
99ae 99ae s 				OR		A
99af 99af d cabb99
99af 99af s 				JP		Z,removeOldLives
99b2 99b2 d 47
99b2 99b2 s 				LD		B,A
99b3 99b3 d 218e91
99b3 99b3 s printLivesLoop:	LD		HL, pacman
99b6 99b6 d cd74a0
99b6 99b6 s 				CALL 	print
99b9 99b9 d 10f8
99b9 99b9 s 				DJNZ	printLivesLoop
99bb 99bb d 21ca99
99bb 99bb s removeOldLives:	LD		HL, liveBlanking
99be 99be d cd74a0
99be 99be s 				CALL 	print
99c1 99c1 d c9
99c1 99c1 s 				RET
99c2 99c2 s 
99c2 99c2 d 53636f72653a2000
99c2 99c2 s scoreHUD:     	.BYTE "Score: ",0
99ca 99ca f main.asm
99ca 99ca d 20202000
99ca 99ca s liveBlanking	.BYTE "   ",0
99ce 99ce s 
99ce 99ce s include countdown.asm
99ce 99ce f countdown.asm
99ce 99ce s countdown:
99ce 99ce d 010503
99ce 99ce s             LD      BC ,0305H
99d1 99d1 d 111218
99d1 99d1 s 			LD		DE ,1812H 
99d4 99d4 d cd8fa0
99d4 99d4 s 			CALL	DrawBox
99d7 99d7 d 010704
99d7 99d7 s             LD      BC ,0407H
99da 99da d 21e09c
99da 99da s             LD      HL,number3
99dd 99dd d cd7fa0
99dd 99dd s             CALL    printAtPos
99e0 99e0 d 01ffff
99e0 99e0 s             LD      BC, 0FFFFH
99e3 99e3 d cdc2a0
99e3 99e3 s             CALL    delay
99e6 99e6 d cdc2a0
99e6 99e6 s             CALL    delay
99e9 99e9 d cdc2a0
99e9 99e9 s             CALL    delay
99ec 99ec d cdc2a0
99ec 99ec s             CALL    delay
99ef 99ef d 010704
99ef 99ef s             LD      BC ,0407H
99f2 99f2 d 21809b
99f2 99f2 s             LD      HL,number2
99f5 99f5 d cd7fa0
99f5 99f5 s             CALL    printAtPos
99f8 99f8 d 01ffff
99f8 99f8 s             LD      BC, 0FFFFH
99fb 99fb d cdc2a0
99fb 99fb s             CALL    delay
99fe 99fe d cdc2a0
99fe 99fe s             CALL    delay
9a01 9a01 d cdc2a0
9a01 9a01 s             CALL    delay
9a04 9a04 d cdc2a0
9a04 9a04 s             CALL    delay
9a07 9a07 d 21209a
9a07 9a07 s             LD      HL,number1
9a0a 9a0a d 010704
9a0a 9a0a s             LD      BC ,0407H
9a0d 9a0d d cd7fa0
9a0d 9a0d s             CALL    printAtPos
9a10 9a10 d 01ffff
9a10 9a10 s             LD      BC, 0FFFFH
9a13 9a13 d cdc2a0
9a13 9a13 s             CALL    delay
9a16 9a16 d cdc2a0
9a16 9a16 s             CALL    delay
9a19 9a19 d cdc2a0
9a19 9a19 s             CALL    delay
9a1c 9a1c d cdc2a0
9a1c 9a1c s             CALL    delay
9a1f 9a1f d c9
9a1f 9a1f s             RET
9a20 9a20 s 
9a20 9a20 s ;Font 'doh'
9a20 9a20 d 20202020202031313131313131202020202020200001
9a20 9a20 s number1:            .BYTE   "      1111111       ",0,1
9a36 9a36 d 2020202020313a3a3a3a3a3a31202020202020200001
9a36 9a36 s                     .BYTE   "     1::::::1       ",0,1
9a4c 9a4c d 20202020313a3a3a3a3a3a3a31202020202020200001
9a4c 9a4c s                     .BYTE   "    1:::::::1       ",0,1
9a62 9a62 d 202020203131313a3a3a3a3a31202020202020200001
9a62 9a62 s                     .BYTE   "    111:::::1       ",0,1
9a78 9a78 d 20202020202020313a3a3a3a31202020202020200001
9a78 9a78 s                     .BYTE   "       1::::1       ",0,1
9a8e 9a8e d 20202020202020313a3a3a3a31202020202020200001
9a8e 9a8e s                     .BYTE   "       1::::1       ",0,1
9aa4 9aa4 d 20202020202020313a3a3a3a31202020202020200001
9aa4 9aa4 s                     .BYTE   "       1::::1       ",0,1
9aba 9aba d 20202020202020313a3a3a3a6c202020202020200001
9aba 9aba s                     .BYTE   "       1::::l       ",0,1
9ad0 9ad0 d 20202020202020313a3a3a3a6c202020202020200001
9ad0 9ad0 s                     .BYTE   "       1::::l       ",0,1
9ae6 9ae6 d 20202020202020313a3a3a3a6c202020202020200001
9ae6 9ae6 s                     .BYTE   "       1::::l       ",0,1
9afc 9afc d 20202020202020313a3a3a3a6c202020202020200001
9afc 9afc s                     .BYTE   "       1::::l       ",0,1
9b12 9b12 d 20202020202020313a3a3a3a6c202020202020200001
9b12 9b12 s                     .BYTE   "       1::::l       ",0,1
9b28 9b28 d 202020203131313a3a3a3a3a3a313131202020200001
9b28 9b28 s                     .BYTE   "    111::::::111    ",0,1
9b3e 9b3e d 20202020313a3a3a3a3a3a3a3a3a3a31202020200001
9b3e 9b3e s                     .BYTE   "    1::::::::::1    ",0,1
9b54 9b54 d 20202020313a3a3a3a3a3a3a3a3a3a31202020200001
9b54 9b54 s                     .BYTE   "    1::::::::::1    ",0,1
9b6a 9b6a d 20202020313131313131313131313131202020200000
9b6a 9b6a s                     .BYTE   "    111111111111    ",0,0
9b80 9b80 s 
9b80 9b80 d 20323232323232323232323232323232202020200001
9b80 9b80 s number2:            .BYTE   " 222222222222222    ",0,1
9b96 9b96 d 323a3a3a3a3a3a3a3a3a3a3a3a3a3a3a323220200001
9b96 9b96 s                     .BYTE   "2:::::::::::::::22  ",0,1
9bac 9bac d 323a3a3a3a3a3a3232323232323a3a3a3a3a32200001
9bac 9bac s                     .BYTE   "2::::::222222:::::2 ",0,1
9bc2 9bc2 d 323232323232322020202020323a3a3a3a3a32200001
9bc2 9bc2 s                     .BYTE   "2222222     2:::::2 ",0,1
9bd8 9bd8 d 202020202020202020202020323a3a3a3a3a32200001
9bd8 9bd8 s                     .BYTE   "            2:::::2 ",0,1
9bee 9bee d 202020202020202020202020323a3a3a3a3a32200001
9bee 9bee s                     .BYTE   "            2:::::2 ",0,1
9c04 9c04 d 202020202020202020323232323a3a3a3a3220200001
9c04 9c04 s                     .BYTE   "         2222::::2  ",0,1
9c1a 9c1a d 2020202032323232323a3a3a3a3a3a32322020200001
9c1a 9c1a s                     .BYTE   "    22222::::::22   ",0,1
9c30 9c30 d 202032323a3a3a3a3a3a3a3a32323220202020200001
9c30 9c30 s                     .BYTE   "  22::::::::222     ",0,1
9c46 9c46 d 20323a3a3a3a3a323232323220202020202020200001
9c46 9c46 s                     .BYTE   " 2:::::22222        ",0,1
9c5c 9c5c d 323a3a3a3a3a32202020202020202020202020200001
9c5c 9c5c s                     .BYTE   "2:::::2             ",0,1
9c72 9c72 d 323a3a3a3a3a32202020202020202020202020200001
9c72 9c72 s                     .BYTE   "2:::::2             ",0,1
9c88 9c88 d 323a3a3a3a3a32202020202020203232323232320001
9c88 9c88 s                     .BYTE   "2:::::2       222222",0,1
9c9e 9c9e d 323a3a3a3a3a3a323232323232323a3a3a3a3a320001
9c9e 9c9e s                     .BYTE   "2::::::2222222:::::2",0,1
9cb4 9cb4 d 323a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a320001
9cb4 9cb4 s                     .BYTE   "2::::::::::::::::::2",0,1
9cca 9cca d 32323232323232323232323232323232323232320000
9cca 9cca s                     .BYTE   "22222222222222222222",0,0
9ce0 9ce0 s 
9ce0 9ce0 d 20203333333333333333333333333333332020200001
9ce0 9ce0 s number3:            .BYTE   "  333333333333333   ",0,1
9cf6 9cf6 d 20333a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3333200001
9cf6 9cf6 s                     .BYTE   " 3:::::::::::::::33 ",0,1
9d0c 9d0c d 20333a3a3a3a3a3a33333333333a3a3a3a3a3a330001
9d0c 9d0c s                     .BYTE   " 3::::::33333::::::3",0,1
9d22 9d22 d 20333333333333332020202020333a3a3a3a3a330001
9d22 9d22 s                     .BYTE   " 3333333     3:::::3",0,1
9d38 9d38 d 20202020202020202020202020333a3a3a3a3a330001
9d38 9d38 s                     .BYTE   "             3:::::3",0,1
9d4e 9d4e d 20202020202020202020202020333a3a3a3a3a330001
9d4e 9d4e s                     .BYTE   "             3:::::3",0,1
9d64 9d64 d 202020202033333333333333333a3a3a3a3a33200001
9d64 9d64 s                     .BYTE   "     33333333:::::3 ",0,1
9d7a 9d7a d 2020202020333a3a3a3a3a3a3a3a3a3a3a3320200001
9d7a 9d7a s                     .BYTE   "     3:::::::::::3  ",0,1
9d90 9d90 d 202020202033333333333333333a3a3a3a3a33200001
9d90 9d90 s                     .BYTE   "     33333333:::::3 ",0,1
9da6 9da6 d 20202020202020202020202020333a3a3a3a3a330001
9da6 9da6 s                     .BYTE   "             3:::::3",0,1
9dbc 9dbc d 20202020202020202020202020333a3a3a3a3a330001
9dbc 9dbc s                     .BYTE   "             3:::::3",0,1
9dd2 9dd2 d 20202020202020202020202020333a3a3a3a3a330001
9dd2 9dd2 s                     .BYTE   "             3:::::3",0,1
9de8 9de8 d 20333333333333332020202020333a3a3a3a3a330001
9de8 9de8 s                     .BYTE   " 3333333     3:::::3",0,1
9dfe 9dfe d 20333a3a3a3a3a3a33333333333a3a3a3a3a3a330001
9dfe 9dfe s                     .BYTE   " 3::::::33333::::::3",0,1
9e14 9e14 d 20333a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3333200001
9e14 9e14 s                     .BYTE   " 3:::::::::::::::33 ",0,1
9e2a 9e2a f main.asm
9e2a 9e2a d 20203333333333333333333333333333332020200000
9e2a 9e2a s                     .BYTE   "  333333333333333   ",0,0
9e40 9e40 s include titlescreen.asm
9e40 9e40 f titlescreen.asm
9e40 9e40 s displayTitleScreen:
9e40 9e40 d 010603
9e40 9e40 s                 LD      BC ,0306H
9e43 9e43 d 111416
9e43 9e43 s 			    LD		DE ,1614H 
9e46 9e46 d cd8fa0
9e46 9e46 s 			    CALL	DrawBox
9e49 9e49 d 010804
9e49 9e49 s                 LD      BC ,0408H
9e4c 9e4c d 21849e
9e4c 9e4c s                 LD      HL,logo
9e4f 9e4f d cd7fa0
9e4f 9e4f s                 CALL    printAtPos
9e52 9e52 d 010809
9e52 9e52 s                 LD      BC ,0908H
9e55 9e55 d 21149f
9e55 9e55 s                 LD      HL,info
9e58 9e58 d cd7fa0
9e58 9e58 s                 CALL    printAtPos
9e5b 9e5b d 01080d
9e5b 9e5b s                 LD      BC ,0D08H
9e5e 9e5e d 21289f
9e5e 9e5e s                 LD      HL,message
9e61 9e61 d cd7fa0
9e61 9e61 s                 CALL    printAtPos
9e64 9e64 d 010a0f
9e64 9e64 s                 LD      BC ,0F0AH
9e67 9e67 d 213c9f
9e67 9e67 s                 LD      HL,startGameMessage
9e6a 9e6a d cd7fa0
9e6a 9e6a s                 CALL    printAtPos
9e6d 9e6d d 010810
9e6d 9e6d s                 LD      BC ,1008H
9e70 9e70 d 214c9f
9e70 9e70 s                 LD      HL,exitMessage
9e73 9e73 d cd7fa0
9e73 9e73 s                 CALL    printAtPos
9e76 9e76 s titleScreenWaitForInput:
9e76 9e76 d d7
9e76 9e76 s                 RST		10H
9e77 9e77 d fe31
9e77 9e77 s                 CP      '1'
9e79 9e79 d ca1c90
9e79 9e79 s                 JP      Z,startGame
9e7c 9e7c d fe32
9e7c 9e7c s                 CP      '2'
9e7e 9e7e d ca7c90
9e7e 9e7e s                 JP      Z,quit                     
9e81 9e81 d c3769e
9e81 9e81 s                 JP      titleScreenWaitForInput
9e84 9e84 s 
9e84 9e84 s ;font graceful
9e84 9e84 s logo:
9e84 9e84 d 1b5b39316d205f5f5f5f201b5b39366d205f20205f2020201b5b33336d5f5f5f200001
9e84 9e84 s                     .BYTE   1BH,"[91m ____ ",1BH,"[96m _  _   ",1BH,"[33m___ ",0,1
9ea7 9ea7 d 1b5b39316d2820205f205c1b5b39366d2f202928205c201b5b33336d2f205f5f290001
9ea7 9ea7 s                     .BYTE   1BH,"[91m(  _ \",1BH,"[96m/ )( \ ",1BH,"[33m/ __)",0,1
9eca 9eca d 1b5b39316d2029205f5f2f1b5b39366d29205c2f20281b5b33336d2820285f5f200001
9eca 9eca s                     .BYTE   1BH,"[91m ) __/",1BH,"[96m) \/ (",1BH,"[33m( (__ ",0,1
9eed 9eed d 1b5b39316d285f5f2920201b5b39366d5c5f5f5f5f2f201b5b33336d5c5f5f5f291b5b306d0000
9eed 9eed s                     .BYTE   1BH,"[91m(__)  ",1BH,"[96m\____/ ",1BH,"[33m\___)", 1BH,"[0m",0,0
9f14 9f14 s 
9f14 9f14 d 6279204a616d6573204272617920323032300000
9f14 9f14 s info:               .BYTE  "by James Bray 2020",0,0
9f28 9f28 s 
9f28 9f28 d 5072657373206b657920746f2073746172740000
9f28 9f28 s message:           .BYTE   "Press key to start",0,0
9f3c 9f3c d 2831292053746172742047616d650000
9f3c 9f3c s startGameMessage:  .BYTE   "(1) Start Game",0,0
9f4c 9f4c f main.asm
9f4c 9f4c d 283229204578697420746f2050726f6d70740000
9f4c 9f4c s exitMessage:       .BYTE   "(2) Exit to Prompt",0,0
9f60 9f60 s include gameOver.asm
9f60 9f60 f gameOver.asm
9f60 9f60 s displayGameOver:
9f60 9f60 d 010406
9f60 9f60 s                 LD      BC ,0604H
9f63 9f63 d 110a1a
9f63 9f63 s 			    LD		DE ,1A0AH 
9f66 9f66 d cd8fa0
9f66 9f66 s 			    CALL	DrawBox
9f69 9f69 d 010507
9f69 9f69 s                 LD      BC ,0705H
9f6c 9f6c d 21849f
9f6c 9f6c s                 LD      HL,deathMessage1
9f6f 9f6f d cd7fa0
9f6f 9f6f s                 CALL    printAtPos
9f72 9f72 d 01050d
9f72 9f72 s                 LD      BC ,0D05H
9f75 9f75 d 21db9f
9f75 9f75 s                 LD      HL,deathMessage2
9f78 9f78 d cd7fa0
9f78 9f78 s                 CALL    printAtPos
9f7b 9f7b s gameOverwaitForInput:
9f7b 9f7b d d7
9f7b 9f7b s                 RST		10H
9f7c 9f7c d fe20
9f7c 9f7c s                 CP      ' '
9f7e 9f7e d ca0790
9f7e 9f7e s                 JP      Z,gameTop                    
9f81 9f81 d c37b9f
9f81 9f81 s                 JP      gameOverwaitForInput
9f84 9f84 s 
9f84 9f84 s deathMessage1:
9f84 9f84 d 1b5b39316d205f5f202020202020202020205f202020202020202020200001
9f84 9f84 s                     .BYTE    1BH,"[91m __          _          ",0,1
9fa3 9fa3 d 2f5f5f205f205f5f20205f202f205c202020205f20205f5f0001
9fa3 9fa3 s                     .BYTE            "/__ _ __  _ / \    _  __",0,1
9fbd 9fbd d 5c5f7c285f7c7c7c7c282f5f5c5f2f5c5f2f282f5f207c201b5b306d0000
9fbd 9fbd s                     .BYTE            "\_|(_||||(/_\_/\_/(/_ | ",1BH,"[0m",0,0
9fdb 9fdb s 
9fdb 9fdb f main.asm
9fdb 9fdb d 507265737320537061636520746f20636f6e74696e7565210000
9fdb 9fdb s deathMessage2:      .BYTE    "Press Space to continue!",0,0
9ff5 9ff5 s 
9ff5 9ff5 s ;------- Libs ------------;
9ff5 9ff5 s include libs.asm
9ff5 9ff5 f libs.asm
9ff5 9ff5 s seed			.EQU	8888H		;Random seed
9ff5 9ff5 s 
9ff5 9ff5 s newline:			
9ff5 9ff5 d f5
9ff5 9ff5 s 				push 	af
9ff6 9ff6 d 3e0d
9ff6 9ff6 s 				ld		a, CR
9ff8 9ff8 d cf
9ff8 9ff8 s 				rst 	08H
9ff9 9ff9 d 3e0a
9ff9 9ff9 s 				ld		a, LF
9ffb 9ffb d cf
9ffb 9ffb s 				rst 	08H
9ffc 9ffc d f1
9ffc 9ffc s 				pop 	af
9ffd 9ffd d c9
9ffd 9ffd s 				ret
9ffe 9ffe s 			
9ffe 9ffe s ;move cursor to (C,B)				
9ffe 9ffe s moveCursor:		
9ffe 9ffe d e5
9ffe 9ffe s 				PUSH	HL
9fff 9fff d 3e1b
9fff 9fff s 				LD		A,$1B
a001 a001 d cf
a001 a001 s 				RST     08H
a002 a002 d 3e5b
a002 a002 s 				LD		A,'['
a004 a004 d cf
a004 a004 s 				RST     08H
a005 a005 d 68
a005 a005 s 				LD		L,B
a006 a006 d 2600
a006 a006 s 				LD		H,0
a008 a008 d cd19a0
a008 a008 s 				CALL	HLToDec
a00b a00b d 3e3b
a00b a00b s 				LD		A,$3B
a00d a00d d cf
a00d a00d s 				RST     08H
a00e a00e d 69
a00e a00e s 				LD		L,C
a00f a00f d 2600
a00f a00f s 				LD		H,0
a011 a011 d cd19a0
a011 a011 s 				CALL	HLToDec
a014 a014 d 3e66
a014 a014 s 				LD		A,'f'
a016 a016 d cf
a016 a016 s 				RST     08H
a017 a017 d e1
a017 a017 s 				POP		HL
a018 a018 d c9
a018 a018 s 				RET
a019 a019 s 
a019 a019 s ;Prints	hl as decimal			
a019 a019 s HLToDec:
a019 a019 d f5
a019 a019 s 				PUSH	AF
a01a a01a d c5
a01a a01a s 				PUSH	BC
a01b a01b d cd21a0
a01b a01b s 				CALL	DispHL
a01e a01e d c1
a01e a01e s 				POP		BC
a01f a01f d f1
a01f a01f s 				POP		AF
a020 a020 d c9
a020 a020 s 				RET
a021 a021 s DispHL:
a021 a021 d 01f0d8
a021 a021 s 				ld		bc,-10000
a024 a024 d cd3aa0
a024 a024 s 				call	Num1
a027 a027 d 0118fc
a027 a027 s 				ld		bc,-1000
a02a a02a d cd3aa0
a02a a02a s 				call	Num1
a02d a02d d 019cff
a02d a02d s 				ld		bc,-100
a030 a030 d cd3aa0
a030 a030 s 				call	Num1
a033 a033 d 0ef6
a033 a033 s 				ld		c,-10
a035 a035 d cd3aa0
a035 a035 s 				call	Num1
a038 a038 d 0eff
a038 a038 s 				ld		c,-1
a03a a03a d 3e2f
a03a a03a s Num1:			ld		a,'0'-1
a03c a03c d 3c
a03c a03c s Num2:			inc		a
a03d a03d d 09
a03d a03d s 				add		hl,bc
a03e a03e d 38fc
a03e a03e s 				jr		c,Num2
a040 a040 d ed42
a040 a040 s 				sbc		hl,bc
a042 a042 d cf
a042 a042 s 				RST     08H
a043 a043 d c9
a043 a043 s 				ret
a044 a044 s ;Print A as HEX				
a044 a044 s NumToHex:    	
a044 a044 d c5
a044 a044 s 				push	bc
a045 a045 d f5
a045 a045 s                 push    af
a046 a046 d 4f
a046 a046 s 				ld 		c, a   		; a = number to convert
a047 a047 d cd53a0
a047 a047 s             	call 	Num1H
a04a a04a d cf
a04a a04a s             	RST     08H
a04b a04b d 79
a04b a04b s             	ld 		a, c
a04c a04c d cd57a0
a04c a04c s             	call 	Num2H
a04f a04f d cf
a04f a04f s             	RST     08H
a050 a050 d f1
a050 a050 s                 pop     af
a051 a051 d c1
a051 a051 s 				pop		bc
a052 a052 d c9
a052 a052 s             	ret
a053 a053 s 
a053 a053 d 1f
a053 a053 s Num1H:        	rra
a054 a054 d 1f
a054 a054 s             	rra
a055 a055 d 1f
a055 a055 s             	rra
a056 a056 d 1f
a056 a056 s            		rra
a057 a057 d f6f0
a057 a057 s Num2H:        	or 		$F0
a059 a059 d 27
a059 a059 s             	daa
a05a a05a d c6a0
a05a a05a s             	add 	a, $A0
a05c a05c d ce40
a05c a05c s             	adc 	a, $40 		; Ascii hex at this point (0 to F)   
a05e a05e d c9
a05e a05e s             	ret
a05f a05f s 
a05f a05f s ;Get ABS of A
a05f a05f s absA:
a05f a05f d b7
a05f a05f s      or a
a060 a060 d f0
a060 a060 s      ret p
a061 a061 d ed44
a061 a061 s      neg
a063 a063 d c9
a063 a063 s      ret
a064 a064 s 
a064 a064 s ;getArAndomA	 
a064 a064 s randomA:				
a064 a064 d 3a8888
a064 a064 s 				ld a, 	(seed)
a067 a067 d 47
a067 a067 s 				ld b, 	a 
a068 a068 s 
a068 a068 d 0f
a068 a068 s 				rrca ; multiply by 32
a069 a069 d 0f
a069 a069 s 				rrca
a06a a06a d 0f
a06a a06a s 				rrca
a06b a06b d ee1f
a06b a06b s 				xor $1f
a06d a06d s 
a06d a06d d 80
a06d a06d s 				add 	a, b
a06e a06e d deff
a06e a06e s 				sbc a, 255 ; carry
a070 a070 s 
a070 a070 d 328888
a070 a070 s 				ld (seed), a
a073 a073 d c9
a073 a073 s 				ret
a074 a074 s 
a074 a074 s ;------- Print string
a074 a074 d f5
a074 a074 s print:			PUSH 	AF				; Preserve AF				
a075 a075 d 7e
a075 a075 s printLoop:      LD      A,(HL)          ; Get character
a076 a076 d b7
a076 a076 s                 OR      A               ; Is it $00 ?
a077 a077 d 2804
a077 a077 s                 JR     	Z,printRet      ; Then RETurn on terminator
a079 a079 d cf
a079 a079 s                 RST     08H             ; Print it
a07a a07a d 23
a07a a07a s                 INC     HL              ; Next Character
a07b a07b d 18f8
a07b a07b s                 JR      printLoop       ; Continue until $00
a07d a07d s 
a07d a07d d f1
a07d a07d s printRet:		POP		AF
a07e a07e d c9
a07e a07e s 				RET
a07f a07f s 
a07f a07f s ;--------Print textBlockAtPos
a07f a07f s ;HL Start of sprite
a07f a07f s ;C  Sprite X
a07f a07f s ;B  Sprite Y
a07f a07f s 
a07f a07f d f5
a07f a07f s printAtPos:		PUSH 	AF					; Preserve AF				
a080 a080 d cdfe9f
a080 a080 s printAtPosLoop: CALL	moveCursor			; Move cursor to start of line
a083 a083 d cd74a0
a083 a083 s 				CALL	print				; Print Line
a086 a086 d 04
a086 a086 s 				INC		B
a087 a087 d 23
a087 a087 s 				INC		HL
a088 a088 d 7e
a088 a088 s 				LD      A,(HL)          	; Get character
a089 a089 d b7
a089 a089 s                 OR      A               	; Is it $00 ?
a08a a08a d 23
a08a a08a s 				INC		HL
a08b a08b d 20f3
a08b a08b s                 JR      NZ,printAtPosLoop   ; Continue until $00		
a08d a08d d f1
a08d a08d s 				POP		AF
a08e a08e d c9
a08e a08e s 				RET
a08f a08f s 
a08f a08f s ;------------Draw Box
a08f a08f s ;C Start X
a08f a08f s ;B Start Y
a08f a08f s 
a08f a08f s ;D Width
a08f a08f s ;E Height
a08f a08f s drawBox:
a08f a08f d 1d
a08f a08f s 				DEC		E
a090 a090 d 1d
a090 a090 s 				DEC		E
a091 a091 d cdfe9f
a091 a091 s 				CALL	moveCursor			; Move cursor to start of line
a094 a094 d c5
a094 a094 s 				PUSH	BC
a095 a095 d 42
a095 a095 s 				LD		B,D
a096 a096 d 3e23
a096 a096 s topLineLoop:	LD		A,'#'
a098 a098 d cf
a098 a098 s 				RST		08H
a099 a099 d 10fb
a099 a099 s 				DJNZ	topLineLoop			;Print Top line
a09b a09b d 15
a09b a09b s 				DEC		D					;Remove padding for left and right bars
a09c a09c d 15
a09c a09c s 				DEC		D
a09d a09d d 43
a09d a09d s 				LD		B,E
a09e a09e d 58
a09e a09e s boxBodyLoop:	LD		E,B
a09f a09f d c1
a09f a09f s 				POP		BC
a0a0 a0a0 d 04
a0a0 a0a0 s 				INC		B
a0a1 a0a1 d cdfe9f
a0a1 a0a1 s 				CALL	moveCursor
a0a4 a0a4 d c5
a0a4 a0a4 s 				PUSH	BC
a0a5 a0a5 d 3e23
a0a5 a0a5 s 				LD		A,'#'
a0a7 a0a7 d cf
a0a7 a0a7 s 				RST		08H
a0a8 a0a8 d 42
a0a8 a0a8 s 				LD		B,D
a0a9 a0a9 d 3e20
a0a9 a0a9 s boxContentLoop:	LD		A,' '
a0ab a0ab d cf
a0ab a0ab s 				RST		08H
a0ac a0ac d 10fb
a0ac a0ac s 				DJNZ	boxContentLoop
a0ae a0ae d 3e23
a0ae a0ae s 				LD		A,'#'
a0b0 a0b0 d cf
a0b0 a0b0 s 				RST		08H
a0b1 a0b1 d 43
a0b1 a0b1 s 				LD		B,E
a0b2 a0b2 d 10ea
a0b2 a0b2 s 				DJNZ	boxBodyLoop
a0b4 a0b4 d c1
a0b4 a0b4 s 				POP		BC
a0b5 a0b5 d 04
a0b5 a0b5 s 				INC		B
a0b6 a0b6 d cdfe9f
a0b6 a0b6 s 				CALL	moveCursor			; Move cursor to start of line
a0b9 a0b9 d 14
a0b9 a0b9 s 				INC		D
a0ba a0ba d 14
a0ba a0ba s 				INC		D
a0bb a0bb d 42
a0bb a0bb s 				LD		B,D
a0bc a0bc d 3e23
a0bc a0bc s bottomLineLoop:	LD		A,'#'
a0be a0be d cf
a0be a0be s 				RST		08H
a0bf a0bf d 10fb
a0bf a0bf s 				DJNZ	bottomLineLoop			;Print Top line
a0c1 a0c1 d c9
a0c1 a0c1 s 				RET		
a0c2 a0c2 s ;--------Delay
a0c2 a0c2 s delay:
a0c2 a0c2 d c5
a0c2 a0c2 s 				PUSH	BC
a0c3 a0c3 s delayLoop:
a0c3 a0c3 d 00
a0c3 a0c3 s 				NOP
a0c4 a0c4 d 0b
a0c4 a0c4 s 				DEC 	BC
a0c5 a0c5 d 78
a0c5 a0c5 s 				LD 		A,B
a0c6 a0c6 d b1
a0c6 a0c6 s 				OR 		C
a0c7 a0c7 d 20fa
a0c7 a0c7 s 				JR 		NZ,delayLoop
a0c9 a0c9 d c1
a0c9 a0c9 s 				POP		BC
a0ca a0ca f main.asm
a0ca a0ca d c9
a0ca a0ca s 				RET
a0cb a0cb s 
a0cb a0cb s ;Strings
a0cb a0cb d 1b5b33346d231b5b306d00
a0cb a0cb s wall:			.BYTE	1BH,"[34m#",1BH,"[0m",0
a0d6 a0d6 d 1b5b39376d6f1b5b306d00
a0d6 a0d6 s powerPellet:	.BYTE	1BH,"[97mo",1BH,"[0m",0
a0e1 a0e1 d 1b5b33376d2a1b5b306d00
a0e1 a0e1 s pellet:			.BYTE	1BH,"[37m*",1BH,"[0m",0
a0ec a0ec d 1b5b33316d401b5b306d00
a0ec a0ec s superFruit:		.BYTE	1BH,"[31m@",1BH,"[0m",0
a0f7 a0f7 d 2000
a0f7 a0f7 s void:			.BYTE	" ",0
a0f9 a0f9 s 
a0f9 a0f9 d 1b5b4800
a0f9 a0f9 s home:			.BYTE 1BH,"[H",0
a0fd a0fd d 1b5b481b5b324a00
a0fd a0fd s cls:      	  	.BYTE 1BH,"[H",1BH,"[2J",0
a105 a105 d 1b5b3f32356c00
a105 a105 s hideCursor:	  	.BYTE	1BH,"[?25l",0
a10c a10c d 1b5b3f32356800
a10c a10c s showCursor:	  	.BYTE	1BH,"[?25h",0
a113 a113 s 
a113 a113 s ;----- Map ------
a113 a113 s include map.asm
a113 a113 f map.asm
a113 a113 s ;----- Map data bit positions
a113 a113 s upBit			.EQU	0
a113 a113 s downBit			.EQU	1
a113 a113 s leftBit			.EQU	2
a113 a113 s rightBit		.EQU	3
a113 a113 s powerpBit		.EQU	4
a113 a113 s pelletBit		.EQU	5
a113 a113 s wallBit			.EQU	6
a113 a113 s sfBit			.EQU	7
a113 a113 s 
a113 a113 s ;----Pellet
a113 a113 s ww 		.EQU	40H
a113 a113 s 
a113 a113 s hp 		.EQU	2CH		;left 	right	pellet
a113 a113 s gp		.EQU	23H		;up		down	pellet
a113 a113 s 
a113 a113 s lp		.EQU	26H		;down 	left 	pellet
a113 a113 s rp		.EQU	2AH		;down 	right	pellet
a113 a113 s up		.EQU	25H		;up 	left	pellet
a113 a113 s dp		.EQU	29H		;up 	right	pellet
a113 a113 s 
a113 a113 s bp		.EQU	2BH		;up		down	right	pellet
a113 a113 s cp		.EQU	27H		;up		down	left	pellet
a113 a113 s vp		.EQU	2EH		;down	left	right	pellet
a113 a113 s kp		.EQU	2DH		;up		left	right	pellet
a113 a113 s 
a113 a113 s xp		.EQU	2FH		;all	pellet
a113 a113 s ;------- No pellet
a113 a113 s hn 		.EQU	0CH		;left 	right	pellet
a113 a113 s gn		.EQU	03H		;up		down	pellet
a113 a113 s 
a113 a113 s ln		.EQU	06H		;down 	left 	pellet
a113 a113 s rn		.EQU	0AH		;down 	right	pellet
a113 a113 s un		.EQU	05H		;up 	left	pellet
a113 a113 s dn		.EQU	09H		;up 	right	pellet
a113 a113 s 
a113 a113 s bn		.EQU	0BH		;up		down	right	pellet
a113 a113 s cn		.EQU	07H		;up		down	left	pellet
a113 a113 s vn		.EQU	0EH		;down	left	right	pellet
a113 a113 s kn		.EQU	0DH		;up		left	right	pellet
a113 a113 s 
a113 a113 s xn		.EQU	0FH		;all	pellet
a113 a113 s ;--------Power Pellet
a113 a113 s hs 		.EQU	1CH		;left 	right	pellet
a113 a113 s gs		.EQU	13H		;up		down	pellet
a113 a113 s 
a113 a113 s ls		.EQU	16H		;down 	left 	pellet
a113 a113 s rs		.EQU	1AH		;down 	right	pellet
a113 a113 s us		.EQU	15H		;up 	left	pellet
a113 a113 s ds		.EQU	19H		;up 	right	pellet
a113 a113 s 
a113 a113 s bs		.EQU	1BH		;up		down	right	pellet
a113 a113 s cs		.EQU	17H		;up		down	left	pellet
a113 a113 s vs		.EQU	1EH		;down	left	right	pellet
a113 a113 s ks		.EQU	1DH		;up		left	right	pellet
a113 a113 s 
a113 a113 s xs		.EQU	1FH		;all	pellet
a113 a113 s 
a113 a113 d 0000404040404040404040404040404040404040404040404040404040400000
a113 a113 s map1:	.BYTE	00,00,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,00,00
a133 a133 d 0000402a2c2c2c2c2e2c2c2c2c2c2640402a2c2c2c2c2c2e2c2c2c2c26400000
a133 a133 s 		.BYTE	00,00,ww,rp,hp,hp,hp,hp,vp,hp,hp,hp,hp,hp,lp,ww,ww,rp,hp,hp,hp,hp,hp,vp,hp,hp,hp,hp,lp,ww,00,00
a153 a153 d 0000401340404040234040404040234040234040404040234040404013400000
a153 a153 s 		.BYTE	00,00,ww,gs,ww,ww,ww,ww,gp,ww,ww,ww,ww,ww,gp,ww,ww,gp,ww,ww,ww,ww,ww,gp,ww,ww,ww,ww,gs,ww,00,00
a173 a173 d 0000402340404040234040404040234040234040404040234040404023400000
a173 a173 s 		.BYTE	00,00,ww,gp,ww,ww,ww,ww,gp,ww,ww,ww,ww,ww,gp,ww,ww,gp,ww,ww,ww,ww,ww,gp,ww,ww,ww,ww,gp,ww,00,00
a193 a193 d 0000402b2c2c2c2c2f2c2c2e2c2c2d2c2c2d2c2c2e2c2c2f2c2c2c2c27400000
a193 a193 s 		.BYTE	00,00,ww,bp,hp,hp,hp,hp,xp,hp,hp,vp,hp,hp,kp,hp,hp,kp,hp,hp,vp,hp,hp,xp,hp,hp,hp,hp,cp,ww,00,00
a1b3 a1b3 d 0000402340404040234040234040404040404040234040234040404023400000
a1b3 a1b3 s 		.BYTE	00,00,ww,gp,ww,ww,ww,ww,gp,ww,ww,gp,ww,ww,ww,ww,ww,ww,ww,ww,gp,ww,ww,gp,ww,ww,ww,ww,gp,ww,00,00
a1d3 a1d3 d 000040292c2c2c2c274040292c2c2640402a2c2c2540402b2c2c2c2c25400000
a1d3 a1d3 s 		.BYTE	00,00,ww,dp,hp,hp,hp,hp,cp,ww,ww,dp,hp,hp,lp,ww,ww,rp,hp,hp,up,ww,ww,bp,hp,hp,hp,hp,up,ww,00,00
a1f3 a1f3 d 0000404040404040234040404040034040034040404040234040404040400000
a1f3 a1f3 s 		.BYTE	00,00,ww,ww,ww,ww,ww,ww,gp,ww,ww,ww,ww,ww,gn,ww,ww,gn,ww,ww,ww,ww,ww,gp,ww,ww,ww,ww,ww,ww,00,00
a213 a213 d 00000000000000402340400a0c0c0d0c0c0d0c0c064040234000000000000000
a213 a213 s 		.BYTE	00,00,00,00,00,00,00,ww,gp,ww,ww,rn,hn,hn,kn,hn,hn,kn,hn,hn,ln,ww,ww,gp,ww,00,00,00,00,00,00,00
a233 a233 d 0000000000000040234040034040400000404040034040234000000000000000
a233 a233 s 		.BYTE	00,00,00,00,00,00,00,ww,gp,ww,ww,gn,ww,ww,ww,00,00,ww,ww,ww,gn,ww,ww,gp,ww,00,00,00,00,00,00,00
a253 a253 d 4040404040404040234040034000000000000040034040234040404040404040
a253 a253 s 		.BYTE	ww,ww,ww,ww,ww,ww,ww,ww,gp,ww,ww,gn,ww,00,00,00,00,00,00,ww,gn,ww,ww,gp,ww,ww,ww,ww,ww,ww,ww,ww
a273 a273 d 0c0c0c0c0c0c0c0c2f0c0c0740000000000000400b0c0c2f0c0c0c0c0c0c0c0c
a273 a273 s 		.BYTE	hn,hn,hn,hn,hn,hn,hn,hn,xp,hn,hn,cn,ww,00,00,00,00,00,00,ww,bn,hn,hn,xp,hn,hn,hn,hn,hn,hn,hn,hn
a293 a293 d 4040404040404040234040034000000000000040034040234040404040404040
a293 a293 s 		.BYTE	ww,ww,ww,ww,ww,ww,ww,ww,gp,ww,ww,gn,ww,00,00,00,00,00,00,ww,gn,ww,ww,gp,ww,ww,ww,ww,ww,ww,ww,ww
a2b3 a2b3 d 0000000000000040234040034040404040404040034040234000000000000000
a2b3 a2b3 s 		.BYTE	00,00,00,00,00,00,00,ww,gp,ww,ww,gn,ww,ww,ww,ww,ww,ww,ww,ww,gn,ww,ww,gp,ww,00,00,00,00,00,00,00
a2d3 a2d3 d 00000000000000402340400b0c0c0c0c0c0c0c0c074040234000000000000000
a2d3 a2d3 s 		.BYTE	00,00,00,00,00,00,00,ww,gp,ww,ww,bn,hn,hn,hn,hn,hn,hn,hn,hn,cn,ww,ww,gp,ww,00,00,00,00,00,00,00
a2f3 a2f3 d 0000404040404040234040034040404040404040034040234040404040400000
a2f3 a2f3 s 		.BYTE	00,00,ww,ww,ww,ww,ww,ww,gp,ww,ww,gn,ww,ww,ww,ww,ww,ww,ww,ww,gn,ww,ww,gp,ww,ww,ww,ww,ww,ww,00,00
a313 a313 d 0000402a2c2c2c2c2f2c2c2d2c2c2640402a2c2c2d2c2c2f2c2c2c2c26400000
a313 a313 s 		.BYTE	00,00,ww,rp,hp,hp,hp,hp,xp,hp,hp,kp,hp,hp,lp,ww,ww,rp,hp,hp,kp,hp,hp,xp,hp,hp,hp,hp,lp,ww,00,00
a333 a333 d 0000402340404040234040404040234040234040404040234040404023400000
a333 a333 s 		.BYTE	00,00,ww,gp,ww,ww,ww,ww,gp,ww,ww,ww,ww,ww,gp,ww,ww,gp,ww,ww,ww,ww,ww,gp,ww,ww,ww,ww,gp,ww,00,00
a353 a353 d 000040192c2640402b2c2c2e2c2c2d2c2c2d2c2c2e2c2c2740402a2c15400000
a353 a353 s 		.BYTE	00,00,ww,ds,hp,lp,ww,ww,bp,hp,hp,vp,hp,hp,kp,hp,hp,kp,hp,hp,vp,hp,hp,cp,ww,ww,rp,hp,us,ww,00,00
a373 a373 d 0000404040234040234040234040404040404040234040234040234040400000
a373 a373 s 		.BYTE	00,00,ww,ww,ww,gp,ww,ww,gp,ww,ww,gp,ww,ww,ww,ww,ww,ww,ww,ww,gp,ww,ww,gp,ww,ww,gp,ww,ww,ww,00,00
a393 a393 d 0000402a2c2d2c2c254040292c2c2640402a2c2c254040292c2c2d2c26400000
a393 a393 s 		.BYTE	00,00,ww,rp,hp,kp,hp,hp,up,ww,ww,dp,hp,hp,lp,ww,ww,rp,hp,hp,up,ww,ww,dp,hp,hp,kp,hp,lp,ww,00,00
a3b3 a3b3 d 0000402340404040404040404040234040234040404040404040404023400000
a3b3 a3b3 s 		.BYTE	00,00,ww,gp,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,gp,ww,ww,gp,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,gp,ww,00,00
a3d3 a3d3 d 000040292c2c2c2c2c2c2c2c2c2c2d2c2c2d2c2c2c2c2c2c2c2c2c2c25400000
a3d3 a3d3 s 		.BYTE	00,00,ww,dp,hp,hp,hp,hp,hp,hp,hp,hp,hp,hp,kp,hp,hp,kp,hp,hp,hp,hp,hp,hp,hp,hp,hp,hp,up,ww,00,00
a3f3 a3f3 d 0000404040404040404040404040404040404040404040404040404040400000
a3f3 a3f3 s 		.BYTE	00,00,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,00,00
a413 a413 d 0000000000000000000000000000000000000000000000000000000000000000
a413 a413 s 		.BYTE	00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
a433 a433 d 0000000000000000000000000000000000000000000000000000000000000000
a433 a433 s 		.BYTE	00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
a453 a453 d 0000000000000000000000000000000000000000000000000000000000000000
a453 a453 s 		.BYTE	00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
a473 a473 d 0000000000000000000000000000000000000000000000000000000000000000
a473 a473 s 		.BYTE	00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
a493 a493 d 0000000000000000000000000000000000000000000000000000000000000000
a493 a493 s 		.BYTE	00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
a4b3 a4b3 d 0000000000000000000000000000000000000000000000000000000000000000
a4b3 a4b3 s 		.BYTE	00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
a4d3 a4d3 d 0000000000000000000000000000000000000000000000000000000000000000
a4d3 a4d3 s 		.BYTE	00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
a4f3 a4f3 d 0000000000000000000000000000000000000000000000000000000000000000
a4f3 a4f3 s 		.BYTE	00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
a513 a513 s 
a513 a513 d 0000404040404040404040404040404040404040404040404040404040400000
a513 a513 s map:	.BYTE	00,00,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,00,00
a533 a533 d 0000400a0c0c0c0c0e0c0c0c0c0c0640400a0c0c0c0c0c0e0c0c0c0c06400000
a533 a533 s 		.BYTE	00,00,ww,rn,hn,hn,hn,hn,vn,hn,hn,hn,hn,hn,ln,ww,ww,rn,hn,hn,hn,hn,hn,vn,hn,hn,hn,hn,ln,ww,00,00
a553 a553 d 0000400340404040034040404040034040034040404040034040404003400000
a553 a553 s 		.BYTE	00,00,ww,gn,ww,ww,ww,ww,gn,ww,ww,ww,ww,ww,gn,ww,ww,gn,ww,ww,ww,ww,ww,gn,ww,ww,ww,ww,gn,ww,00,00
a573 a573 d 0000400340404040034040404040034040034040404040034040404003400000
a573 a573 s 		.BYTE	00,00,ww,gn,ww,ww,ww,ww,gn,ww,ww,ww,ww,ww,gn,ww,ww,gn,ww,ww,ww,ww,ww,gn,ww,ww,ww,ww,gn,ww,00,00
a593 a593 d 0000400b0c0c0c0c0f0c0c0e0c0c0d0c0c0d0c0c0e0c0c0f0c0c0c0c07400000
a593 a593 s 		.BYTE	00,00,ww,bn,hn,hn,hn,hn,xn,hn,hn,vn,hn,hn,kn,hn,hn,kn,hn,hn,vn,hn,hn,xn,hn,hn,hn,hn,cn,ww,00,00
a5b3 a5b3 d 0000400340404040034040034040404040404040034040034040404003400000
a5b3 a5b3 s 		.BYTE	00,00,ww,gn,ww,ww,ww,ww,gn,ww,ww,gn,ww,ww,ww,ww,ww,ww,ww,ww,gn,ww,ww,gn,ww,ww,ww,ww,gn,ww,00,00
a5d3 a5d3 d 000040090c0c0c0c074040090c0c0640400a0c0c0540400b0c0c0c0c05400000
a5d3 a5d3 s 		.BYTE	00,00,ww,dn,hn,hn,hn,hn,cn,ww,ww,dn,hn,hn,ln,ww,ww,rn,hn,hn,un,ww,ww,bn,hn,hn,hn,hn,un,ww,00,00
a5f3 a5f3 d 0000404040404040034040404040034040034040404040034040404040400000
a5f3 a5f3 s 		.BYTE	00,00,ww,ww,ww,ww,ww,ww,gn,ww,ww,ww,ww,ww,gn,ww,ww,gn,ww,ww,ww,ww,ww,gn,ww,ww,ww,ww,ww,ww,00,00
a613 a613 d 00000000000000400340400a0c0c0d0c0c0d0c0c064040034000000000000000
a613 a613 s 		.BYTE	00,00,00,00,00,00,00,ww,gn,ww,ww,rn,hn,hn,kn,hn,hn,kn,hn,hn,ln,ww,ww,gn,ww,00,00,00,00,00,00,00
a633 a633 d 0000000000000040034040034040400000404040034040034000000000000000
a633 a633 s 		.BYTE	00,00,00,00,00,00,00,ww,gn,ww,ww,gn,ww,ww,ww,00,00,ww,ww,ww,gn,ww,ww,gn,ww,00,00,00,00,00,00,00
a653 a653 d 4040404040404040034040034000000000000040034040034040404040404040
a653 a653 s 		.BYTE	ww,ww,ww,ww,ww,ww,ww,ww,gn,ww,ww,gn,ww,00,00,00,00,00,00,ww,gn,ww,ww,gn,ww,ww,ww,ww,ww,ww,ww,ww
a673 a673 d 0c0c0c0c0c0c0c0c0f0c0c2740000000000000400b0c0c0f0c0c0c0c0c0c0c0c
a673 a673 s 		.BYTE	hn,hn,hn,hn,hn,hn,hn,hn,xn,hn,hn,cp,ww,00,00,00,00,00,00,ww,bn,hn,hn,xn,hn,hn,hn,hn,hn,hn,hn,hn
a693 a693 d 4040404040404040034040034000000000000040034040034040404040404040
a693 a693 s 		.BYTE	ww,ww,ww,ww,ww,ww,ww,ww,gn,ww,ww,gn,ww,00,00,00,00,00,00,ww,gn,ww,ww,gn,ww,ww,ww,ww,ww,ww,ww,ww
a6b3 a6b3 d 0000000000000040034040034040404040404040034040034000000000000000
a6b3 a6b3 s 		.BYTE	00,00,00,00,00,00,00,ww,gn,ww,ww,gn,ww,ww,ww,ww,ww,ww,ww,ww,gn,ww,ww,gn,ww,00,00,00,00,00,00,00
a6d3 a6d3 d 00000000000000400340400b0c0c0c0c0c0c0c0c074040034000000000000000
a6d3 a6d3 s 		.BYTE	00,00,00,00,00,00,00,ww,gn,ww,ww,bn,hn,hn,hn,hn,hn,hn,hn,hn,cn,ww,ww,gn,ww,00,00,00,00,00,00,00
a6f3 a6f3 d 0000404040404040034040034040404040404040034040034040404040400000
a6f3 a6f3 s 		.BYTE	00,00,ww,ww,ww,ww,ww,ww,gn,ww,ww,gn,ww,ww,ww,ww,ww,ww,ww,ww,gn,ww,ww,gn,ww,ww,ww,ww,ww,ww,00,00
a713 a713 d 0000400a0c0c0c0c0f0c0c0d0c0c0640400a0c0c0d0c0c0f0c0c0c0c06400000
a713 a713 s 		.BYTE	00,00,ww,rn,hn,hn,hn,hn,xn,hn,hn,kn,hn,hn,ln,ww,ww,rn,hn,hn,kn,hn,hn,xn,hn,hn,hn,hn,ln,ww,00,00
a733 a733 d 0000400340404040034040404040034040034040404040034040404003400000
a733 a733 s 		.BYTE	00,00,ww,gn,ww,ww,ww,ww,gn,ww,ww,ww,ww,ww,gn,ww,ww,gn,ww,ww,ww,ww,ww,gn,ww,ww,ww,ww,gn,ww,00,00
a753 a753 d 000040090c0640400b0c0c0e0c0c0d0c0c0d0c0c0e0c0c0740400a0c05400000
a753 a753 s 		.BYTE	00,00,ww,dn,hn,ln,ww,ww,bn,hn,hn,vn,hn,hn,kn,hn,hn,kn,hn,hn,vn,hn,hn,cn,ww,ww,rn,hn,un,ww,00,00
a773 a773 d 0000404040034040034040034040404040404040034040034040034040400000
a773 a773 s 		.BYTE	00,00,ww,ww,ww,gn,ww,ww,gn,ww,ww,gn,ww,ww,ww,ww,ww,ww,ww,ww,gn,ww,ww,gn,ww,ww,gn,ww,ww,ww,00,00
a793 a793 d 0000400a0c0d0c0c054040090c0c0640400a0c0c054040090c0c0d0c06400000
a793 a793 s 		.BYTE	00,00,ww,rn,hn,kn,hn,hn,un,ww,ww,dn,hn,hn,ln,ww,ww,rn,hn,hn,un,ww,ww,dn,hn,hn,kn,hn,ln,ww,00,00
a7b3 a7b3 d 0000400340404040404040404040034040034040404040404040404003400000
a7b3 a7b3 s 		.BYTE	00,00,ww,gn,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,gn,ww,ww,gn,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,gn,ww,00,00
a7d3 a7d3 d 000040090c0c0c0c0c0c0c0c0c0c0d0c0c0d0c0c0c0c0c0c0c0c0c0c05400000
a7d3 a7d3 s 		.BYTE	00,00,ww,dn,hn,hn,hn,hn,hn,hn,hn,hn,hn,hn,kn,hn,hn,kn,hn,hn,hn,hn,hn,hn,hn,hn,hn,hn,un,ww,00,00
a7f3 a7f3 d 0000404040404040404040404040404040404040404040404040404040400000
a7f3 a7f3 s 		.BYTE	00,00,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,00,00
a813 a813 d 0000000000000000000000000000000000000000000000000000000000000000
a813 a813 s 		.BYTE	00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
a833 a833 d 0000000000000000000000000000000000000000000000000000000000000000
a833 a833 s 		.BYTE	00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
a853 a853 d 0000000000000000000000000000000000000000000000000000000000000000
a853 a853 s 		.BYTE	00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
a873 a873 d 0000000000000000000000000000000000000000000000000000000000000000
a873 a873 s 		.BYTE	00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
a893 a893 d 0000000000000000000000000000000000000000000000000000000000000000
a893 a893 s 		.BYTE	00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
a8b3 a8b3 d 0000000000000000000000000000000000000000000000000000000000000000
a8b3 a8b3 s 		.BYTE	00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
a8d3 a8d3 d 0000000000000000000000000000000000000000000000000000000000000000
a8d3 a8d3 s 		.BYTE	00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
a8f3 a8f3 f main.asm
a8f3 a8f3 d 0000000000000000000000000000000000000000000000000000000000000000
a8f3 a8f3 s 		.BYTE	00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
a913 a913 s 
a913 a913 s ;-----Path find map
a913 a913 s pathFindMap	.EQU	0D000H
a913 a913 s 
a913 a913 f main.asm
a913 a913 s liveMap		.EQU	0E000H
000b v bn
0007 v cn
000a v lf
002b v bp
0029 v dp
000d v cr
0027 v cp
0023 v gp
002c v hp
000c v hn
0003 v gn
002d v kp
0026 v lp
0006 v ln
0009 v dn
000d v kn
000a v rn
001c v hs
002a v rp
0005 v un
0025 v up
002e v vp
000e v vn
002f v xp
000f v xn
0013 v gs
0016 v ls
001a v rs
0015 v us
0040 v ww
0019 v ds
001b v bs
0017 v cs
001e v vs
001d v ks
001f v xs
a513 a map
a0fd a cls
a113 a map1
a03a a num1
a03c a num2
a05f a absa
8888 v seed
a0f9 a home
8100 v pacx
8101 v pacy
9f14 a info
a0cb a wall
9e84 a logo
a0f7 a void
9781 a move
907c a quit
a053 a num1h
a057 a num2h
a0c2 a delay
0007 v sfbit
9795 a moved
8900 v score
979b a movel
0000 v upbit
97a1 a mover
978f a moveu
a074 a print
9087 a input
9137 a checkh
918e a pacman
9145 a checkv
986e a pmchar
a021 a disphl
a0e1 a pellet
9155 a movepm
94de a oghost
961f a pghost
939d a rghost
985a a pmloop
9760 a tghost
9889 a printp
9a20 a number1
9b80 a number2
9ce0 a number3
976b a sghost0
9776 a sghost1
8102 v paccdir
8103 v pacndir
a064 a randoma
a019 a hltodec
90c4 a clearpm
9f28 a message
0002 v leftbit
9007 a gametop
e000 v livemap
0006 v wallbit
97c1 a initmap
9ff5 a newline
9160 a movepma
9111 a getmove
0001 v downbit
a08f a drawbox
9899 a printsf
90d0 a printpm
8120 v oghostx
8121 v oghosty
8130 v pghostx
8110 v rghostx
8111 v rghosty
8131 v pghosty
8140 v tghostx
8141 v tghosty
9881 a printpp
9804 a checkmap
903a a gameloop
8105 v paclives
8104 v ppactive
0003 v rightbit
99c2 a scorehud
925c a eatghost
000e v initpacx
000e v initpacy
8113 v ghostdis
9979 a pmpfskip
9853 a printmap
995d a pmpfloop
9982 a printhud
a044 a numtohex
a07d a printret
90f1 a eatpellet
0005 v pelletbit
98a9 a pmcharret
901c a startgame
a0c3 a delayloop
8122 v oghostdir
8132 v pghostdir
8112 v rghostdir
0004 v initlives
8142 v tghostdir
91cd a initghost
91da a moveghost
0004 v powerpbit
91fa a ghostmove
9891 a printwall
98a1 a printvoid
99ce a countdown
a075 a printloop
98bc a pfnextrow
89f2 v originalbc
916c a killpacman
90a1 a initpacman
97b8 a movedvalid
91a6 a clearghost
9109 a eatppellet
90fd a eatspellet
97bb a movelvalid
a105 a hidecursor
97be a movervalid
97b5 a moveuvalid
909d a validinput
9844 a printmapat
9214 a ghostmoved
994d a printpfmap
9868 a pmnextline
93dc a oghostinit
951d a pghostinit
9220 a ghostmovel
929b a rghostinit
93ec a oghostmove
965e a tghostinit
92ab a rghostmove
952d a pghostmove
966e a tghostmove
9208 a ghostmoveu
91b3 a printghost
922c a ghostmover
934e a rghostpfpp
9ffe a movecursor
948f a oghostpfpp
95d0 a pghostpfpp
9711 a tghostpfpp
a0ec a superfruit
9989 a printscore
99a3 a printlives
a07f a printatpos
a10c a showcursor
d000 v pathfindmap
982a a incrementde
90ac a resetpacman
91c0 a colideghost
93a8 a oghostclear
94e9 a pghostclear
9267 a rghostclear
9f4c a exitmessage
962a a tghostclear
97a7 a ismovevalid
0020 v ppellettics
94d0 a oghoststack
9611 a pghoststack
938f a rghoststack
9752 a tghoststack
a09e a boxbodyloop
a0d6 a powerpellet
98b2 a initppfloop
8125 v oghosttimer
8135 v pghosttimer
a096 a toplineloop
8115 v rghosttimer
8145 v tghosttimer
000f v oghostinitx
93b4 a oghostprint
94f5 a pghostprint
000f v rghostinitx
9273 a rghostprint
91e7 a printsghost
9636 a tghostprint
0008 v rghostinity
0008 v oghostinity
000f v pghostinitx
0008 v pghostinity
000f v tghostinitx
0008 v tghostinity
981f a checkmapchar
90e4 a getpmmapdata
91f3 a sghost1print
944e a oghostcheckd
958f a pghostcheckd
930d a rghostcheckd
980e a checkmaploop
96d0 a tghostcheckd
982c a getaddresspf
99ca a liveblanking
945c a oghostcheckl
959d a pghostcheckl
931b a rghostcheckl
98ab a initpathfind
96de a tghostcheckl
94a4 a oghostcolide
95e5 a pghostcolide
946a a oghostcheckr
9363 a rghostcolide
9329 a rghostcheckr
912d a calcnextmove
9726 a tghostcolide
92ff a rghostchecku
9440 a oghostchecku
9581 a pghostchecku
9257 a ghostdostack
95ab a pghostcheckr
96c2 a tghostchecku
96ec a tghostcheckr
9973 a pmpfnextline
9f84 a deathmessage1
9fdb a deathmessage2
000f v oghoststorex
000b v oghoststorey
0010 v pghoststorex
000e v rghoststorex
000b v rghoststorey
000b v pghoststorey
0011 v tghoststorex
000b v tghoststorey
991d a calculatemapd
9929 a calculatemapl
9935 a calculatemapr
9911 a calculatemapu
0030 v pathfinddepth
97cd a getmapaddress
93cf a oghostmapdata
9510 a pghostmapdata
928e a rghostmapdata
9651 a tghostmapdata
9966 a pmpfafterskip
9126 a nextmovevalid
9199 a ghostnextmove
0020 v caughtjaletime
97e5 a checknextlevel
9405 a oghostdectimer
9478 a oghostpathfind
9546 a pghostdectimer
92c4 a rghostdectimer
9337 a rghostpathfind
95b9 a pghostpathfind
9687 a tghostdectimer
96fa a tghostpathfind
99bb a removeoldlives
a0bc a bottomlineloop
a0a9 a boxcontentloop
9416 a oghostnextmove
9557 a pghostnextmove
99b3 a printlivesloop
92d5 a rghostnextmove
a080 a printatposloop
9698 a tghostnextmove
9238 a ghostcheckstack
9f60 a displaygameover
89f0 v oldstackpointer
0020 v oghostinittimer
949b a oghostsetnewdir
0030 v pghostinittimer
0010 v rghostinittimer
935a a rghostsetnewdir
95dc a pghostsetnewdir
0040 v tghostinittimer
971d a tghostsetnewdir
9941 a calculatemapcell
98c3 a calculatepathmap
9819 a checkmapnextline
9f3c a startgamemessage
9e40 a displaytitlescreen
98d5 a calculatepathmaploop
9f7b a gameoverwaitforinput
9e76 a titlescreenwaitforinput
