binary-debuggable-source
0000 0000 f main.asm
0000 0000 s CR              .EQU     0DH
0000 0000 s LF              .EQU     0AH
0000 0000 s 
0000 0000 s ;----- Map data bit positions
0000 0000 s upBit			.EQU	0
0000 0000 s downBit			.EQU	1
0000 0000 s leftBit			.EQU	2
0000 0000 s rightBit		.EQU	3
0000 0000 s powerpBit		.EQU	4
0000 0000 s pelletBit		.EQU	5
0000 0000 s wallBit			.EQU	6
0000 0000 s sfBit			.EQU	7
0000 0000 s ;--------Initial Stats
0000 0000 s initPacx		.EQU	14
0000 0000 s initPacy		.EQU	14
0000 0000 s 
0000 0000 s initRedGhostX	.EQU	20
0000 0000 s initRedGhostY	.EQU	1
0000 0000 s 
0000 0000 s ;-----Varr
0000 0000 s ;Packman
0000 0000 s pacx			.EQU	8100H
0000 0000 s pacy			.EQU	8101H
0000 0000 s pacCDir			.EQU	8102H		;Pacmans current direction
0000 0000 s pacNDir			.EQU	8103H		;Pacman next direction (from key press)
0000 0000 s 
0000 0000 s ;RedGhost
0000 0000 s redGhostX		.EQU	8110H		
0000 0000 s redGhostY		.EQU	8111H
0000 0000 s redGhostDir		.EQU	8112H
0000 0000 s redGhostDis		.EQU	8113H		;Red ghost move distance from pacman
0000 0000 s 
0000 0000 s seed			.EQU	8888H		;Random seed
0000 0000 s 
0000 0000 s 
0000 0000 s 
0000 0000 s score			.EQU	8900H		;Score
0000 0000 s 
0000 0000 s 
0000 0000 s 
0000 0000 s 
9000 9000 s 	.ORG 9000H
9000 9000 d 3e0e
9000 9000 s 			ld		a, initPacx		;set Pacman Pos
9002 9002 d 320081
9002 9002 s 			ld		(pacx),a
9005 9005 d 3e0e
9005 9005 s 			ld		a, initPacy
9007 9007 d 320181
9007 9007 s 			ld		(pacy),a
900a 900a d 3e44
900a 900a s 			ld		a, 'D'			;Set start direction
900c 900c d 320281
900c 900c s 			ld		(pacCDir),A
900f 900f d 320381
900f 900f s 			ld		(pacNDir),A
9012 9012 d 210000
9012 9012 s 			ld		HL, 0H
9015 9015 d 220089
9015 9015 s 			LD		(score), HL
9018 9018 d 3e14
9018 9018 s 			ld		a, initRedGhostX	;set RedGhost Pos
901a 901a d 321081
901a 901a s 			ld		(redGhostX),a
901d 901d d 3e01
901d 901d s 			ld		a, initRedGhostY
901f 901f d 321181
901f 901f s 			ld		(redGhostY),a
9022 9022 d 21be93
9022 9022 s 			LD		HL, cls			;Clear screen
9025 9025 d cd3f93
9025 9025 s 			CALL	print
9028 9028 d cd5292
9028 9028 s 			call 	printMap
902b 902b s gameLoop:		
902b 902b d cd5790
902b 902b s 			call	input
902e 902e d cdb890
902e 902e s 			call 	getMove
9031 9031 d cd7190
9031 9031 s 			call 	clearPM
9034 9034 d cdfc90
9034 9034 s 			call	movePM
9037 9037 d cd7d90
9037 9037 s 			call 	printPM
903a 903a d cda390
903a 903a s 			call	eatPellet
903d 903d s 			
903d 903d d cd4691
903d 903d s 			call	getRedGhostNextMove
9040 9040 d cd0891
9040 9040 s 			call	clearRedGhost
9043 9043 d cd3a91
9043 9043 s 			call	moveRedGhost
9046 9046 d cd1491
9046 9046 s 			call	printRedGhost
9049 9049 s 			
9049 9049 d cdaa92
9049 9049 s 			call 	printScore
904c 904c d 06ff
904c 904c s 			LD 		B,0FFH   ;delay
904e 904e d 0eff
904e 904e s 			LD		C,0FFH
9050 9050 d cd4a93
9050 9050 s 			CALL 	DELAY
9053 9053 d c32b90
9053 9053 s 			JP		gameLoop
9056 9056 d c9
9056 9056 s 			ret
9057 9057 s 		
9057 9057 s ;-------------- Input --------------------------					
9057 9057 s input:
9057 9057 d df
9057 9057 s 				RST		18H
9058 9058 d c8
9058 9058 s 				RET		Z
9059 9059 d d7
9059 9059 s 				RST		10H
905a 905a d e6df
905a 905a s 				AND     11011111b       ; lower to uppercase
905c 905c d fe57
905c 905c s 				CP		'W'
905e 905e d 280d
905e 905e s 				JR		Z,validInput
9060 9060 d fe41
9060 9060 s 				CP		'A'
9062 9062 d 2809
9062 9062 s 				JR		Z,validInput
9064 9064 d fe53
9064 9064 s 				CP		'S'
9066 9066 d 2805
9066 9066 s 				JR		Z,validInput
9068 9068 d fe44
9068 9068 s 				CP		'D'
906a 906a d 2801
906a 906a s 				JR		Z,validInput
906c 906c d c9
906c 906c s 				RET
906d 906d s validInput:		
906d 906d d 320381
906d 906d s 				LD		(pacNDir), A
9070 9070 d c9
9070 9070 s 				RET
9071 9071 s 		
9071 9071 s ;----------Pacman------;
9071 9071 s clearPM:
9071 9071 d 3a0081
9071 9071 s 				LD		A, (pacx)		;Push X to stack
9074 9074 d 4f
9074 9074 s 				LD		C,A
9075 9075 d 3a0181
9075 9075 s 				LD		A, (pacy)		;Push Y to stack
9078 9078 d 47
9078 9078 s 				LD		B,A
9079 9079 d cd3c92
9079 9079 s 				CALL 	printMapAt
907c 907c d c9
907c 907c s 				RET
907d 907d s 				
907d 907d s printPM:
907d 907d d 3a0081
907d 907d s 				LD		A, (pacx)		;Push X to stack
9080 9080 d 3c
9080 9080 s 				INC		A
9081 9081 d 6f
9081 9081 s 				LD		L,A
9082 9082 d 2600
9082 9082 s 				LD		H, $00			;We dont care about msb
9084 9084 d e5
9084 9084 s 				PUSH	HL
9085 9085 d 3a0181
9085 9085 s 				LD		A, (pacy)		;Push Y to stack
9088 9088 d 3c
9088 9088 s 				INC		A
9089 9089 d 6f
9089 9089 s 				LD		L,A
908a 908a d 2600
908a 908a s 				LD		H, $00			;Again we dont care
908c 908c d e5
908c 908c s 				PUSH	HL
908d 908d d cdd192
908d 908d s 				CALL	moveCursor
9090 9090 d 218593
9090 9090 s 				LD		HL, pacman
9093 9093 d cd3f93
9093 9093 s 				CALL 	print
9096 9096 d c9
9096 9096 s 				RET
9097 9097 s getPMMapData:	
9097 9097 d 3a0081
9097 9097 s 				LD		A, (pacx)
909a 909a d 4f
909a 909a s 				LD		C,A
909b 909b d 3a0181
909b 909b s 				LD		A, (pacy)
909e 909e d 47
909e 909e s 				LD		B,A
909f 909f d cd2592
909f 909f s 				CALL	getDataAtPos
90a2 90a2 d c9
90a2 90a2 s 				ret
90a3 90a3 s eatPellet:		;Eat pellet at packman location
90a3 90a3 d cd9790
90a3 90a3 s 				CALL 	getPMMapData
90a6 90a6 d cb6f
90a6 90a6 s 				BIT		pelletBit,A
90a8 90a8 d 2001
90a8 90a8 s 				JR		NZ,eatSPellet
90aa 90aa d c9
90aa 90aa s 				RET
90ab 90ab s 				
90ab 90ab s eatSPellet:		
90ab 90ab d e5
90ab 90ab s 				PUSH	HL		
90ac 90ac d 2a0089
90ac 90ac s 				LD		HL,(score)
90af 90af d 23
90af 90af s 				INC		HL
90b0 90b0 d 23
90b0 90b0 s 				INC		HL
90b1 90b1 d 220089
90b1 90b1 s 				LD		(score),HL
90b4 90b4 d e1
90b4 90b4 s 				POP		HL
90b5 90b5 d cbae
90b5 90b5 s 				RES		pelletBit,(HL)
90b7 90b7 d c9
90b7 90b7 s 				RET
90b8 90b8 s 				
90b8 90b8 s getMove:		;Sets the current move var
90b8 90b8 d cd9790
90b8 90b8 s 				CALL	getPMMapData
90bb 90bb d 57
90bb 90bb s 				LD		D,A
90bc 90bc d 3a0381
90bc 90bc s 				LD		A,(pacNDir)			;Is the next move valid
90bf 90bf d cd0b92
90bf 90bf s 				CALL	isMoveValid
90c2 90c2 d 2009
90c2 90c2 s 				JR		NZ,nextMoveValid
90c4 90c4 d 3a0281
90c4 90c4 s 				LD		A,(pacCDir)			;Is the current move valid
90c7 90c7 d cd0b92
90c7 90c7 s 				CALL	isMoveValid
90ca 90ca d c0
90ca 90ca s 				RET		NZ
90cb 90cb d 1807
90cb 90cb s 				JR		calcNextMove
90cd 90cd s 				
90cd 90cd s nextMoveValid:
90cd 90cd d 320281
90cd 90cd s 				LD		(pacCDir),A
90d0 90d0 d 320381
90d0 90d0 s 				LD		(pacNDir),A
90d3 90d3 d c9
90d3 90d3 s 				RET
90d4 90d4 s 				
90d4 90d4 s calcNextMove:	
90d4 90d4 d fe41
90d4 90d4 s 				CP		'A'
90d6 90d6 d 2814
90d6 90d6 s 				JR		Z,checkV
90d8 90d8 d fe44
90d8 90d8 s 				CP		'D'
90da 90da d 2810
90da 90da s 				JR		Z,checkV
90dc 90dc d 1800
90dc 90dc s 				JR		checkH
90de 90de s checkH:
90de 90de d 3e41
90de 90de s 				LD		A,'A'
90e0 90e0 d cd0b92
90e0 90e0 s 				CALL	isMoveValid
90e3 90e3 d 20e8
90e3 90e3 s 				JR		NZ,nextMoveValid
90e5 90e5 d 3e44
90e5 90e5 s 				LD		A,'D'
90e7 90e7 d cd0b92
90e7 90e7 s 				CALL	isMoveValid
90ea 90ea d 20e1
90ea 90ea s 				JR		NZ,nextMoveValid
90ec 90ec s checkV:
90ec 90ec d 3e57
90ec 90ec s 				LD		A,'W'
90ee 90ee d cd0b92
90ee 90ee s 				CALL	isMoveValid
90f1 90f1 d 20da
90f1 90f1 s 				JR		NZ,nextMoveValid
90f3 90f3 d 3e53
90f3 90f3 s 				LD		A,'S'
90f5 90f5 d cd0b92
90f5 90f5 s 				CALL	isMoveValid
90f8 90f8 d 20d3
90f8 90f8 s 				JR		NZ,nextMoveValid
90fa 90fa d 18e2
90fa 90fa s 				JR		checkH
90fc 90fc s ;Move
90fc 90fc s movePM:
90fc 90fc d 3a0281
90fc 90fc s 				LD		A,(pacCDir)
90ff 90ff d 110081
90ff 90ff s 				LD		DE,pacx
9102 9102 d 010181
9102 9102 s 				LD		BC,pacy
9105 9105 d c3e591
9105 9105 s 				JP		move
9108 9108 s ;------------Ghost
9108 9108 s ;Red
9108 9108 s clearRedGhost:
9108 9108 d 3a1081
9108 9108 s 				LD		A, (redGhostX)		;Push X to stack
910b 910b d 4f
910b 910b s 				LD		C,A
910c 910c d 3a1181
910c 910c s 				LD		A, (redGhostY)		;Push Y to stack
910f 910f d 47
910f 910f s 				LD		B,A
9110 9110 d cd3c92
9110 9110 s 				CALL 	printMapAt
9113 9113 d c9
9113 9113 s 				RET
9114 9114 s 				
9114 9114 s printRedGhost:
9114 9114 d 3a1081
9114 9114 s 				LD		A, (redGhostX)		;Push X to stack
9117 9117 d 3c
9117 9117 s 				INC		A
9118 9118 d 6f
9118 9118 s 				LD		L,A
9119 9119 d 2600
9119 9119 s 				LD		H, $00			;We dont care about msb
911b 911b d e5
911b 911b s 				PUSH	HL
911c 911c d 3a1181
911c 911c s 				LD		A, (redGhostY)		;Push Y to stack
911f 911f d 3c
911f 911f s 				INC		A
9120 9120 d 6f
9120 9120 s 				LD		L,A
9121 9121 d 2600
9121 9121 s 				LD		H, $00			;Again we dont care
9123 9123 d e5
9123 9123 s 				PUSH	HL
9124 9124 d cdd192
9124 9124 s 				CALL	moveCursor
9127 9127 d 219093
9127 9127 s 				LD		HL, redGhost
912a 912a d cd3f93
912a 912a s 				CALL 	print
912d 912d d c9
912d 912d s 				RET
912e 912e s getRedGhostMapData:	
912e 912e d 3a1081
912e 912e s 				LD		A, (redGhostX)
9131 9131 d 4f
9131 9131 s 				LD		C,A
9132 9132 d 3a1181
9132 9132 s 				LD		A, (redGhostY)
9135 9135 d 47
9135 9135 s 				LD		B,A
9136 9136 d cd2592
9136 9136 s 				CALL	getDataAtPos
9139 9139 d c9
9139 9139 s 				ret
913a 913a s ;Move
913a 913a s moveRedGhost:
913a 913a d 3a1281
913a 913a s 				LD		A,(redGhostDir)
913d 913d d 111081
913d 913d s 				LD		DE,redGhostX
9140 9140 d 011181
9140 9140 s 				LD		BC,redGhostY
9143 9143 d c3e591
9143 9143 s 				JP		move
9146 9146 s getRedGhostNextMove:
9146 9146 d 3e41
9146 9146 s 				LD		A, 41H
9148 9148 d 321381
9148 9148 s 				LD		(redGhostDis),A
914b 914b d cd2e91
914b 914b s 				CALL	getRedGhostMapData
914e 914e d 57
914e 914e s 				LD		D,A
914f 914f d 3e57
914f 914f s 				LD		A,	'W'			;check up
9151 9151 d cd0b92
9151 9151 s 				CALL	isMoveValid
9154 9154 d c47091
9154 9154 s 				CALL	NZ,redGhostSetMove
9157 9157 d 3e53
9157 9157 s 				LD		A,	'S'			;down
9159 9159 d cd0b92
9159 9159 s 				CALL	isMoveValid
915c 915c d c47091
915c 915c s 				CALL	NZ,redGhostSetMove
915f 915f d 3e41
915f 915f s 				LD		A,	'A'			;left
9161 9161 d cd0b92
9161 9161 s 				CALL	isMoveValid
9164 9164 d c47091
9164 9164 s 				CALL	NZ,redGhostSetMove
9167 9167 d 3e44
9167 9167 s 				LD		A,	'D'			;right
9169 9169 d cd0b92
9169 9169 s 				CALL	isMoveValid
916c 916c d c47091
916c 916c s 				CALL	NZ,redGhostSetMove
916f 916f d c9
916f 916f s 				RET
9170 9170 s 				
9170 9170 s redGhostSetMove:
9170 9170 d f5
9170 9170 s 				PUSH	AF
9171 9171 d fe57
9171 9171 s 				CP		'W'
9173 9173 d 280a
9173 9173 s 				JR		Z,redGhostCheckU
9175 9175 d fe41
9175 9175 s 				CP		'A'
9177 9177 d 2820
9177 9177 s 				JR		Z,redGhostCheckL
9179 9179 d fe53
9179 9179 s 				CP		'S'
917b 917b d 280f
917b 917b s 				JR		Z,redGhostCheckD
917d 917d d 1827
917d 917d s 				JR		redGhostCheckR
917f 917f s 				
917f 917f s redGhostCheckU:			
917f 917f d 3a1181
917f 917f s 				LD		A, (redGhostY)
9182 9182 d 3d
9182 9182 s 				DEC		A
9183 9183 d e61f
9183 9183 s 				AND		00011111B
9185 9185 d 4f
9185 9185 s 				LD		C,A
9186 9186 d 3a1081
9186 9186 s 				LD		A,(redGhostX)
9189 9189 d 47
9189 9189 s 				LD		B,A
918a 918a d 1827
918a 918a s 				JR		redGhostPathFind
918c 918c s redGhostCheckD:			
918c 918c d 3a1181
918c 918c s 				LD		A, (redGhostY)
918f 918f d 3c
918f 918f s 				INC		A
9190 9190 d e61f
9190 9190 s 				AND		00011111B
9192 9192 d 4f
9192 9192 s 				LD		C,A
9193 9193 d 3a1081
9193 9193 s 				LD		A,(redGhostX)
9196 9196 d 47
9196 9196 s 				LD		B,A
9197 9197 d 181a
9197 9197 s 				JR		redGhostPathFind
9199 9199 s redGhostCheckL:			
9199 9199 d 3a1081
9199 9199 s 				LD		A, (redGhostX)
919c 919c d 3d
919c 919c s 				DEC		A
919d 919d d e61f
919d 919d s 				AND		00011111B
919f 919f d 47
919f 919f s 				LD		B,A
91a0 91a0 d 3a1181
91a0 91a0 s 				LD		A,(redGhostY)
91a3 91a3 d 4f
91a3 91a3 s 				LD		C,A
91a4 91a4 d 180d
91a4 91a4 s 				JR		redGhostPathFind
91a6 91a6 s redGhostCheckR:			
91a6 91a6 d 3a1081
91a6 91a6 s 				LD		A, (redGhostX)
91a9 91a9 d 3c
91a9 91a9 s 				INC		A
91aa 91aa d e61f
91aa 91aa s 				AND		00011111B
91ac 91ac d 47
91ac 91ac s 				LD		B,A
91ad 91ad d 3a1181
91ad 91ad s 				LD		A,(redGhostY)
91b0 91b0 d 4f
91b0 91b0 s 				LD		C,A
91b1 91b1 d 1800
91b1 91b1 s 				JR		redGhostPathFind
91b3 91b3 s 
91b3 91b3 s redGhostPathFind:
91b3 91b3 d 3a1381
91b3 91b3 s 				LD		A,(redGhostDis)
91b6 91b6 d 5f
91b6 91b6 s 				LD		E,A
91b7 91b7 d 3a0081
91b7 91b7 s 				LD		A,(pacx)
91ba 91ba d 90
91ba 91ba s 				SUB		B
91bb 91bb d cd2a93
91bb 91bb s 				CALL	absA
91be 91be d 67
91be 91be s 				LD		H,A
91bf 91bf d 3a0181
91bf 91bf s 				LD		A,(pacy)
91c2 91c2 d 91
91c2 91c2 s 				SUB		C
91c3 91c3 d cd2a93
91c3 91c3 s 				CALL	absA
91c6 91c6 d 84
91c6 91c6 s 				ADD		H
91c7 91c7 d bb
91c7 91c7 s 				CP		E
91c8 91c8 d cad891
91c8 91c8 s 				JP		Z,redGhostSetEqual		;If 2 options are equidistant, chose a random one to prevent a loop
91cb 91cb d fad091
91cb 91cb s 				JP		M,redGhostSetNewDir
91ce 91ce s 				;CALL	NumToHex
91ce 91ce d f1
91ce 91ce s 				POP		AF
91cf 91cf s 				;RST		08H
91cf 91cf d c9
91cf 91cf s 				RET
91d0 91d0 s redGhostSetNewDir:
91d0 91d0 d 321381
91d0 91d0 s 				LD		(redGhostDis),A
91d3 91d3 s 				;CALL	NumToHex
91d3 91d3 d f1
91d3 91d3 s 				POP		AF
91d4 91d4 s 				;RST		08H
91d4 91d4 d 321281
91d4 91d4 s 				LD		(redGhostDir),A
91d7 91d7 d c9
91d7 91d7 s 				RET
91d8 91d8 s redGhostSetEqual:
91d8 91d8 d 47
91d8 91d8 s 				LD		B,A
91d9 91d9 d cd2f93
91d9 91d9 s 				CALL	randomA
91dc 91dc d cb4f
91dc 91dc s 				BIT		1,A
91de 91de d 2802
91de 91de s 				JR		Z,redGhostRandomSet
91e0 91e0 d f1
91e0 91e0 s 				POP		AF
91e1 91e1 d c9
91e1 91e1 s 				RET
91e2 91e2 s redGhostRandomSet:
91e2 91e2 d 78
91e2 91e2 s 				LD		A,B
91e3 91e3 d 18eb
91e3 91e3 s 				JR		redGhostSetNewDir
91e5 91e5 s ;-----------Generic Move Libs -----;
91e5 91e5 s move:
91e5 91e5 d fe57
91e5 91e5 s 				CP		'W'
91e7 91e7 d 280a
91e7 91e7 s 				JR		Z,moveU
91e9 91e9 d fe41
91e9 91e9 s 				CP		'A'
91eb 91eb d 2812
91eb 91eb s 				JR		Z,moveL
91ed 91ed d fe53
91ed 91ed s 				CP		'S'
91ef 91ef d 2808
91ef 91ef s 				JR		Z,moveD
91f1 91f1 d 1812
91f1 91f1 s 				JR		moveR
91f3 91f3 s 
91f3 91f3 s moveU:			
91f3 91f3 d 0a
91f3 91f3 s 				LD		A, (BC)
91f4 91f4 d 3d
91f4 91f4 s 				DEC		A
91f5 91f5 d e61f
91f5 91f5 s 				AND		00011111B
91f7 91f7 d 02
91f7 91f7 s 				LD		(BC),A
91f8 91f8 d c9
91f8 91f8 s 				RET
91f9 91f9 s moveD:			
91f9 91f9 d 0a
91f9 91f9 s 				LD		A, (BC)
91fa 91fa d 3c
91fa 91fa s 				INC		A
91fb 91fb d e61f
91fb 91fb s 				AND		00011111B
91fd 91fd d 02
91fd 91fd s 				LD		(BC),A
91fe 91fe d c9
91fe 91fe s 				RET
91ff 91ff s moveL:			
91ff 91ff d 1a
91ff 91ff s 				LD		A, (DE)
9200 9200 d 3d
9200 9200 s 				DEC		A
9201 9201 d e61f
9201 9201 s 				AND		00011111B
9203 9203 d 12
9203 9203 s 				LD		(DE),A
9204 9204 d c9
9204 9204 s 				RET
9205 9205 s moveR:			
9205 9205 d 1a
9205 9205 s 				LD		A, (DE)
9206 9206 d 3c
9206 9206 s 				INC		A
9207 9207 d e61f
9207 9207 s 				AND		00011111B
9209 9209 d 12
9209 9209 s 				LD		(DE),A
920a 920a d c9
920a 920a s 				RET
920b 920b s isMoveValid:
920b 920b d fe57
920b 920b s 				CP		'W'
920d 920d d 280a
920d 920d s 				JR		Z,moveUValid
920f 920f d fe41
920f 920f s 				CP		'A'
9211 9211 d 280c
9211 9211 s 				JR		Z,moveLValid
9213 9213 d fe53
9213 9213 s 				CP		'S'
9215 9215 d 2805
9215 9215 s 				JR		Z,moveDValid
9217 9217 d 1809
9217 9217 s 				JR		moveRValid
9219 9219 s moveUValid:			
9219 9219 d cb42
9219 9219 s 				BIT		upBit,D
921b 921b d c9
921b 921b s 				RET
921c 921c s moveDValid:			
921c 921c d cb4a
921c 921c s 				BIT		downBit,D
921e 921e d c9
921e 921e s 				RET
921f 921f s moveLValid:			
921f 921f d cb52
921f 921f s 				BIT		leftBit,D
9221 9221 d c9
9221 9221 s 				RET
9222 9222 s moveRValid:			
9222 9222 d cb5a
9222 9222 s 				BIT		rightBit,D
9224 9224 d c9
9224 9224 s 				RET
9225 9225 s 				
9225 9225 s ;------- Get Map Data ----;
9225 9225 s ; C - X
9225 9225 s ; B	- Y
9225 9225 s getDataAtPos:
9225 9225 d cb00
9225 9225 s 				rlc		b			;Shift b left 5
9227 9227 d cb00
9227 9227 s 				rlc		b			;Shift b left 5
9229 9229 d cb00
9229 9229 s 				rlc		b			;Shift b left 5
922b 922b d cb00
922b 922b s 				rlc		b			;Shift b left 5
922d 922d d cb00
922d 922d s 				rlc		b			;Shift b left 5
922f 922f d 78
922f 922f s 				ld		a,b
9230 9230 d e6e0
9230 9230 s 				and		11100000b	;Mask lower adress
9232 9232 d b1
9232 9232 s 				or		c			;Combine with C
9233 9233 d 6f
9233 9233 s 				ld		l,a			;A is now low byte of adress
9234 9234 d 78
9234 9234 s 				ld		a,b
9235 9235 d e61f
9235 9235 s 				and		00011111b	;Mask upper adress
9237 9237 d f6e0
9237 9237 s 				or		0E0H		;Start of map
9239 9239 d 67
9239 9239 s 				ld		h,a
923a 923a d 7e
923a 923a s 				ld		a,(HL)
923b 923b d c9
923b 923b s 				ret
923c 923c s 
923c 923c s ;--------- Map print -------- ;
923c 923c s ; C - X
923c 923c s ; B	- Y
923c 923c s printMapAt:	
923c 923c d c5
923c 923c s 			PUSH	BC
923d 923d d 0c
923d 923d s 			INC		C
923e 923e d 69
923e 923e s 			LD		L,C
923f 923f d 2600
923f 923f s 			LD		H, $00			;We dont care about msb
9241 9241 d e5
9241 9241 s 			PUSH	HL
9242 9242 d 04
9242 9242 s 			INC		B
9243 9243 d 68
9243 9243 s 			LD		L,B
9244 9244 d 2600
9244 9244 s 			LD		H, $00			;Again we dont care
9246 9246 d e5
9246 9246 s 			PUSH	HL
9247 9247 d cdd192
9247 9247 s 			CALL	moveCursor
924a 924a d c1
924a 924a s 			POP 	BC
924b 924b d cd2592
924b 924b s 			CALL	getDataAtPos
924e 924e d cd6d92
924e 924e s 			CALL	pmChar
9251 9251 d c9
9251 9251 s 			RET
9252 9252 s 
9252 9252 s printMap:
9252 9252 d 3e20
9252 9252 s 				ld		a,32
9254 9254 d 47
9254 9254 s 				ld		b,a			; 32 chars per line
9255 9255 d 4f
9255 9255 s 				ld		c,a			; 32 lines per map
9256 9256 d 2100e0
9256 9256 s 				ld		hl,map
9259 9259 d 7e
9259 9259 s pmLoop:			ld		a,(hl)		; get char
925a 925a d cd6d92
925a 925a s 				call	pmChar		; decode what to print
925d 925d d 23
925d 925d s 				inc		hl			; next char
925e 925e d 10f9
925e 925e s 				djnz	pmLoop		; if were not at the end of a line, print next char
9260 9260 d cdc892
9260 9260 s 				call	newline		; if we are, print a new line
9263 9263 d 41
9263 9263 s 				ld		b,c			;are we at the end of a block
9264 9264 d 1001
9264 9264 s 				djnz	pmNextLine
9266 9266 d c9
9266 9266 s 				ret
9267 9267 s pmNextLine:	
9267 9267 d 48
9267 9267 s 				ld		c,b			;copy decremented b back to c
9268 9268 d 3e20
9268 9268 s 				ld 		a,32		;refill b withj 32
926a 926a d 47
926a 926a s 				ld		b,a
926b 926b d 18ec
926b 926b s 				jr		pmLoop		;draw next char
926d 926d s 
926d 926d s 
926d 926d s pmChar:		;-- Print map char a
926d 926d d e5
926d 926d s 				push	hl
926e 926e d cb67
926e 926e s 				bit		powerpBit,a
9270 9270 d 200e
9270 9270 s 				jr		nz,printPP
9272 9272 d cb6f
9272 9272 s 				bit		pelletBit,a
9274 9274 d 2012
9274 9274 s 				jr		nz,printP
9276 9276 d cb77
9276 9276 s 				bit		wallBit,a
9278 9278 d 2016
9278 9278 s 				jr		nz,printWall
927a 927a d cb7f
927a 927a s 				bit		sfBit,a
927c 927c d 201a
927c 927c s 				jr		nz,printSF
927e 927e d 1820
927e 927e s 				jr	 	printVoid
9280 9280 s 			
9280 9280 s printPP:
9280 9280 d 215c93
9280 9280 s 				ld		hl,powerPellet
9283 9283 d cd3f93
9283 9283 s 				call	print
9286 9286 d 1820
9286 9286 s 				jr		pmCharRet
9288 9288 s printP:
9288 9288 d 216793
9288 9288 s 				ld		hl,pellet
928b 928b d cd3f93
928b 928b s 				call	print
928e 928e d 1818
928e 928e s 				jr		pmCharRet
9290 9290 s printWall:
9290 9290 d 215193
9290 9290 s 				ld		hl,wall
9293 9293 d cd3f93
9293 9293 s 				call	print
9296 9296 d 1810
9296 9296 s 				jr		pmCharRet
9298 9298 s printSF:
9298 9298 d 217293
9298 9298 s 				ld		hl,superFruit
929b 929b d cd3f93
929b 929b s 				call	print
929e 929e d 1808
929e 929e s 				jr		pmCharRet
92a0 92a0 s printVoid:
92a0 92a0 d 21bc93
92a0 92a0 s 				ld		hl,void
92a3 92a3 d cd3f93
92a3 92a3 s 				call	print
92a6 92a6 d 1800
92a6 92a6 s 				jr		pmCharRet
92a8 92a8 s pmCharRet:	
92a8 92a8 d e1
92a8 92a8 s 				pop 	hl
92a9 92a9 d c9
92a9 92a9 s 				ret
92aa 92aa s 				
92aa 92aa s printScore:					
92aa 92aa d 210200
92aa 92aa s 				LD		HL, $02
92ad 92ad d e5
92ad 92ad s 				PUSH	HL
92ae 92ae d 212300
92ae 92ae s 				LD		HL, $23
92b1 92b1 d e5
92b1 92b1 s 				PUSH	HL
92b2 92b2 d cdd192
92b2 92b2 s 				CALL	moveCursor
92b5 92b5 d 217d93
92b5 92b5 s 				LD		HL, scoreHUD
92b8 92b8 d cd3f93
92b8 92b8 s 				CALL 	print
92bb 92bb d 2a0089
92bb 92bb s 				LD		HL, (score)
92be 92be d cde892
92be 92be s 				CALL	HLToDec
92c1 92c1 d 3e0a
92c1 92c1 s 				LD		A,LF
92c3 92c3 d cf
92c3 92c3 s 				RST     08H
92c4 92c4 d 3e0d
92c4 92c4 s 				LD		A,CR
92c6 92c6 d cf
92c6 92c6 s 				RST     08H
92c7 92c7 d c9
92c7 92c7 s 				RET
92c8 92c8 s 			
92c8 92c8 s ;------- Libs ------------;
92c8 92c8 s newline:			
92c8 92c8 d f5
92c8 92c8 s 				push 	af
92c9 92c9 d 3e0d
92c9 92c9 s 				ld		a, CR
92cb 92cb d cf
92cb 92cb s 				rst 	08H
92cc 92cc d 3e0a
92cc 92cc s 				ld		a, LF
92ce 92ce d cf
92ce 92ce s 				rst 	08H
92cf 92cf d f1
92cf 92cf s 				pop 	af
92d0 92d0 d c9
92d0 92d0 s 				ret
92d1 92d1 s 			
92d1 92d1 s ;move cursor to (sp,sp-2)				
92d1 92d1 s moveCursor:		
92d1 92d1 d d1
92d1 92d1 s 				POP		DE
92d2 92d2 d 3e1b
92d2 92d2 s 				LD		A,$1B
92d4 92d4 d cf
92d4 92d4 s 				RST     08H
92d5 92d5 d 3e5b
92d5 92d5 s 				LD		A,'['
92d7 92d7 d cf
92d7 92d7 s 				RST     08H
92d8 92d8 d e1
92d8 92d8 s 				POP		HL
92d9 92d9 d cde892
92d9 92d9 s 				CALL	HLToDec
92dc 92dc d 3e3b
92dc 92dc s 				LD		A,$3B
92de 92de d cf
92de 92de s 				RST     08H
92df 92df d e1
92df 92df s 				POP		HL
92e0 92e0 d cde892
92e0 92e0 s 				CALL	HLToDec
92e3 92e3 d 3e66
92e3 92e3 s 				LD		A,'f'
92e5 92e5 d cf
92e5 92e5 s 				RST     08H
92e6 92e6 d d5
92e6 92e6 s 				PUSH	DE
92e7 92e7 d c9
92e7 92e7 s 				RET
92e8 92e8 s 
92e8 92e8 s ;Prints	hl as decimal			
92e8 92e8 s HLToDec:
92e8 92e8 d f5
92e8 92e8 s 				PUSH	AF
92e9 92e9 d c5
92e9 92e9 s 				PUSH	BC
92ea 92ea d cdf092
92ea 92ea s 				CALL	DispHL
92ed 92ed d c1
92ed 92ed s 				POP		BC
92ee 92ee d f1
92ee 92ee s 				POP		AF
92ef 92ef d c9
92ef 92ef s 				RET
92f0 92f0 s DispHL:
92f0 92f0 d 01f0d8
92f0 92f0 s 				ld		bc,-10000
92f3 92f3 d cd0993
92f3 92f3 s 				call	Num1
92f6 92f6 d 0118fc
92f6 92f6 s 				ld		bc,-1000
92f9 92f9 d cd0993
92f9 92f9 s 				call	Num1
92fc 92fc d 019cff
92fc 92fc s 				ld		bc,-100
92ff 92ff d cd0993
92ff 92ff s 				call	Num1
9302 9302 d 0ef6
9302 9302 s 				ld		c,-10
9304 9304 d cd0993
9304 9304 s 				call	Num1
9307 9307 d 0eff
9307 9307 s 				ld		c,-1
9309 9309 d 3e2f
9309 9309 s Num1:			ld		a,'0'-1
930b 930b d 3c
930b 930b s Num2:			inc		a
930c 930c d 09
930c 930c s 				add		hl,bc
930d 930d d 38fc
930d 930d s 				jr		c,Num2
930f 930f d ed42
930f 930f s 				sbc		hl,bc
9311 9311 d cf
9311 9311 s 				RST     08H
9312 9312 d c9
9312 9312 s 				ret
9313 9313 s ;Print A as HEX				
9313 9313 d 4f
9313 9313 s NumToHex:    	ld 		c, a   		; a = number to convert
9314 9314 d cd1e93
9314 9314 s             	call 	Num1H
9317 9317 d cf
9317 9317 s             	RST     08H
9318 9318 d 79
9318 9318 s             	ld 		a, c
9319 9319 d cd2293
9319 9319 s             	call 	Num2H
931c 931c d cf
931c 931c s             	RST     08H
931d 931d d c9
931d 931d s             	ret
931e 931e s 
931e 931e d 1f
931e 931e s Num1H:        	rra
931f 931f d 1f
931f 931f s             	rra
9320 9320 d 1f
9320 9320 s             	rra
9321 9321 d 1f
9321 9321 s            		rra
9322 9322 d f6f0
9322 9322 s Num2H:        	or 		$F0
9324 9324 d 27
9324 9324 s             	daa
9325 9325 d c6a0
9325 9325 s             	add 	a, $A0
9327 9327 d ce40
9327 9327 s             	adc 	a, $40 		; Ascii hex at this point (0 to F)   
9329 9329 d c9
9329 9329 s             	ret
932a 932a s 
932a 932a s ;Get ABS of A
932a 932a s absA:
932a 932a d b7
932a 932a s      or a
932b 932b d f0
932b 932b s      ret p
932c 932c d ed44
932c 932c s      neg
932e 932e d c9
932e 932e s      ret
932f 932f s 
932f 932f s ;getArAndomA	 
932f 932f s randomA:				
932f 932f d 3a8888
932f 932f s 				ld a, 	(seed)
9332 9332 d 47
9332 9332 s 				ld b, 	a 
9333 9333 s 
9333 9333 d 0f
9333 9333 s 				rrca ; multiply by 32
9334 9334 d 0f
9334 9334 s 				rrca
9335 9335 d 0f
9335 9335 s 				rrca
9336 9336 d ee1f
9336 9336 s 				xor $1f
9338 9338 s 
9338 9338 d 80
9338 9338 s 				add 	a, b
9339 9339 d deff
9339 9339 s 				sbc a, 255 ; carry
933b 933b s 
933b 933b d 328888
933b 933b s 				ld (seed), a
933e 933e d c9
933e 933e s 				ret
933f 933f s 
933f 933f s ;------- Print string
933f 933f d f5
933f 933f s print:			PUSH 	AF				; Preserve AF				
9340 9340 d 7e
9340 9340 s printLoop:      LD      A,(HL)          ; Get character
9341 9341 d b7
9341 9341 s                 OR      A               ; Is it $00 ?
9342 9342 d 2804
9342 9342 s                 JR     	Z,printRet      ; Then RETurn on terminator
9344 9344 d cf
9344 9344 s                 RST     08H             ; Print it
9345 9345 d 23
9345 9345 s                 INC     HL              ; Next Character
9346 9346 d 18f8
9346 9346 s                 JR      printLoop       ; Continue until $00
9348 9348 s 				
9348 9348 s ;delay loop
9348 9348 s printRet:		
9348 9348 d f1
9348 9348 s 				POP		AF
9349 9349 d c9
9349 9349 s 				RET
934a 934a s delay:
934a 934a d 00
934a 934a s 				NOP
934b 934b d 0b
934b 934b s 				DEC 	BC
934c 934c d 78
934c 934c s 				LD 		A,B
934d 934d d b1
934d 934d s 				OR 		C
934e 934e d c8
934e 934e s 				RET 	Z
934f 934f d 18f9
934f 934f s 				JR 		delay
9351 9351 s 
9351 9351 s ;Strings
9351 9351 d 1b5b33346d231b5b306d00
9351 9351 s wall:			.BYTE	1BH,"[34m#",1BH,"[0m",0
935c 935c d 1b5b39376d6f1b5b306d00
935c 935c s powerPellet:	.BYTE	1BH,"[97mo",1BH,"[0m",0
9367 9367 d 1b5b33376d2a1b5b306d00
9367 9367 s pellet:			.BYTE	1BH,"[37m*",1BH,"[0m",0
9372 9372 d 1b5b33316d401b5b306d00
9372 9372 s superFruit:		.BYTE	1BH,"[31m@",1BH,"[0m",0
937d 937d s 
937d 937d d 53636f72653a2000
937d 937d s scoreHUD:     	.BYTE "Score: ",0
9385 9385 s 
9385 9385 d 1b5b39336d431b5b306d00
9385 9385 s pacman:			.BYTE	1BH,"[93mC",1BH,"[0m",0
9390 9390 s 
9390 9390 d 1b5b39316d4d1b5b306d00
9390 9390 s redGhost:		.BYTE	1BH,"[91mM",1BH,"[0m",0
939b 939b d 1b5b39326d4d1b5b306d00
939b 939b s greenGhost:		.BYTE	1BH,"[92mM",1BH,"[0m",0
93a6 93a6 d 1b5b33366d4d1b5b306d00
93a6 93a6 s blueGhost:		.BYTE	1BH,"[36mM",1BH,"[0m",0
93b1 93b1 d 1b5b39356d4d1b5b306d00
93b1 93b1 s pinkGhost:		.BYTE	1BH,"[95mM",1BH,"[0m",0
93bc 93bc s 
93bc 93bc s 
93bc 93bc d 2000
93bc 93bc s void:			.BYTE	" ",0
93be 93be s 
93be 93be d 1b5b481b5b324a00
93be 93be s cls:      	  	.BYTE 1BH,"[H",1BH,"[2J",0
93c6 93c6 s ;----- Map ------		
e000 e000 s 	.ORG 0E000H
e000 e000 s ;----Pellet
e000 e000 s ww 		.EQU	40H
e000 e000 s 
e000 e000 s hp 		.EQU	2CH		;left 	right	pellet
e000 e000 s gp		.EQU	23H		;up		down	pellet
e000 e000 s 
e000 e000 s lp		.EQU	26H		;down 	left 	pellet
e000 e000 s rp		.EQU	2AH		;down 	right	pellet
e000 e000 s up		.EQU	25H		;up 	left	pellet
e000 e000 s dp		.EQU	29H		;up 	right	pellet
e000 e000 s 
e000 e000 s bp		.EQU	2BH		;up		down	right	pellet
e000 e000 s cp		.EQU	27H		;up		down	left	pellet
e000 e000 s vp		.EQU	2EH		;down	left	right	pellet
e000 e000 s kp		.EQU	2DH		;up		left	right	pellet
e000 e000 s 
e000 e000 s xp		.EQU	2FH		;all	pellet
e000 e000 s ;------- No pellet
e000 e000 s hn 		.EQU	0CH		;left 	right	pellet
e000 e000 s gn		.EQU	03H		;up		down	pellet
e000 e000 s 
e000 e000 s ln		.EQU	06H		;down 	left 	pellet
e000 e000 s rn		.EQU	0AH		;down 	right	pellet
e000 e000 s un		.EQU	05H		;up 	left	pellet
e000 e000 s dn		.EQU	09H		;up 	right	pellet
e000 e000 s 
e000 e000 s bn		.EQU	0BH		;up		down	right	pellet
e000 e000 s cn		.EQU	07H		;up		down	left	pellet
e000 e000 s vn		.EQU	0EH		;down	left	right	pellet
e000 e000 s kn		.EQU	0DH		;up		left	right	pellet
e000 e000 s 
e000 e000 s xn		.EQU	0FH		;all	pellet
e000 e000 s ;--------Power Pellet
e000 e000 s hs 		.EQU	1CH		;left 	right	pellet
e000 e000 s gs		.EQU	13H		;up		down	pellet
e000 e000 s 
e000 e000 s ls		.EQU	16H		;down 	left 	pellet
e000 e000 s rs		.EQU	1AH		;down 	right	pellet
e000 e000 s us		.EQU	15H		;up 	left	pellet
e000 e000 s ds		.EQU	19H		;up 	right	pellet
e000 e000 s 
e000 e000 s bs		.EQU	1BH		;up		down	right	pellet
e000 e000 s cs		.EQU	17H		;up		down	left	pellet
e000 e000 s vs		.EQU	1EH		;down	left	right	pellet
e000 e000 s ks		.EQU	1DH		;up		left	right	pellet
e000 e000 s 
e000 e000 s xs		.EQU	1FH		;all	pellet
e000 e000 s 
e000 e000 s 
e000 e000 d 0000404040404040404040404040404040404040404040404040404040400000
e000 e000 s map:	.BYTE	00,00,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,00,00
e020 e020 d 0000402a2c2c2c2c2e2c2c2c2c2c2640402a2c2c2c2c2c2e2c2c2c2c26400000
e020 e020 s 		.BYTE	00,00,ww,rp,hp,hp,hp,hp,vp,hp,hp,hp,hp,hp,lp,ww,ww,rp,hp,hp,hp,hp,hp,vp,hp,hp,hp,hp,lp,ww,00,00
e040 e040 d 0000401340404040234040404040234040234040404040234040404013400000
e040 e040 s 		.BYTE	00,00,ww,gs,ww,ww,ww,ww,gp,ww,ww,ww,ww,ww,gp,ww,ww,gp,ww,ww,ww,ww,ww,gp,ww,ww,ww,ww,gs,ww,00,00
e060 e060 d 0000402340404040234040404040234040234040404040234040404023400000
e060 e060 s 		.BYTE	00,00,ww,gp,ww,ww,ww,ww,gp,ww,ww,ww,ww,ww,gp,ww,ww,gp,ww,ww,ww,ww,ww,gp,ww,ww,ww,ww,gp,ww,00,00
e080 e080 d 0000402b2c2c2c2c2f2c2c2e2c2c2d2c2c2d2c2c2e2c2c2f2c2c2c2c27400000
e080 e080 s 		.BYTE	00,00,ww,bp,hp,hp,hp,hp,xp,hp,hp,vp,hp,hp,kp,hp,hp,kp,hp,hp,vp,hp,hp,xp,hp,hp,hp,hp,cp,ww,00,00
e0a0 e0a0 d 0000402340404040234040234040404040404040234040234040404023400000
e0a0 e0a0 s 		.BYTE	00,00,ww,gp,ww,ww,ww,ww,gp,ww,ww,gp,ww,ww,ww,ww,ww,ww,ww,ww,gp,ww,ww,gp,ww,ww,ww,ww,gp,ww,00,00
e0c0 e0c0 d 000040292c2c2c2c274040292c2c2640402a2c2c2540402b2c2c2c2c25400000
e0c0 e0c0 s 		.BYTE	00,00,ww,dp,hp,hp,hp,hp,cp,ww,ww,dp,hp,hp,lp,ww,ww,rp,hp,hp,up,ww,ww,bp,hp,hp,hp,hp,up,ww,00,00
e0e0 e0e0 d 0000404040404040234040404040034040034040404040234040404040400000
e0e0 e0e0 s 		.BYTE	00,00,ww,ww,ww,ww,ww,ww,gp,ww,ww,ww,ww,ww,gn,ww,ww,gn,ww,ww,ww,ww,ww,gp,ww,ww,ww,ww,ww,ww,00,00
e100 e100 d 00000000000000402340400a0c0c0d0c0c0d0c0c064040234000000000000000
e100 e100 s 		.BYTE	00,00,00,00,00,00,00,ww,gp,ww,ww,rn,hn,hn,kn,hn,hn,kn,hn,hn,ln,ww,ww,gp,ww,00,00,00,00,00,00,00
e120 e120 d 0000000000000040234040034040400000404040034040234000000000000000
e120 e120 s 		.BYTE	00,00,00,00,00,00,00,ww,gp,ww,ww,gn,ww,ww,ww,00,00,ww,ww,ww,gn,ww,ww,gp,ww,00,00,00,00,00,00,00
e140 e140 d 4040404040404040234040034000000000000040034040234040404040404040
e140 e140 s 		.BYTE	ww,ww,ww,ww,ww,ww,ww,ww,gp,ww,ww,gn,ww,00,00,00,00,00,00,ww,gn,ww,ww,gp,ww,ww,ww,ww,ww,ww,ww,ww
e160 e160 d 0c0c0c0c0c0c0c0c2f0c0c0740000000000000400b0c0c2f0c0c0c0c0c0c0c0c
e160 e160 s 		.BYTE	hn,hn,hn,hn,hn,hn,hn,hn,xp,hn,hn,cn,ww,00,00,00,00,00,00,ww,bn,hn,hn,xp,hn,hn,hn,hn,hn,hn,hn,hn
e180 e180 d 4040404040404040234040034000000000000040034040234040404040404040
e180 e180 s 		.BYTE	ww,ww,ww,ww,ww,ww,ww,ww,gp,ww,ww,gn,ww,00,00,00,00,00,00,ww,gn,ww,ww,gp,ww,ww,ww,ww,ww,ww,ww,ww
e1a0 e1a0 d 0000000000000040234040034040404040404040034040234000000000000000
e1a0 e1a0 s 		.BYTE	00,00,00,00,00,00,00,ww,gp,ww,ww,gn,ww,ww,ww,ww,ww,ww,ww,ww,gn,ww,ww,gp,ww,00,00,00,00,00,00,00
e1c0 e1c0 d 00000000000000402340400b0c0c0c0c0c0c0c0c074040234000000000000000
e1c0 e1c0 s 		.BYTE	00,00,00,00,00,00,00,ww,gp,ww,ww,bn,hn,hn,hn,hn,hn,hn,hn,hn,cn,ww,ww,gp,ww,00,00,00,00,00,00,00
e1e0 e1e0 d 0000404040404040234040034040404040404040034040234040404040400000
e1e0 e1e0 s 		.BYTE	00,00,ww,ww,ww,ww,ww,ww,gp,ww,ww,gn,ww,ww,ww,ww,ww,ww,ww,ww,gn,ww,ww,gp,ww,ww,ww,ww,ww,ww,00,00
e200 e200 d 0000402a2c2c2c2c2f2c2c2d2c2c2640402a2c2c2d2c2c2f2c2c2c2c26400000
e200 e200 s 		.BYTE	00,00,ww,rp,hp,hp,hp,hp,xp,hp,hp,kp,hp,hp,lp,ww,ww,rp,hp,hp,kp,hp,hp,xp,hp,hp,hp,hp,lp,ww,00,00
e220 e220 d 0000402340404040234040404040234040234040404040234040404023400000
e220 e220 s 		.BYTE	00,00,ww,gp,ww,ww,ww,ww,gp,ww,ww,ww,ww,ww,gp,ww,ww,gp,ww,ww,ww,ww,ww,gp,ww,ww,ww,ww,gp,ww,00,00
e240 e240 d 000040192c2640402b2c2c2e2c2c2d2c2c2d2c2c2e2c2c2740402a2c15400000
e240 e240 s 		.BYTE	00,00,ww,ds,hp,lp,ww,ww,bp,hp,hp,vp,hp,hp,kp,hp,hp,kp,hp,hp,vp,hp,hp,cp,ww,ww,rp,hp,us,ww,00,00
e260 e260 d 0000404040234040234040234040404040404040234040234040234040400000
e260 e260 s 		.BYTE	00,00,ww,ww,ww,gp,ww,ww,gp,ww,ww,gp,ww,ww,ww,ww,ww,ww,ww,ww,gp,ww,ww,gp,ww,ww,gp,ww,ww,ww,00,00
e280 e280 d 0000402a2c2d2c2c254040292c2c2640402a2c2c254040292c2c2d2c26400000
e280 e280 s 		.BYTE	00,00,ww,rp,hp,kp,hp,hp,up,ww,ww,dp,hp,hp,lp,ww,ww,rp,hp,hp,up,ww,ww,dp,hp,hp,kp,hp,lp,ww,00,00
e2a0 e2a0 d 0000402340404040404040404040234040234040404040404040404023400000
e2a0 e2a0 s 		.BYTE	00,00,ww,gp,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,gp,ww,ww,gp,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,gp,ww,00,00
e2c0 e2c0 d 000040292c2c2c2c2c2c2c2c2c2c2d2c2c2d2c2c2c2c2c2c2c2c2c2c25400000
e2c0 e2c0 s 		.BYTE	00,00,ww,dp,hp,hp,hp,hp,hp,hp,hp,hp,hp,hp,kp,hp,hp,kp,hp,hp,hp,hp,hp,hp,hp,hp,hp,hp,up,ww,00,00
e2e0 e2e0 d 0000404040404040404040404040404040404040404040404040404040400000
e2e0 e2e0 s 		.BYTE	00,00,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,00,00
e300 e300 d 0000000000000000000000000000000000000000000000000000000000000000
e300 e300 s 		.BYTE	00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
e320 e320 d 0000000000000000000000000000000000000000000000000000000000000000
e320 e320 s 		.BYTE	00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
e340 e340 d 0000000000000000000000000000000000000000000000000000000000000000
e340 e340 s 		.BYTE	00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
e360 e360 d 0000000000000000000000000000000000000000000000000000000000000000
e360 e360 s 		.BYTE	00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
e380 e380 d 0000000000000000000000000000000000000000000000000000000000000000
e380 e380 s 		.BYTE	00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
e3a0 e3a0 d 0000000000000000000000000000000000000000000000000000000000000000
e3a0 e3a0 s 		.BYTE	00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
e3c0 e3c0 d 0000000000000000000000000000000000000000000000000000000000000000
e3c0 e3c0 s 		.BYTE	00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
e3e0 e3e0 f main.asm
e3e0 e3e0 d 0000000000000000000000000000000000000000000000000000000000000000
e3e0 e3e0 s 		.BYTE	00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
000b v bn
0007 v cn
000a v lf
002b v bp
0029 v dp
000d v cr
0027 v cp
0023 v gp
002c v hp
000c v hn
0003 v gn
002d v kp
0026 v lp
0006 v ln
0009 v dn
000d v kn
000a v rn
001c v hs
002a v rp
0005 v un
0025 v up
002e v vp
000e v vn
002f v xp
000f v xn
0013 v gs
0016 v ls
001a v rs
0015 v us
0040 v ww
0019 v ds
001b v bs
0017 v cs
001e v vs
001d v ks
001f v xs
e000 a map
93be a cls
9309 a num1
930b a num2
932a a absa
8888 v seed
8100 v pacx
8101 v pacy
9351 a wall
93bc a void
91e5 a move
931e a num1h
9322 a num2h
934a a delay
0007 v sfbit
91f9 a moved
8900 v score
91ff a movel
0000 v upbit
9205 a mover
91f3 a moveu
933f a print
9057 a input
90de a checkh
9385 a pacman
90ec a checkv
926d a pmchar
92f0 a disphl
9367 a pellet
90fc a movepm
9259 a pmloop
9288 a printp
8102 v paccdir
8103 v pacndir
932f a randoma
92e8 a hltodec
9071 a clearpm
0002 v leftbit
0006 v wallbit
92c8 a newline
0001 v downbit
90b8 a getmove
9298 a printsf
907d a printpm
9280 a printpp
902b a gameloop
0003 v rightbit
937d a scorehud
000e v initpacx
000e v initpacy
9390 a redghost
9252 a printmap
9313 a numtohex
9348 a printret
90a3 a eatpellet
0005 v pelletbit
92a8 a pmcharret
93a6 a blueghost
93b1 a pinkghost
8110 v redghostx
8111 v redghosty
0004 v powerpbit
9290 a printwall
92a0 a printvoid
9340 a printloop
921c a movedvalid
90ab a eatspellet
921f a movelvalid
939b a greenghost
9222 a movervalid
9219 a moveuvalid
906d a validinput
923c a printmapat
9267 a pmnextline
92aa a printscore
92d1 a movecursor
9372 a superfruit
8112 v redghostdir
8113 v redghostdis
920b a ismovevalid
935c a powerpellet
9097 a getpmmapdata
9225 a getdataatpos
90d4 a calcnextmove
913a a moveredghost
9108 a clearredghost
90cd a nextmovevalid
0014 v initredghostx
0001 v initredghosty
9114 a printredghost
918c a redghostcheckd
9199 a redghostcheckl
91a6 a redghostcheckr
917f a redghostchecku
9170 a redghostsetmove
91b3 a redghostpathfind
91d8 a redghostsetequal
91e2 a redghostrandomset
91d0 a redghostsetnewdir
912e a getredghostmapdata
9146 a getredghostnextmove
