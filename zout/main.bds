binary-debuggable-source
0000 0000 f main.asm
0000 0000 s CR              .EQU     0DH
0000 0000 s LF              .EQU     0AH
0000 0000 s 
0000 0000 s oldStackPointer	.EQU	89F0H		;Old Stack Location 	
0000 0000 s originalBC		.EQU	89F2H		;BC before manipulation, used for calculating board position
0000 0000 s 
9000 9000 s 	.ORG 9000H
9000 9000 d ed73f089
9000 9000 s 			ld		(oldStackPointer), SP
9004 9004 d 31ffff
9004 9004 s 			ld		sp,0FFFFH
9007 9007 s gameTop:
9007 9007 d cde997
9007 9007 s 			CALL	initMap
900a 900a d 21b2a1
900a 900a s 			LD		HL, cls			;Clear screen
900d 900d d cd29a1
900d 900d s 			CALL	print
9010 9010 d 21baa1
9010 9010 s 			LD		HL, hideCursor	;Hide Cursor
9013 9013 d cd29a1
9013 9013 s 			CALL	print
9016 9016 d cd9f98
9016 9016 s 			CALL 	printMap
9019 9019 d c3f59e
9019 9019 s 			JP		displayTitleScreen
901c 901c s startGame:
901c 901c d cda490
901c 901c s 			CALL	initPacman
901f 901f d cdf591
901f 901f s 			CALL	initGhost
9022 9022 d cde997
9022 9022 s 			CALL	initMap
9025 9025 d 21b2a1
9025 9025 s 			LD		HL, cls			;Clear screen
9028 9028 d cd29a1
9028 9028 s 			CALL	print
902b 902b d cd9f98
902b 902b s 			CALL 	printMap
902e 902e d cd689a
902e 902e s 			CALL	countdown
9031 9031 d 21aea1
9031 9031 s 			LD		HL, home		;Go home
9034 9034 d cd29a1
9034 9034 s 			CALL	print
9037 9037 d cd9f98
9037 9037 s 			CALL 	printMap
903a 903a s gameLoop:		
903a 903a d cd8a90
903a 903a s 			call	input
903d 903d d cd3991
903d 903d s 			call 	getMove
9040 9040 d cdd290
9040 9040 s 			call 	clearPM
9043 9043 d cd7d91
9043 9043 s 			call	movePM
9046 9046 d cdde90
9046 9046 s 			call 	printPM
9049 9049 d cdff90
9049 9049 s 			call	eatPellet
904c 904c s 			
904c 904c d cdf798
904c 904c s 			call	initPathFind
904f 904f d cd0f99
904f 904f s 			call	calculatePathMap
9052 9052 s 
9052 9052 d cdc191
9052 9052 s 			call	ghostNextMove
9055 9055 d cdce91
9055 9055 s 			call	clearGhost
9058 9058 d cde891
9058 9058 s 			call	colideGhost
905b 905b d cd0292
905b 905b s 			call	moveGhost
905e 905e d cddb91
905e 905e s 			call	printGhost
9061 9061 s 
9061 9061 d cde891
9061 9061 s 			call	colideGhost
9064 9064 s 
9064 9064 s 
9064 9064 s 			;call 	printPFMap
9064 9064 s 			
9064 9064 d cdce99
9064 9064 s 			call 	printHUD
9067 9067 d cdaaa0
9067 9067 s 			call	newline
906a 906a d cd2a98
906a 906a s 			call	checkNextLevel
906d 906d d cd1298
906d 906d s 			call	checkFruit
9070 9070 d 060f
9070 9070 s 			LD 		B,0FH   ;delay
9072 9072 d 0eff
9072 9072 s 			LD		C,0FFH
9074 9074 d cd77a1
9074 9074 s 			CALL 	DELAY
9077 9077 d c33a90
9077 9077 s 			JP		gameLoop
907a 907a d ed7bf089
907a 907a s 			LD		SP,(oldStackPointer)
907e 907e d c9
907e 907e s 			ret
907f 907f s 
907f 907f d 21c1a1
907f 907f s quit:       LD		HL, showCursor	;Hide Cursor
9082 9082 d cd29a1
9082 9082 s 			CALL	print
9085 9085 d ed7bf089
9085 9085 s             LD		SP,(oldStackPointer)
9089 9089 d c9
9089 9089 s 			RET	
908a 908a s 		
908a 908a s ;-------------- Input --------------------------					
908a 908a s include input.asm	
908a 908a f input.asm
908a 908a s input:
908a 908a d df
908a 908a s 				RST		18H
908b 908b d c8
908b 908b s 				RET		Z
908c 908c d d7
908c 908c s 				RST		10H
908d 908d d e6df
908d 908d s 				AND     11011111b       ; lower to uppercase
908f 908f d fe57
908f 908f s 				CP		'W'
9091 9091 d 280d
9091 9091 s 				JR		Z,validInput
9093 9093 d fe41
9093 9093 s 				CP		'A'
9095 9095 d 2809
9095 9095 s 				JR		Z,validInput
9097 9097 d fe53
9097 9097 s 				CP		'S'
9099 9099 d 2805
9099 9099 s 				JR		Z,validInput
909b 909b d fe44
909b 909b s 				CP		'D'
909d 909d d 2801
909d 909d s 				JR		Z,validInput
909f 909f d c9
909f 909f s 				RET
90a0 90a0 s validInput:		
90a0 90a0 d 320381
90a0 90a0 s 				LD		(pacNDir), A
90a3 90a3 f main.asm
90a3 90a3 d c9
90a3 90a3 s 				RET
90a4 90a4 s ;----------Pacman------;
90a4 90a4 s include	pacman.asm
90a4 90a4 f pacman.asm
90a4 90a4 s ;Packman
90a4 90a4 s pacx			.EQU	8100H
90a4 90a4 s pacy			.EQU	8101H
90a4 90a4 s pacCDir			.EQU	8102H		;Pacmans current direction
90a4 90a4 s pacNDir			.EQU	8103H		;Pacman next direction (from key press)
90a4 90a4 s pacLives		.EQU	8105H		;Pacman next direction (from key press)
90a4 90a4 s 
90a4 90a4 s initPacx		.EQU	14
90a4 90a4 s initPacy		.EQU	14
90a4 90a4 s initLives		.EQU	4
90a4 90a4 s 
90a4 90a4 s pPelletTics     .EQU    20H         ;Power Pellet last time
90a4 90a4 s 
90a4 90a4 s pPActive        .EQU    8104H       ;Power Pellet Timer
90a4 90a4 s 
90a4 90a4 s initPacman:
90a4 90a4 d 210000
90a4 90a4 s 				LD		HL, 0H
90a7 90a7 d 220089
90a7 90a7 s 				LD		(score), HL
90aa 90aa d 210100
90aa 90aa s 				LD		HL, 1H
90ad 90ad d 220289
90ad 90ad s 				LD		(level), HL
90b0 90b0 d 3e04
90b0 90b0 s 				LD		a,initLives
90b2 90b2 d 320581
90b2 90b2 s 				LD		(pacLives),a
90b5 90b5 d 3e00
90b5 90b5 s 				LD		a,0
90b7 90b7 d 320489
90b7 90b7 s 				LD		(fruits),a
90ba 90ba d 3e0e
90ba 90ba s resetPacMan:	LD		a, initPacx		;set Pacman Pos
90bc 90bc d 320081
90bc 90bc s 				LD		(pacx),a
90bf 90bf d 3e0e
90bf 90bf s 				LD		a, initPacy
90c1 90c1 d 320181
90c1 90c1 s 				LD		(pacy),a
90c4 90c4 d 3e44
90c4 90c4 s 				LD		a, 'D'			;Set start direction
90c6 90c6 d 320281
90c6 90c6 s 				LD		(pacCDir),A
90c9 90c9 d 320381
90c9 90c9 s 				LD		(pacNDir),A
90cc 90cc d 3e00
90cc 90cc s 				LD		a,0
90ce 90ce d 320481
90ce 90ce s 				LD		(pPActive),A
90d1 90d1 d c9
90d1 90d1 s 				RET
90d2 90d2 s 
90d2 90d2 s clearPM:
90d2 90d2 d 3a0081
90d2 90d2 s 				LD		A, (pacx)		;Push X to stack
90d5 90d5 d 4f
90d5 90d5 s 				LD		C,A
90d6 90d6 d 3a0181
90d6 90d6 s 				LD		A, (pacy)		;Push Y to stack
90d9 90d9 d 47
90d9 90d9 s 				LD		B,A
90da 90da d cd9098
90da 90da s 				CALL 	printMapAt
90dd 90dd d c9
90dd 90dd s 				RET
90de 90de s 				
90de 90de s printPM:
90de 90de d 3a0081
90de 90de s 				LD		A, (pacx)		;Push X to stack
90e1 90e1 d 3c
90e1 90e1 s 				INC		A
90e2 90e2 d 4f
90e2 90e2 s 				LD		C,A
90e3 90e3 d 3a0181
90e3 90e3 s 				LD		A, (pacy)		;Push Y to stack
90e6 90e6 d 3c
90e6 90e6 s 				INC		A
90e7 90e7 d 47
90e7 90e7 s 				LD		B,A
90e8 90e8 d cdb3a0
90e8 90e8 s 				CALL	moveCursor
90eb 90eb d 21b691
90eb 90eb s 				LD		HL, pacman
90ee 90ee d cd29a1
90ee 90ee s 				CALL 	print
90f1 90f1 d c9
90f1 90f1 s 				RET
90f2 90f2 s getPMMapData:	
90f2 90f2 d 3a0081
90f2 90f2 s 				LD		A, (pacx)
90f5 90f5 d 4f
90f5 90f5 s 				LD		C,A
90f6 90f6 d 3a0181
90f6 90f6 s 				LD		A, (pacy)
90f9 90f9 d 47
90f9 90f9 s 				LD		B,A
90fa 90fa d cdfa97
90fa 90fa s 				CALL	getMapAddress
90fd 90fd d 7e
90fd 90fd s                 LD      A,(HL)
90fe 90fe d c9
90fe 90fe s 				ret
90ff 90ff s eatPellet:		;Eat pellet at packman location
90ff 90ff d cdf290
90ff 90ff s 				CALL 	getPMMapData
9102 9102 d cb6f
9102 9102 s 				BIT		pelletBit,A
9104 9104 d 201f
9104 9104 s 				JR		NZ,eatSPellet
9106 9106 d cb67
9106 9106 s                 BIT		powerPBit,A
9108 9108 d 2027
9108 9108 s 				JR		NZ,eatPPellet
910a 910a d cb7f
910a 910a s 				BIT		sfBit,A
910c 910c d 2001
910c 910c s 				JR		NZ,eatFruit
910e 910e d c9
910e 910e s 				RET
910f 910f s eatFruit:		
910f 910f d e5
910f 910f s 				PUSH	HL
9110 9110 d 2a0089
9110 9110 s 				LD      HL,(score)
9113 9113 d 013200
9113 9113 s                 LD      BC,50
9116 9116 d 09
9116 9116 s                 ADD     HL,BC
9117 9117 d 220089
9117 9117 s                 LD      (score),HL
911a 911a s 
911a 911a d 3a0489
911a 911a s 				LD		A,(fruits)
911d 911d d 3c
911d 911d s 				INC		A
911e 911e d 320489
911e 911e s 				LD		(fruits),A
9121 9121 d e1
9121 9121 s 				POP		HL
9122 9122 d cbbe
9122 9122 s 				RES		sfBit,(HL)
9124 9124 d c9
9124 9124 s 				RET
9125 9125 s 
9125 9125 s eatSPellet:		
9125 9125 d e5
9125 9125 s 				PUSH	HL		
9126 9126 d 2a0089
9126 9126 s 				LD		HL,(score)
9129 9129 d 23
9129 9129 s 				INC		HL
912a 912a d 220089
912a 912a s 				LD		(score),HL
912d 912d d e1
912d 912d s 				POP		HL
912e 912e d cbae
912e 912e s 				RES		pelletBit,(HL)
9130 9130 d c9
9130 9130 s 				RET
9131 9131 s 
9131 9131 s eatPPellet:		
9131 9131 d 3e20
9131 9131 s 				LD      A,pPelletTics
9133 9133 d 320481
9133 9133 s                 LD      (pPActive),A
9136 9136 d cba6
9136 9136 s                 RES		powerPBit,(HL)
9138 9138 d c9
9138 9138 s 				RET
9139 9139 s 				
9139 9139 s getMove:		;Sets the current move var
9139 9139 d cdf290
9139 9139 s 				CALL	getPMMapData
913c 913c d 57
913c 913c s 				LD		D,A
913d 913d d 3a0381
913d 913d s 				LD		A,(pacNDir)			;Is the next move valid
9140 9140 d cdcf97
9140 9140 s 				CALL	isMoveValid
9143 9143 d 2009
9143 9143 s 				JR		NZ,nextMoveValid
9145 9145 d 3a0281
9145 9145 s 				LD		A,(pacCDir)			;Is the current move valid
9148 9148 d cdcf97
9148 9148 s 				CALL	isMoveValid
914b 914b d c0
914b 914b s 				RET		NZ
914c 914c d 1807
914c 914c s 				JR		calcNextMove
914e 914e s 				
914e 914e s nextMoveValid:
914e 914e d 320281
914e 914e s 				LD		(pacCDir),A
9151 9151 d 320381
9151 9151 s 				LD		(pacNDir),A
9154 9154 d c9
9154 9154 s 				RET
9155 9155 s 				
9155 9155 s calcNextMove:	
9155 9155 d fe41
9155 9155 s 				CP		'A'
9157 9157 d 2814
9157 9157 s 				JR		Z,checkV
9159 9159 d fe44
9159 9159 s 				CP		'D'
915b 915b d 2810
915b 915b s 				JR		Z,checkV
915d 915d d 1800
915d 915d s 				JR		checkH
915f 915f s checkH:
915f 915f d 3e41
915f 915f s 				LD		A,'A'
9161 9161 d cdcf97
9161 9161 s 				CALL	isMoveValid
9164 9164 d 20e8
9164 9164 s 				JR		NZ,nextMoveValid
9166 9166 d 3e44
9166 9166 s 				LD		A,'D'
9168 9168 d cdcf97
9168 9168 s 				CALL	isMoveValid
916b 916b d 20e1
916b 916b s 				JR		NZ,nextMoveValid
916d 916d s checkV:
916d 916d d 3e57
916d 916d s 				LD		A,'W'
916f 916f d cdcf97
916f 916f s 				CALL	isMoveValid
9172 9172 d 20da
9172 9172 s 				JR		NZ,nextMoveValid
9174 9174 d 3e53
9174 9174 s 				LD		A,'S'
9176 9176 d cdcf97
9176 9176 s 				CALL	isMoveValid
9179 9179 d 20d3
9179 9179 s 				JR		NZ,nextMoveValid
917b 917b d 18e2
917b 917b s 				JR		checkH
917d 917d s ;Move
917d 917d s movePM:
917d 917d d 3a0481
917d 917d s 				LD      A,(pPActive)
9180 9180 d b7
9180 9180 s                 OR      A
9181 9181 d ca8891
9181 9181 s                 JP      Z,movePMA
9184 9184 d 3d
9184 9184 s                 DEC     A
9185 9185 d 320481
9185 9185 s                 LD      (pPActive),A
9188 9188 d 3a0281
9188 9188 s movePMA:        LD		A,(pacCDir)
918b 918b d 110081
918b 918b s 				LD		DE,pacx
918e 918e d 010181
918e 918e s 				LD		BC,pacy
9191 9191 d c3a997
9191 9191 s 				JP		move
9194 9194 s 
9194 9194 s killPacman:
9194 9194 d e1
9194 9194 s 				POP		HL
9195 9195 d e1
9195 9195 s 				POP		HL
9196 9196 d 3a0581
9196 9196 s 				LD		A,(pacLives)
9199 9199 d 3d
9199 9199 s 				DEC		A
919a 919a d b7
919a 919a s 				OR		A
919b 919b d ca15a0
919b 919b s 				JP		Z,displayGameOver
919e 919e d 320581
919e 919e s 				LD		(pacLives),A
91a1 91a1 d cdba90
91a1 91a1 s 				CALL	resetPacMan
91a4 91a4 d cdf591
91a4 91a4 s 				CALL	initGhost
91a7 91a7 d cd689a
91a7 91a7 s 				CALL	countdown
91aa 91aa d 21aea1
91aa 91aa s 				LD		HL, home		;Go home
91ad 91ad d cd29a1
91ad 91ad s 				CALL	print
91b0 91b0 d cd9f98
91b0 91b0 s 				CALL 	printMap
91b3 91b3 d c33a90
91b3 91b3 s 				JP		gameLoop
91b6 91b6 s 
91b6 91b6 f main.asm
91b6 91b6 d 1b5b39336d431b5b306d00
91b6 91b6 s pacman:			.BYTE	1BH,"[93mC",1BH,"[0m",0
91c1 91c1 s ;------------Ghost
91c1 91c1 s include ghosts.asm
91c1 91c1 f ghosts.asm
91c1 91c1 s ghostDis		.EQU	8113H		;ghost move distance from pacman
91c1 91c1 s caughtJaleTime  .EQU    20H
91c1 91c1 s 
91c1 91c1 s ghostNextMove:
91c1 91c1 d cdfd92
91c1 91c1 s                 CALL    rGhostNextMove
91c4 91c4 d cd3e94
91c4 91c4 s                 CALL    oGhostNextMove
91c7 91c7 d cd7f95
91c7 91c7 s                 CALL    pGhostNextMove
91ca 91ca d cdc096
91ca 91ca s                 CALL    tGhostNextMove
91cd 91cd d c9
91cd 91cd s                 RET
91ce 91ce s clearGhost:
91ce 91ce d cd8f92
91ce 91ce s                 CALL    rGhostClear
91d1 91d1 d cdd093
91d1 91d1 s                 CALL    oGhostClear
91d4 91d4 d cd1195
91d4 91d4 s                 CALL    pGhostClear
91d7 91d7 d cd5296
91d7 91d7 s                 CALL    tGhostClear
91da 91da d c9
91da 91da s                 RET
91db 91db s printGhost:
91db 91db d cd9b92
91db 91db s                 CALL    rGhostPrint
91de 91de d cddc93
91de 91de s                 CALL    oGhostPrint
91e1 91e1 d cd1d95
91e1 91e1 s                 CALL    pGhostPrint
91e4 91e4 d cd5e96
91e4 91e4 s                 CALL    tGhostPrint
91e7 91e7 d c9
91e7 91e7 s                 RET
91e8 91e8 s colideGhost:
91e8 91e8 d cd8b93
91e8 91e8 s                 CALL    rGhostColide
91eb 91eb d cdcc94
91eb 91eb s                 CALL    oGhostColide
91ee 91ee d cd0d96
91ee 91ee s                 CALL    pGhostColide
91f1 91f1 d cd4e97
91f1 91f1 s                 CALL    tGhostColide
91f4 91f4 d c9
91f4 91f4 s                 RET
91f5 91f5 s initGhost:
91f5 91f5 d cdc392
91f5 91f5 s                 CALL    rGhostInit
91f8 91f8 d cd0494
91f8 91f8 s                 CALL    oGhostInit
91fb 91fb d cd4595
91fb 91fb s                 CALL    pGhostInit
91fe 91fe d cd8696
91fe 91fe s                 CALL    tGhostInit
9201 9201 d c9
9201 9201 s                 RET
9202 9202 s moveGhost:
9202 9202 d cdd392
9202 9202 s                 CALL    rGhostMove
9205 9205 d cd1494
9205 9205 s                 CALL    oGhostMove
9208 9208 d cd5595
9208 9208 s                 CALL    pGhostMove
920b 920b d cd9696
920b 920b s                 CALL    tGhostMove
920e 920e d c9
920e 920e s                 RET
920f 920f s 
920f 920f s printSGhost:
920f 920f d cb47
920f 920f s                 BIT     0,A
9211 9211 d ca1b92
9211 9211 s                 JP      Z,sGhost1Print
9214 9214 d 219397
9214 9214 s                 LD		HL, sGhost0
9217 9217 d cd29a1
9217 9217 s 				CALL 	print
921a 921a d c9
921a 921a s 				RET
921b 921b s sGhost1Print:
921b 921b d 219e97
921b 921b s                 LD		HL, sGhost1
921e 921e d cd29a1
921e 921e s 				CALL 	print
9221 9221 d c9
9221 9221 s 				RET
9222 9222 s 
9222 9222 s ghostMove:
9222 9222 d fe57
9222 9222 s 				CP		'W'
9224 9224 d 280a
9224 9224 s 				JR		Z,ghostMoveU
9226 9226 d fe41
9226 9226 s 				CP		'A'
9228 9228 d 281e
9228 9228 s 				JR		Z,ghostMoveL
922a 922a d fe53
922a 922a s 				CP		'S'
922c 922c d 280e
922c 922c s 				JR		Z,ghostMoveD
922e 922e d 1824
922e 922e s 				JR		ghostMoveR
9230 9230 s 
9230 9230 s ghostMoveU:			
9230 9230 d 1a
9230 9230 s 				LD      A, (DE)
9231 9231 d 6f
9231 9231 s                 LD      L,A         ;ld x
9232 9232 d 0a
9232 9232 s                 LD		A, (BC)
9233 9233 d 3d
9233 9233 s 				DEC		A
9234 9234 d e61f
9234 9234 s 				AND		00011111B
9236 9236 d 67
9236 9236 s                 LD      H,A         ;ld y
9237 9237 d cd6092
9237 9237 s                 CALL    ghostCheckStack
923a 923a d 02
923a 923a s 				LD		(BC),A
923b 923b d c9
923b 923b s 				RET
923c 923c s ghostMoveD:		
923c 923c d 1a
923c 923c s 	            LD      A, (DE)
923d 923d d 6f
923d 923d s                 LD      L,A         ;ld x
923e 923e d 0a
923e 923e s 				LD		A, (BC)
923f 923f d 3c
923f 923f s 				INC		A
9240 9240 d e61f
9240 9240 s 				AND		00011111B
9242 9242 d 67
9242 9242 s                 LD      H,A         ;ld y
9243 9243 d cd6092
9243 9243 s                 CALL    ghostCheckStack
9246 9246 d 02
9246 9246 s 				LD		(BC),A
9247 9247 d c9
9247 9247 s 				RET
9248 9248 s ghostMoveL:		
9248 9248 d 0a
9248 9248 s                 LD      A, (BC)
9249 9249 d 67
9249 9249 s                 LD      H,A         ;ld y
924a 924a d 1a
924a 924a s 				LD		A, (DE)
924b 924b d 3d
924b 924b s 				DEC		A
924c 924c d e61f
924c 924c s 				AND		00011111B
924e 924e d 6f
924e 924e s                 LD      L,A         ;ld x
924f 924f d cd6092
924f 924f s                 CALL    ghostCheckStack
9252 9252 d 12
9252 9252 s 				LD		(DE),A
9253 9253 d c9
9253 9253 s 				RET
9254 9254 s ghostMoveR:		
9254 9254 d 0a
9254 9254 s                 LD      A, (BC)
9255 9255 d 67
9255 9255 s                 LD      H,A         ;ld y
9256 9256 d 1a
9256 9256 s 				LD		A, (DE)
9257 9257 d 3c
9257 9257 s 				INC		A
9258 9258 d e61f
9258 9258 s 				AND		00011111B
925a 925a d 6f
925a 925a s                 LD      L,A         ;ld x
925b 925b d cd6092
925b 925b s                 CALL    ghostCheckStack
925e 925e d 12
925e 925e s 				LD		(DE),A
925f 925f d c9
925f 925f s 				RET
9260 9260 s ghostCheckStack:
9260 9260 d f5
9260 9260 s                 PUSH   AF
9261 9261 d c5
9261 9261 s                 PUSH   BC
9262 9262 d d5
9262 9262 s                 PUSH   DE
9263 9263 d cdb793
9263 9263 s                 CALL   rGhostStack
9266 9266 d ca7f92
9266 9266 s                 JP     Z,ghostDoStack
9269 9269 d cdf894
9269 9269 s                 CALL   oGhostStack
926c 926c d ca7f92
926c 926c s                 JP     Z,ghostDoStack
926f 926f d cd3996
926f 926f s                 CALL   pGhostStack
9272 9272 d ca7f92
9272 9272 s                 JP     Z,ghostDoStack
9275 9275 d cd7a97
9275 9275 s                 CALL   tGhostStack
9278 9278 d ca7f92
9278 9278 s                 JP     Z,ghostDoStack
927b 927b d d1
927b 927b s                 POP    DE
927c 927c d c1
927c 927c s                 POP    BC
927d 927d d f1
927d 927d s                 POP    AF
927e 927e d c9
927e 927e s                 RET
927f 927f s ghostDoStack:   
927f 927f d d1
927f 927f s                 POP    DE
9280 9280 d c1
9280 9280 s                 POP    BC
9281 9281 d f1
9281 9281 s                 POP    AF
9282 9282 d f1
9282 9282 s                 POP    AF
9283 9283 d c9
9283 9283 s                 RET
9284 9284 s 
9284 9284 s eatGhost:       
9284 9284 d 2a0089
9284 9284 s                 LD      HL,(score)
9287 9287 d 010a00
9287 9287 s                 LD      BC,10
928a 928a d 09
928a 928a s                 ADD     HL,BC
928b 928b d 220089
928b 928b s                 LD      (score),HL
928e 928e d c9
928e 928e s                 RET
928f 928f s                 
928f 928f s include ghosts/red.asm
928f 928f f ghosts/red.asm
928f 928f s rGhostInitX	    .EQU	15
928f 928f s rGhostInitY	    .EQU	8
928f 928f s rGhostInitTimer .EQU    10H
928f 928f s rGhostStoreX	.EQU	14
928f 928f s rGhostStoreY	.EQU	11
928f 928f s 
928f 928f s rGhostX		    .EQU	8110H		
928f 928f s rGhostY		    .EQU	8111H
928f 928f s rGhostDir		.EQU	8112H
928f 928f s rGhostTimer     .EQU    8115H
928f 928f s 
928f 928f s rGhostClear:
928f 928f d 3a1081
928f 928f s 				LD		A, (rGhostX)		;Push X to stack
9292 9292 d 4f
9292 9292 s 				LD		C,A
9293 9293 d 3a1181
9293 9293 s 				LD		A, (rGhostY)		;Push Y to stack
9296 9296 d 47
9296 9296 s 				LD		B,A
9297 9297 d cd9098
9297 9297 s 				CALL 	printMapAt
929a 929a d c9
929a 929a s 				RET
929b 929b s 				
929b 929b s rGhostPrint:
929b 929b d 3a1081
929b 929b s 				LD		A, (rGhostX)		;Push X to stack
929e 929e d 3c
929e 929e s 				INC		A
929f 929f d 4f
929f 929f s 				LD		C,A
92a0 92a0 d 3a1181
92a0 92a0 s 				LD		A, (rGhostY)		;Push Y to stack
92a3 92a3 d 3c
92a3 92a3 s 				INC		A
92a4 92a4 d 47
92a4 92a4 s 				LD		B,A
92a5 92a5 d cdb3a0
92a5 92a5 s 				CALL	moveCursor
92a8 92a8 d 3a0481
92a8 92a8 s                 LD      A,(pPActive)
92ab 92ab d b7
92ab 92ab s                 OR      A
92ac 92ac d c20f92
92ac 92ac s                 JP      NZ, printSGhost
92af 92af d 21c593
92af 92af s 				LD		HL, rGhost
92b2 92b2 d cd29a1
92b2 92b2 s 				CALL 	print
92b5 92b5 d c9
92b5 92b5 s 				RET
92b6 92b6 s rGhostMapData:	
92b6 92b6 d 3a1081
92b6 92b6 s 				LD		A, (rGhostX)
92b9 92b9 d 4f
92b9 92b9 s 				LD		C,A
92ba 92ba d 3a1181
92ba 92ba s 				LD		A, (rGhostY)
92bd 92bd d 47
92bd 92bd s 				LD		B,A
92be 92be d cdfa97
92be 92be s 				CALL	getMapAddress
92c1 92c1 d 7e
92c1 92c1 s                 LD      A,(HL)
92c2 92c2 d c9
92c2 92c2 s 				ret
92c3 92c3 s 
92c3 92c3 s 
92c3 92c3 s rGhostInit:   
92c3 92c3 d 3e0e
92c3 92c3 s                 LD		a, rGhostStoreX	;set rGhost Pos
92c5 92c5 d 321081
92c5 92c5 s 			    LD		(rGhostX),a
92c8 92c8 d 3e0b
92c8 92c8 s 			    LD		a, rGhostStoreY
92ca 92ca d 321181
92ca 92ca s 			    LD		(rGhostY),a
92cd 92cd d 3e10
92cd 92cd s                 LD		a, rGhostInitTimer
92cf 92cf d 321581
92cf 92cf s 			    LD		(rGhostTimer),a
92d2 92d2 d c9
92d2 92d2 s                 RET
92d3 92d3 s 
92d3 92d3 s rGhostMove:
92d3 92d3 d 3a1581
92d3 92d3 s                 LD      A,(rGhostTimer)     ;Dont move if the ghost is in jale
92d6 92d6 d b7
92d6 92d6 s                 OR      A                
92d7 92d7 d c2ec92
92d7 92d7 s                 JP      NZ,rGhostDecTimer   ;Decrement the timer if its x
92da 92da d 3a0481
92da 92da s                 LD      A,(pPActive)
92dd 92dd d cb47
92dd 92dd s                 BIT     0,A                 ;Move every other tick, bit 0 will always 0 when the power pellet isnt active
92df 92df d c0
92df 92df s                 RET     NZ
92e0 92e0 d 3a1281
92e0 92e0 s 				LD		A,(rGhostDir)
92e3 92e3 d 111081
92e3 92e3 s 				LD		DE,rGhostX
92e6 92e6 d 011181
92e6 92e6 s 				LD		BC,rGhostY
92e9 92e9 d c32292
92e9 92e9 s 				JP		ghostMove
92ec 92ec s 
92ec 92ec s 
92ec 92ec s rGhostDecTimer:
92ec 92ec d 3d
92ec 92ec s                 DEC     A
92ed 92ed d 321581
92ed 92ed s                 LD      (rGhostTimer),A
92f0 92f0 d b7
92f0 92f0 s                 OR      A
92f1 92f1 d c0
92f1 92f1 s                 RET     NZ              ;IF Zero move ghost out of jale
92f2 92f2 d 3e0f
92f2 92f2 s                 LD		a, rGhostInitX	;set rGhost Pos
92f4 92f4 d 321081
92f4 92f4 s 			    LD		(rGhostX),a
92f7 92f7 d 3e08
92f7 92f7 s 			    LD		a, rGhostInitY
92f9 92f9 d 321181
92f9 92f9 s 			    LD		(rGhostY),a
92fc 92fc d c9
92fc 92fc s                 RET
92fd 92fd s 
92fd 92fd s rGhostNextMove:
92fd 92fd d 3eff
92fd 92fd s 				LD		A, 0FFH
92ff 92ff d 321381
92ff 92ff s 				LD		(ghostDis),A
9302 9302 d cdb692
9302 9302 s 				CALL	rGhostMapData
9305 9305 d 57
9305 9305 s 				LD		D,A
9306 9306 d 3e57
9306 9306 s 				LD		A,	'W'			;check up
9308 9308 d cdcf97
9308 9308 s 				CALL	isMoveValid
930b 930b d c42793
930b 930b s 				CALL	NZ,rGhostCheckU
930e 930e d 3e53
930e 930e s 				LD		A,	'S'			;down
9310 9310 d cdcf97
9310 9310 s 				CALL	isMoveValid
9313 9313 d c43593
9313 9313 s 				CALL	NZ,rGhostCheckD
9316 9316 d 3e41
9316 9316 s 				LD		A,	'A'			;left
9318 9318 d cdcf97
9318 9318 s 				CALL	isMoveValid
931b 931b d c44393
931b 931b s 				CALL	NZ,rGhostCheckL
931e 931e d 3e44
931e 931e s 				LD		A,	'D'			;right
9320 9320 d cdcf97
9320 9320 s 				CALL	isMoveValid
9323 9323 d c45193
9323 9323 s 				CALL	NZ,rGhostCheckR
9326 9326 d c9
9326 9326 s 				RET
9327 9327 s 				
9327 9327 s rGhostCheckU:	
9327 9327 d f5
9327 9327 s 				PUSH	AF
9328 9328 d 3a1181
9328 9328 s 				LD		A, (rGhostY)
932b 932b d 3d
932b 932b s 				DEC		A
932c 932c d e61f
932c 932c s 				AND		00011111B
932e 932e d 47
932e 932e s 				LD		B,A
932f 932f d 3a1081
932f 932f s 				LD		A,(rGhostX)
9332 9332 d 4f
9332 9332 s 				LD		C,A
9333 9333 d 182a
9333 9333 s 				JR		rGhostPathFind
9335 9335 s rGhostCheckD:			
9335 9335 d f5
9335 9335 s 				PUSH	AF
9336 9336 d 3a1181
9336 9336 s 				LD		A, (rGhostY)
9339 9339 d 3c
9339 9339 s 				INC		A
933a 933a d e61f
933a 933a s 				AND		00011111B
933c 933c d 47
933c 933c s 				LD		B,A
933d 933d d 3a1081
933d 933d s 				LD		A,(rGhostX)
9340 9340 d 4f
9340 9340 s 				LD		C,A
9341 9341 d 181c
9341 9341 s 				JR		rGhostPathFind
9343 9343 s rGhostCheckL:		
9343 9343 d f5
9343 9343 s 				PUSH	AF	
9344 9344 d 3a1081
9344 9344 s 				LD		A, (rGhostX)
9347 9347 d 3d
9347 9347 s 				DEC		A
9348 9348 d e61f
9348 9348 s 				AND		00011111B
934a 934a d 4f
934a 934a s 				LD		C,A
934b 934b d 3a1181
934b 934b s 				LD		A,(rGhostY)
934e 934e d 47
934e 934e s 				LD		B,A
934f 934f d 180e
934f 934f s 				JR		rGhostPathFind
9351 9351 s rGhostCheckR:
9351 9351 d f5
9351 9351 s 				PUSH	AF	
9352 9352 d 3a1081
9352 9352 s 				LD		A, (rGhostX)
9355 9355 d 3c
9355 9355 s 				INC		A
9356 9356 d e61f
9356 9356 s 				AND		00011111B
9358 9358 d 4f
9358 9358 s 				LD		C,A
9359 9359 d 3a1181
9359 9359 s 				LD		A,(rGhostY)
935c 935c d 47
935c 935c s 				LD		B,A
935d 935d d 1800
935d 935d s 				JR		rGhostPathFind
935f 935f s 
935f 935f s rGhostPathFind:
935f 935f d cd7898
935f 935f s 				CALL	getAddressPF
9362 9362 d 3a1381
9362 9362 s 				LD		A,(ghostDis)
9365 9365 d 5e
9365 9365 s 				LD		E,(HL)
9366 9366 d bb
9366 9366 s 				CP		E
9367 9367 d f5
9367 9367 s                 PUSH    AF
9368 9368 d 3a0481
9368 9368 s                 LD      A,(pPActive)            ;Check power pellet is not activ, if it is, run away
936b 936b d b7
936b 936b s                 OR      A
936c 936c d c27693
936c 936c s                 JP      NZ,rGhostPFPP
936f 936f d f1
936f 936f s                 POP     AF
9370 9370 d d28293
9370 9370 s 				JP		NC,rGhostSetNewDir
9373 9373 d f1
9373 9373 s                 POP     AF
9374 9374 d f1
9374 9374 s 				POP		AF
9375 9375 d c9
9375 9375 s 				RET
9376 9376 s rGhostPFPP:
9376 9376 d f1
9376 9376 s                 POP     AF
9377 9377 d da8293
9377 9377 s                 JP		C,rGhostSetNewDir
937a 937a d feff
937a 937a s                 CP      0FFH
937c 937c d ca8293
937c 937c s                 JP      Z,rGhostSetNewDir
937f 937f d f1
937f 937f s                 POP     AF
9380 9380 d f1
9380 9380 s 				POP		AF
9381 9381 d c9
9381 9381 s                 RET
9382 9382 s 
9382 9382 s rGhostSetNewDir:
9382 9382 d 7b
9382 9382 s 				LD		A,E
9383 9383 d 321381
9383 9383 s 				LD		(ghostDis),A
9386 9386 d f1
9386 9386 s 				POP		AF
9387 9387 d 321281
9387 9387 s 				LD		(rGhostDir),A
938a 938a d c9
938a 938a s 				RET
938b 938b s 
938b 938b s rGhostColide:   
938b 938b d 3a0081
938b 938b s                 LD      A,(pacx)                ;Compair X
938e 938e d 47
938e 938e s                 LD      B,A
938f 938f d 3a1081
938f 938f s                 LD      A,(rGhostX)
9392 9392 d b8
9392 9392 s                 CP      B
9393 9393 d c0
9393 9393 s                 RET     NZ
9394 9394 d 3a0181
9394 9394 s                 LD      A,(pacy)                ;Compair Y
9397 9397 d 47
9397 9397 s                 LD      B,A
9398 9398 d 3a1181
9398 9398 s                 LD      A,(rGhostY)
939b 939b d b8
939b 939b s                 CP      B
939c 939c d c0
939c 939c s                 RET     NZ
939d 939d d 3a0481
939d 939d s                 LD      A,(pPActive)              ;Colishion Happened
93a0 93a0 d b7
93a0 93a0 s                 OR      A
93a1 93a1 d ca9491
93a1 93a1 s                 JP      Z,killPacman               ;If power pellet not active, run genric deth lib
93a4 93a4 d cd8492
93a4 93a4 s 				CALL	eatGhost
93a7 93a7 d 3e0e
93a7 93a7 s                 LD		a, rGhostStoreX	           ;set rGhost Pos
93a9 93a9 d 321081
93a9 93a9 s 			    LD		(rGhostX),a
93ac 93ac d 3e0b
93ac 93ac s 			    LD		a, rGhostStoreY
93ae 93ae d 321181
93ae 93ae s 			    LD		(rGhostY),a
93b1 93b1 d 3e10
93b1 93b1 s                 LD		a, rGhostInitTimer
93b3 93b3 d 321581
93b3 93b3 s 			    LD		(rGhostTimer),a
93b6 93b6 d c9
93b6 93b6 s                 RET
93b7 93b7 s ;x = l
93b7 93b7 s ;y = h
93b7 93b7 s rGhostStack:
93b7 93b7 d 7d
93b7 93b7 s 				LD      A,L               		;Compair X
93b8 93b8 d 47
93b8 93b8 s                 LD      B,A
93b9 93b9 d 3a1081
93b9 93b9 s                 LD      A,(rGhostX)
93bc 93bc d b8
93bc 93bc s                 CP      B
93bd 93bd d c0
93bd 93bd s                 RET     NZ
93be 93be d 7c
93be 93be s                 LD      A,h                		;Compair Y
93bf 93bf d 47
93bf 93bf s                 LD      B,A
93c0 93c0 d 3a1181
93c0 93c0 s                 LD      A,(rGhostY)
93c3 93c3 d b8
93c3 93c3 s                 CP      B
93c4 93c4 d c9
93c4 93c4 s                 RET
93c5 93c5 s 
93c5 93c5 f ghosts.asm
93c5 93c5 d 1b5b39316d4d1b5b306d00
93c5 93c5 s rGhost:		.BYTE	1BH,"[91mM",1BH,"[0m",0
93d0 93d0 s include ghosts/orange.asm
93d0 93d0 f ghosts/orange.asm
93d0 93d0 s oGhostInitX	    .EQU	15
93d0 93d0 s oGhostInitY	    .EQU	8
93d0 93d0 s oGhostInitTimer .EQU    20H
93d0 93d0 s oGhostStoreX	.EQU	15
93d0 93d0 s oGhostStoreY	.EQU	11
93d0 93d0 s 
93d0 93d0 s oGhostX		    .EQU	8120H		
93d0 93d0 s oGhostY		    .EQU	8121H
93d0 93d0 s oGhostDir		.EQU	8122H
93d0 93d0 s oGhostTimer     .EQU    8125H
93d0 93d0 s 
93d0 93d0 s oGhostClear:
93d0 93d0 d 3a2081
93d0 93d0 s 				LD		A, (oGhostX)		;Push X to stack
93d3 93d3 d 4f
93d3 93d3 s 				LD		C,A
93d4 93d4 d 3a2181
93d4 93d4 s 				LD		A, (oGhostY)		;Push Y to stack
93d7 93d7 d 47
93d7 93d7 s 				LD		B,A
93d8 93d8 d cd9098
93d8 93d8 s 				CALL 	printMapAt
93db 93db d c9
93db 93db s 				RET
93dc 93dc s 				
93dc 93dc s oGhostPrint:
93dc 93dc d 3a2081
93dc 93dc s 				LD		A, (oGhostX)		;Push X to stack
93df 93df d 3c
93df 93df s 				INC		A
93e0 93e0 d 4f
93e0 93e0 s 				LD		C,A
93e1 93e1 d 3a2181
93e1 93e1 s 				LD		A, (oGhostY)		;Push Y to stack
93e4 93e4 d 3c
93e4 93e4 s 				INC		A
93e5 93e5 d 47
93e5 93e5 s 				LD		B,A
93e6 93e6 d cdb3a0
93e6 93e6 s 				CALL	moveCursor
93e9 93e9 d 3a0481
93e9 93e9 s                 LD      A,(pPActive)
93ec 93ec d b7
93ec 93ec s                 OR      A
93ed 93ed d c20f92
93ed 93ed s                 JP      NZ, printSGhost
93f0 93f0 d 210695
93f0 93f0 s 				LD		HL, oGhost
93f3 93f3 d cd29a1
93f3 93f3 s 				CALL 	print
93f6 93f6 d c9
93f6 93f6 s 				RET
93f7 93f7 s oGhostMapData:	
93f7 93f7 d 3a2081
93f7 93f7 s 				LD		A, (oGhostX)
93fa 93fa d 4f
93fa 93fa s 				LD		C,A
93fb 93fb d 3a2181
93fb 93fb s 				LD		A, (oGhostY)
93fe 93fe d 47
93fe 93fe s 				LD		B,A
93ff 93ff d cdfa97
93ff 93ff s 				CALL	getMapAddress
9402 9402 d 7e
9402 9402 s                 LD      A,(HL)
9403 9403 d c9
9403 9403 s 				ret
9404 9404 s 
9404 9404 s 
9404 9404 s oGhostInit:   
9404 9404 d 3e0f
9404 9404 s                 LD		a, oGhostStoreX	;set oGhost Pos
9406 9406 d 322081
9406 9406 s 			    LD		(oGhostX),a
9409 9409 d 3e0b
9409 9409 s 			    LD		a, oGhostStoreY
940b 940b d 322181
940b 940b s 			    LD		(oGhostY),a
940e 940e d 3e20
940e 940e s                 LD		a, oGhostInitTimer
9410 9410 d 322581
9410 9410 s 			    LD		(oGhostTimer),a
9413 9413 d c9
9413 9413 s                 RET
9414 9414 s 
9414 9414 s oGhostMove:
9414 9414 d 3a2581
9414 9414 s                 LD      A,(oGhostTimer)     ;Dont move if the ghost is in jale
9417 9417 d b7
9417 9417 s                 OR      A                
9418 9418 d c22d94
9418 9418 s                 JP      NZ,oGhostDecTimer   ;Decrement the timer if its x
941b 941b d 3a0481
941b 941b s                 LD      A,(pPActive)
941e 941e d cb47
941e 941e s                 BIT     0,A                 ;Move every other tick, bit 0 will always 0 when the power pellet isnt active
9420 9420 d c0
9420 9420 s                 RET     NZ
9421 9421 d 3a2281
9421 9421 s 				LD		A,(oGhostDir)
9424 9424 d 112081
9424 9424 s 				LD		DE,oGhostX
9427 9427 d 012181
9427 9427 s 				LD		BC,oGhostY
942a 942a d c32292
942a 942a s 				JP		ghostMove
942d 942d s 
942d 942d s oGhostDecTimer:
942d 942d d 3d
942d 942d s                 DEC     A
942e 942e d 322581
942e 942e s                 LD      (oGhostTimer),A
9431 9431 d b7
9431 9431 s                 OR      A
9432 9432 d c0
9432 9432 s                 RET     NZ              ;IF Zero move ghost out of jale
9433 9433 d 3e0f
9433 9433 s                 LD		a, oGhostInitX	;set oGhost Pos
9435 9435 d 322081
9435 9435 s 			    LD		(oGhostX),a
9438 9438 d 3e08
9438 9438 s 			    LD		a, oGhostInitY
943a 943a d 322181
943a 943a s 			    LD		(oGhostY),a
943d 943d d c9
943d 943d s                 RET
943e 943e s 
943e 943e s oGhostNextMove:
943e 943e d 3eff
943e 943e s 				LD		A, 0FFH
9440 9440 d 321381
9440 9440 s 				LD		(ghostDis),A
9443 9443 d cdf793
9443 9443 s 				CALL	oGhostMapData
9446 9446 d 57
9446 9446 s 				LD		D,A
9447 9447 d 3e57
9447 9447 s 				LD		A,	'W'			;check up
9449 9449 d cdcf97
9449 9449 s 				CALL	isMoveValid
944c 944c d c46894
944c 944c s 				CALL	NZ,oGhostCheckU
944f 944f d 3e53
944f 944f s 				LD		A,	'S'			;down
9451 9451 d cdcf97
9451 9451 s 				CALL	isMoveValid
9454 9454 d c47694
9454 9454 s 				CALL	NZ,oGhostCheckD
9457 9457 d 3e41
9457 9457 s 				LD		A,	'A'			;left
9459 9459 d cdcf97
9459 9459 s 				CALL	isMoveValid
945c 945c d c48494
945c 945c s 				CALL	NZ,oGhostCheckL
945f 945f d 3e44
945f 945f s 				LD		A,	'D'			;right
9461 9461 d cdcf97
9461 9461 s 				CALL	isMoveValid
9464 9464 d c49294
9464 9464 s 				CALL	NZ,oGhostCheckR
9467 9467 d c9
9467 9467 s 				RET
9468 9468 s 				
9468 9468 s oGhostCheckU:	
9468 9468 d f5
9468 9468 s 				PUSH	AF
9469 9469 d 3a2181
9469 9469 s 				LD		A, (oGhostY)
946c 946c d 3d
946c 946c s 				DEC		A
946d 946d d e61f
946d 946d s 				AND		00011111B
946f 946f d 47
946f 946f s 				LD		B,A
9470 9470 d 3a2081
9470 9470 s 				LD		A,(oGhostX)
9473 9473 d 4f
9473 9473 s 				LD		C,A
9474 9474 d 182a
9474 9474 s 				JR		oGhostPathFind
9476 9476 s oGhostCheckD:			
9476 9476 d f5
9476 9476 s 				PUSH	AF
9477 9477 d 3a2181
9477 9477 s 				LD		A, (oGhostY)
947a 947a d 3c
947a 947a s 				INC		A
947b 947b d e61f
947b 947b s 				AND		00011111B
947d 947d d 47
947d 947d s 				LD		B,A
947e 947e d 3a2081
947e 947e s 				LD		A,(oGhostX)
9481 9481 d 4f
9481 9481 s 				LD		C,A
9482 9482 d 181c
9482 9482 s 				JR		oGhostPathFind
9484 9484 s oGhostCheckL:		
9484 9484 d f5
9484 9484 s 				PUSH	AF	
9485 9485 d 3a2081
9485 9485 s 				LD		A, (oGhostX)
9488 9488 d 3d
9488 9488 s 				DEC		A
9489 9489 d e61f
9489 9489 s 				AND		00011111B
948b 948b d 4f
948b 948b s 				LD		C,A
948c 948c d 3a2181
948c 948c s 				LD		A,(oGhostY)
948f 948f d 47
948f 948f s 				LD		B,A
9490 9490 d 180e
9490 9490 s 				JR		oGhostPathFind
9492 9492 s oGhostCheckR:
9492 9492 d f5
9492 9492 s 				PUSH	AF	
9493 9493 d 3a2081
9493 9493 s 				LD		A, (oGhostX)
9496 9496 d 3c
9496 9496 s 				INC		A
9497 9497 d e61f
9497 9497 s 				AND		00011111B
9499 9499 d 4f
9499 9499 s 				LD		C,A
949a 949a d 3a2181
949a 949a s 				LD		A,(oGhostY)
949d 949d d 47
949d 949d s 				LD		B,A
949e 949e d 1800
949e 949e s 				JR		oGhostPathFind
94a0 94a0 s 
94a0 94a0 s oGhostPathFind:
94a0 94a0 d cd7898
94a0 94a0 s 				CALL	getAddressPF
94a3 94a3 d 3a1381
94a3 94a3 s 				LD		A,(ghostDis)
94a6 94a6 d 5e
94a6 94a6 s 				LD		E,(HL)
94a7 94a7 d bb
94a7 94a7 s 				CP		E
94a8 94a8 d f5
94a8 94a8 s                 PUSH    AF
94a9 94a9 d 3a0481
94a9 94a9 s                 LD      A,(pPActive)            ;Check power pellet is not activ, if it is, run away
94ac 94ac d b7
94ac 94ac s                 OR      A
94ad 94ad d c2b794
94ad 94ad s                 JP      NZ,oGhostPFPP
94b0 94b0 d f1
94b0 94b0 s                 POP     AF
94b1 94b1 d d2c394
94b1 94b1 s 				JP		NC,oGhostSetNewDir
94b4 94b4 d f1
94b4 94b4 s                 POP     AF
94b5 94b5 d f1
94b5 94b5 s 				POP		AF
94b6 94b6 d c9
94b6 94b6 s 				RET
94b7 94b7 s oGhostPFPP:
94b7 94b7 d f1
94b7 94b7 s                 POP     AF
94b8 94b8 d dac394
94b8 94b8 s                 JP		C,oGhostSetNewDir
94bb 94bb d feff
94bb 94bb s                 CP      0FFH
94bd 94bd d cac394
94bd 94bd s                 JP      Z,oGhostSetNewDir
94c0 94c0 d f1
94c0 94c0 s                 POP     AF
94c1 94c1 d f1
94c1 94c1 s 				POP		AF
94c2 94c2 d c9
94c2 94c2 s                 RET
94c3 94c3 s 
94c3 94c3 s oGhostSetNewDir:
94c3 94c3 d 7b
94c3 94c3 s 				LD		A,E
94c4 94c4 d 321381
94c4 94c4 s 				LD		(ghostDis),A
94c7 94c7 d f1
94c7 94c7 s 				POP		AF
94c8 94c8 d 322281
94c8 94c8 s 				LD		(oGhostDir),A
94cb 94cb d c9
94cb 94cb s 				RET
94cc 94cc s 
94cc 94cc s oGhostColide:   
94cc 94cc d 3a0081
94cc 94cc s                 LD      A,(pacx)                ;Compair X
94cf 94cf d 47
94cf 94cf s                 LD      B,A
94d0 94d0 d 3a2081
94d0 94d0 s                 LD      A,(oGhostX)
94d3 94d3 d b8
94d3 94d3 s                 CP      B
94d4 94d4 d c0
94d4 94d4 s                 RET     NZ
94d5 94d5 d 3a0181
94d5 94d5 s                 LD      A,(pacy)                ;Compair Y
94d8 94d8 d 47
94d8 94d8 s                 LD      B,A
94d9 94d9 d 3a2181
94d9 94d9 s                 LD      A,(oGhostY)
94dc 94dc d b8
94dc 94dc s                 CP      B
94dd 94dd d c0
94dd 94dd s                 RET     NZ
94de 94de d 3a0481
94de 94de s                 LD      A,(pPActive)              ;Colishion Happened
94e1 94e1 d b7
94e1 94e1 s                 OR      A
94e2 94e2 d ca9491
94e2 94e2 s                 JP      Z,killPacman               ;If power pellet not active, run genric deth lib
94e5 94e5 d cd8492
94e5 94e5 s 				CALL	eatGhost
94e8 94e8 d 3e0f
94e8 94e8 s                 LD		a, oGhostStoreX	           ;set oGhost Pos
94ea 94ea d 322081
94ea 94ea s 			    LD		(oGhostX),a
94ed 94ed d 3e0b
94ed 94ed s 			    LD		a, oGhostStoreY
94ef 94ef d 322181
94ef 94ef s 			    LD		(oGhostY),a
94f2 94f2 d 3e20
94f2 94f2 s                 LD		a, oGhostInitTimer
94f4 94f4 d 322581
94f4 94f4 s 			    LD		(oGhostTimer),a
94f7 94f7 d c9
94f7 94f7 s                 RET
94f8 94f8 s ;x = l
94f8 94f8 s ;y = h
94f8 94f8 s oGhostStack:
94f8 94f8 d 7d
94f8 94f8 s 				LD      A,L               		;Compair X
94f9 94f9 d 47
94f9 94f9 s                 LD      B,A
94fa 94fa d 3a2081
94fa 94fa s                 LD      A,(oGhostX)
94fd 94fd d b8
94fd 94fd s                 CP      B
94fe 94fe d c0
94fe 94fe s                 RET     NZ
94ff 94ff d 7c
94ff 94ff s                 LD      A,h                		;Compair Y
9500 9500 d 47
9500 9500 s                 LD      B,A
9501 9501 d 3a2181
9501 9501 s                 LD      A,(oGhostY)
9504 9504 d b8
9504 9504 s                 CP      B
9505 9505 d c9
9505 9505 s                 RET
9506 9506 s 
9506 9506 f ghosts.asm
9506 9506 d 1b5b33336d4d1b5b306d00
9506 9506 s oGhost:		.BYTE	1BH,"[33mM",1BH,"[0m",0
9511 9511 s include ghosts/pink.asm
9511 9511 f ghosts/pink.asm
9511 9511 s pGhostInitX	    .EQU	15
9511 9511 s pGhostInitY	    .EQU	8
9511 9511 s pGhostInitTimer .EQU    30H
9511 9511 s pGhostStoreX	.EQU	16
9511 9511 s pGhostStoreY	.EQU	11
9511 9511 s 
9511 9511 s pGhostX		    .EQU	8130H		
9511 9511 s pGhostY		    .EQU	8131H
9511 9511 s pGhostDir		.EQU	8132H
9511 9511 s pGhostTimer     .EQU    8135H
9511 9511 s 
9511 9511 s pGhostClear:
9511 9511 d 3a3081
9511 9511 s 				LD		A, (pGhostX)		;Push X to stack
9514 9514 d 4f
9514 9514 s 				LD		C,A
9515 9515 d 3a3181
9515 9515 s 				LD		A, (pGhostY)		;Push Y to stack
9518 9518 d 47
9518 9518 s 				LD		B,A
9519 9519 d cd9098
9519 9519 s 				CALL 	printMapAt
951c 951c d c9
951c 951c s 				RET
951d 951d s 				
951d 951d s pGhostPrint:
951d 951d d 3a3081
951d 951d s 				LD		A, (pGhostX)		;Push X to stack
9520 9520 d 3c
9520 9520 s 				INC		A
9521 9521 d 4f
9521 9521 s 				LD		C,A
9522 9522 d 3a3181
9522 9522 s 				LD		A, (pGhostY)		;Push Y to stack
9525 9525 d 3c
9525 9525 s 				INC		A
9526 9526 d 47
9526 9526 s 				LD		B,A
9527 9527 d cdb3a0
9527 9527 s 				CALL	moveCursor
952a 952a d 3a0481
952a 952a s                 LD      A,(pPActive)
952d 952d d b7
952d 952d s                 OR      A
952e 952e d c20f92
952e 952e s                 JP      NZ, printSGhost
9531 9531 d 214796
9531 9531 s 				LD		HL, pGhost
9534 9534 d cd29a1
9534 9534 s 				CALL 	print
9537 9537 d c9
9537 9537 s 				RET
9538 9538 s pGhostMapData:	
9538 9538 d 3a3081
9538 9538 s 				LD		A, (pGhostX)
953b 953b d 4f
953b 953b s 				LD		C,A
953c 953c d 3a3181
953c 953c s 				LD		A, (pGhostY)
953f 953f d 47
953f 953f s 				LD		B,A
9540 9540 d cdfa97
9540 9540 s 				CALL	getMapAddress
9543 9543 d 7e
9543 9543 s                 LD      A,(HL)
9544 9544 d c9
9544 9544 s 				ret
9545 9545 s 
9545 9545 s 
9545 9545 s pGhostInit:   
9545 9545 d 3e10
9545 9545 s                 LD		a, pGhostStoreX	;set pGhost Pos
9547 9547 d 323081
9547 9547 s 			    LD		(pGhostX),a
954a 954a d 3e0b
954a 954a s 			    LD		a, pGhostStoreY
954c 954c d 323181
954c 954c s 			    LD		(pGhostY),a
954f 954f d 3e30
954f 954f s                 LD		a, pGhostInitTimer
9551 9551 d 323581
9551 9551 s 			    LD		(pGhostTimer),a
9554 9554 d c9
9554 9554 s                 RET
9555 9555 s 
9555 9555 s pGhostMove:
9555 9555 d 3a3581
9555 9555 s                 LD      A,(pGhostTimer)     ;Dont move if the ghost is in jale
9558 9558 d b7
9558 9558 s                 OR      A                
9559 9559 d c26e95
9559 9559 s                 JP      NZ,pGhostDecTimer   ;Decrement the timer if its x
955c 955c d 3a0481
955c 955c s                 LD      A,(pPActive)
955f 955f d cb47
955f 955f s                 BIT     0,A                 ;Move every other tick, bit 0 will always 0 when the power pellet isnt active
9561 9561 d c0
9561 9561 s                 RET     NZ
9562 9562 d 3a3281
9562 9562 s 				LD		A,(pGhostDir)
9565 9565 d 113081
9565 9565 s 				LD		DE,pGhostX
9568 9568 d 013181
9568 9568 s 				LD		BC,pGhostY
956b 956b d c32292
956b 956b s 				JP		ghostMove
956e 956e s 
956e 956e s 
956e 956e s pGhostDecTimer:
956e 956e d 3d
956e 956e s                 DEC     A
956f 956f d 323581
956f 956f s                 LD      (pGhostTimer),A
9572 9572 d b7
9572 9572 s                 OR      A
9573 9573 d c0
9573 9573 s                 RET     NZ              ;IF Zero move ghost out of jale
9574 9574 d 3e0f
9574 9574 s                 LD		a, pGhostInitX	;set pGhost Pos
9576 9576 d 323081
9576 9576 s 			    LD		(pGhostX),a
9579 9579 d 3e08
9579 9579 s 			    LD		a, pGhostInitY
957b 957b d 323181
957b 957b s 			    LD		(pGhostY),a
957e 957e d c9
957e 957e s                 RET
957f 957f s 
957f 957f s pGhostNextMove:
957f 957f d 3eff
957f 957f s 				LD		A, 0FFH
9581 9581 d 321381
9581 9581 s 				LD		(ghostDis),A
9584 9584 d cd3895
9584 9584 s 				CALL	pGhostMapData
9587 9587 d 57
9587 9587 s 				LD		D,A
9588 9588 d 3e57
9588 9588 s 				LD		A,	'W'			;check up
958a 958a d cdcf97
958a 958a s 				CALL	isMoveValid
958d 958d d c4a995
958d 958d s 				CALL	NZ,pGhostCheckU
9590 9590 d 3e53
9590 9590 s 				LD		A,	'S'			;down
9592 9592 d cdcf97
9592 9592 s 				CALL	isMoveValid
9595 9595 d c4b795
9595 9595 s 				CALL	NZ,pGhostCheckD
9598 9598 d 3e41
9598 9598 s 				LD		A,	'A'			;left
959a 959a d cdcf97
959a 959a s 				CALL	isMoveValid
959d 959d d c4c595
959d 959d s 				CALL	NZ,pGhostCheckL
95a0 95a0 d 3e44
95a0 95a0 s 				LD		A,	'D'			;right
95a2 95a2 d cdcf97
95a2 95a2 s 				CALL	isMoveValid
95a5 95a5 d c4d395
95a5 95a5 s 				CALL	NZ,pGhostCheckR
95a8 95a8 d c9
95a8 95a8 s 				RET
95a9 95a9 s 				
95a9 95a9 s pGhostCheckU:	
95a9 95a9 d f5
95a9 95a9 s 				PUSH	AF
95aa 95aa d 3a3181
95aa 95aa s 				LD		A, (pGhostY)
95ad 95ad d 3d
95ad 95ad s 				DEC		A
95ae 95ae d e61f
95ae 95ae s 				AND		00011111B
95b0 95b0 d 47
95b0 95b0 s 				LD		B,A
95b1 95b1 d 3a3081
95b1 95b1 s 				LD		A,(pGhostX)
95b4 95b4 d 4f
95b4 95b4 s 				LD		C,A
95b5 95b5 d 182a
95b5 95b5 s 				JR		pGhostPathFind
95b7 95b7 s pGhostCheckD:			
95b7 95b7 d f5
95b7 95b7 s 				PUSH	AF
95b8 95b8 d 3a3181
95b8 95b8 s 				LD		A, (pGhostY)
95bb 95bb d 3c
95bb 95bb s 				INC		A
95bc 95bc d e61f
95bc 95bc s 				AND		00011111B
95be 95be d 47
95be 95be s 				LD		B,A
95bf 95bf d 3a3081
95bf 95bf s 				LD		A,(pGhostX)
95c2 95c2 d 4f
95c2 95c2 s 				LD		C,A
95c3 95c3 d 181c
95c3 95c3 s 				JR		pGhostPathFind
95c5 95c5 s pGhostCheckL:		
95c5 95c5 d f5
95c5 95c5 s 				PUSH	AF	
95c6 95c6 d 3a3081
95c6 95c6 s 				LD		A, (pGhostX)
95c9 95c9 d 3d
95c9 95c9 s 				DEC		A
95ca 95ca d e61f
95ca 95ca s 				AND		00011111B
95cc 95cc d 4f
95cc 95cc s 				LD		C,A
95cd 95cd d 3a3181
95cd 95cd s 				LD		A,(pGhostY)
95d0 95d0 d 47
95d0 95d0 s 				LD		B,A
95d1 95d1 d 180e
95d1 95d1 s 				JR		pGhostPathFind
95d3 95d3 s pGhostCheckR:
95d3 95d3 d f5
95d3 95d3 s 				PUSH	AF	
95d4 95d4 d 3a3081
95d4 95d4 s 				LD		A, (pGhostX)
95d7 95d7 d 3c
95d7 95d7 s 				INC		A
95d8 95d8 d e61f
95d8 95d8 s 				AND		00011111B
95da 95da d 4f
95da 95da s 				LD		C,A
95db 95db d 3a3181
95db 95db s 				LD		A,(pGhostY)
95de 95de d 47
95de 95de s 				LD		B,A
95df 95df d 1800
95df 95df s 				JR		pGhostPathFind
95e1 95e1 s 
95e1 95e1 s pGhostPathFind:
95e1 95e1 d cd7898
95e1 95e1 s 				CALL	getAddressPF
95e4 95e4 d 3a1381
95e4 95e4 s 				LD		A,(ghostDis)
95e7 95e7 d 5e
95e7 95e7 s 				LD		E,(HL)
95e8 95e8 d bb
95e8 95e8 s 				CP		E
95e9 95e9 d f5
95e9 95e9 s                 PUSH    AF
95ea 95ea d 3a0481
95ea 95ea s                 LD      A,(pPActive)            ;Check power pellet is not activ, if it is, run away
95ed 95ed d b7
95ed 95ed s                 OR      A
95ee 95ee d c2f895
95ee 95ee s                 JP      NZ,pGhostPFPP
95f1 95f1 d f1
95f1 95f1 s                 POP     AF
95f2 95f2 d d20496
95f2 95f2 s 				JP		NC,pGhostSetNewDir
95f5 95f5 d f1
95f5 95f5 s                 POP     AF
95f6 95f6 d f1
95f6 95f6 s 				POP		AF
95f7 95f7 d c9
95f7 95f7 s 				RET
95f8 95f8 s pGhostPFPP:
95f8 95f8 d f1
95f8 95f8 s                 POP     AF
95f9 95f9 d da0496
95f9 95f9 s                 JP		C,pGhostSetNewDir
95fc 95fc d feff
95fc 95fc s                 CP      0FFH
95fe 95fe d ca0496
95fe 95fe s                 JP      Z,pGhostSetNewDir
9601 9601 d f1
9601 9601 s                 POP     AF
9602 9602 d f1
9602 9602 s 				POP		AF
9603 9603 d c9
9603 9603 s                 RET
9604 9604 s 
9604 9604 s pGhostSetNewDir:
9604 9604 d 7b
9604 9604 s 				LD		A,E
9605 9605 d 321381
9605 9605 s 				LD		(ghostDis),A
9608 9608 d f1
9608 9608 s 				POP		AF
9609 9609 d 323281
9609 9609 s 				LD		(pGhostDir),A
960c 960c d c9
960c 960c s 				RET
960d 960d s 
960d 960d s pGhostColide:   
960d 960d d 3a0081
960d 960d s                 LD      A,(pacx)                ;Compair X
9610 9610 d 47
9610 9610 s                 LD      B,A
9611 9611 d 3a3081
9611 9611 s                 LD      A,(pGhostX)
9614 9614 d b8
9614 9614 s                 CP      B
9615 9615 d c0
9615 9615 s                 RET     NZ
9616 9616 d 3a0181
9616 9616 s                 LD      A,(pacy)                ;Compair Y
9619 9619 d 47
9619 9619 s                 LD      B,A
961a 961a d 3a3181
961a 961a s                 LD      A,(pGhostY)
961d 961d d b8
961d 961d s                 CP      B
961e 961e d c0
961e 961e s                 RET     NZ
961f 961f d 3a0481
961f 961f s                 LD      A,(pPActive)              ;Colishion Happened
9622 9622 d b7
9622 9622 s                 OR      A
9623 9623 d ca9491
9623 9623 s                 JP      Z,killPacman               ;If power pellet not active, run genric deth lib
9626 9626 d cd8492
9626 9626 s 				CALL	eatGhost
9629 9629 d 3e10
9629 9629 s                 LD		a, pGhostStoreX	           ;set pGhost Pos
962b 962b d 323081
962b 962b s 			    LD		(pGhostX),a
962e 962e d 3e0b
962e 962e s 			    LD		a, pGhostStoreY
9630 9630 d 323181
9630 9630 s 			    LD		(pGhostY),a
9633 9633 d 3e30
9633 9633 s                 LD		a, pGhostInitTimer
9635 9635 d 323581
9635 9635 s 			    LD		(pGhostTimer),a
9638 9638 d c9
9638 9638 s                 RET
9639 9639 s 
9639 9639 s ;x = l
9639 9639 s ;y = h
9639 9639 s pGhostStack:
9639 9639 d 7d
9639 9639 s 				LD      A,L               		;Compair X
963a 963a d 47
963a 963a s                 LD      B,A
963b 963b d 3a3081
963b 963b s                 LD      A,(pGhostX)
963e 963e d b8
963e 963e s                 CP      B
963f 963f d c0
963f 963f s                 RET     NZ
9640 9640 d 7c
9640 9640 s                 LD      A,h                		;Compair Y
9641 9641 d 47
9641 9641 s                 LD      B,A
9642 9642 d 3a3181
9642 9642 s                 LD      A,(pGhostY)
9645 9645 d b8
9645 9645 s                 CP      B
9646 9646 d c9
9646 9646 s                 RET
9647 9647 s 
9647 9647 f ghosts.asm
9647 9647 d 1b5b39356d4d1b5b306d00
9647 9647 s pGhost:		.BYTE	1BH,"[95mM",1BH,"[0m",0
9652 9652 s include ghosts/teal.asm
9652 9652 f ghosts/teal.asm
9652 9652 s tGhostInitX	    .EQU	15
9652 9652 s tGhostInitY	    .EQU	8
9652 9652 s tGhostInitTimer .EQU    40H
9652 9652 s tGhostStoreX	.EQU	17 
9652 9652 s tGhostStoreY	.EQU	11
9652 9652 s 
9652 9652 s tGhostX		    .EQU	8140H		
9652 9652 s tGhostY		    .EQU	8141H
9652 9652 s tGhostDir		.EQU	8142H
9652 9652 s tGhostTimer     .EQU    8145H
9652 9652 s 
9652 9652 s tGhostClear:
9652 9652 d 3a4081
9652 9652 s 				LD		A, (tGhostX)		;Push X to stack
9655 9655 d 4f
9655 9655 s 				LD		C,A
9656 9656 d 3a4181
9656 9656 s 				LD		A, (tGhostY)		;Push Y to stack
9659 9659 d 47
9659 9659 s 				LD		B,A
965a 965a d cd9098
965a 965a s 				CALL 	printMapAt
965d 965d d c9
965d 965d s 				RET
965e 965e s 				
965e 965e s tGhostPrint:
965e 965e d 3a4081
965e 965e s 				LD		A, (tGhostX)		;Push X to stack
9661 9661 d 3c
9661 9661 s 				INC		A
9662 9662 d 4f
9662 9662 s 				LD		C,A
9663 9663 d 3a4181
9663 9663 s 				LD		A, (tGhostY)		;Push Y to stack
9666 9666 d 3c
9666 9666 s 				INC		A
9667 9667 d 47
9667 9667 s 				LD		B,A
9668 9668 d cdb3a0
9668 9668 s 				CALL	moveCursor
966b 966b d 3a0481
966b 966b s                 LD      A,(pPActive)
966e 966e d b7
966e 966e s                 OR      A
966f 966f d c20f92
966f 966f s                 JP      NZ, printSGhost
9672 9672 d 218897
9672 9672 s 				LD		HL, tGhost
9675 9675 d cd29a1
9675 9675 s 				CALL 	print
9678 9678 d c9
9678 9678 s 				RET
9679 9679 s tGhostMapData:	
9679 9679 d 3a4081
9679 9679 s 				LD		A, (tGhostX)
967c 967c d 4f
967c 967c s 				LD		C,A
967d 967d d 3a4181
967d 967d s 				LD		A, (tGhostY)
9680 9680 d 47
9680 9680 s 				LD		B,A
9681 9681 d cdfa97
9681 9681 s 				CALL	getMapAddress
9684 9684 d 7e
9684 9684 s                 LD      A,(HL)
9685 9685 d c9
9685 9685 s 				ret
9686 9686 s 
9686 9686 s tGhostInit:   
9686 9686 d 3e11
9686 9686 s                 LD		a, tGhostStoreX	;set tGhost Pos
9688 9688 d 324081
9688 9688 s 			    LD		(tGhostX),a
968b 968b d 3e0b
968b 968b s 			    LD		a, tGhostStoreY
968d 968d d 324181
968d 968d s 			    LD		(tGhostY),a
9690 9690 d 3e40
9690 9690 s                 LD		a, tGhostInitTimer
9692 9692 d 324581
9692 9692 s 			    LD		(tGhostTimer),a
9695 9695 d c9
9695 9695 s                 RET
9696 9696 s 
9696 9696 s tGhostMove:
9696 9696 d 3a4581
9696 9696 s                 LD      A,(tGhostTimer)     ;Dont move if the ghost is in jale
9699 9699 d b7
9699 9699 s                 OR      A                
969a 969a d c2af96
969a 969a s                 JP      NZ,tGhostDecTimer   ;Decrement the timer if its x
969d 969d d 3a0481
969d 969d s                 LD      A,(pPActive)
96a0 96a0 d cb47
96a0 96a0 s                 BIT     0,A                 ;Move every other tick, bit 0 will always 0 when the power pellet isnt active
96a2 96a2 d c0
96a2 96a2 s                 RET     NZ
96a3 96a3 d 3a4281
96a3 96a3 s 				LD		A,(tGhostDir)
96a6 96a6 d 114081
96a6 96a6 s 				LD		DE,tGhostX
96a9 96a9 d 014181
96a9 96a9 s 				LD		BC,tGhostY
96ac 96ac d c32292
96ac 96ac s 				JP		ghostMove
96af 96af s 
96af 96af s tGhostDecTimer:
96af 96af d 3d
96af 96af s                 DEC     A
96b0 96b0 d 324581
96b0 96b0 s                 LD      (tGhostTimer),A
96b3 96b3 d b7
96b3 96b3 s                 OR      A
96b4 96b4 d c0
96b4 96b4 s                 RET     NZ              ;IF Zero move ghost out of jale
96b5 96b5 d 3e0f
96b5 96b5 s                 LD		a, tGhostInitX	;set tGhost Pos
96b7 96b7 d 324081
96b7 96b7 s 			    LD		(tGhostX),a
96ba 96ba d 3e08
96ba 96ba s 			    LD		a, tGhostInitY
96bc 96bc d 324181
96bc 96bc s 			    LD		(tGhostY),a
96bf 96bf d c9
96bf 96bf s                 RET
96c0 96c0 s 
96c0 96c0 s tGhostNextMove:
96c0 96c0 d 3eff
96c0 96c0 s 				LD		A, 0FFH
96c2 96c2 d 321381
96c2 96c2 s 				LD		(ghostDis),A
96c5 96c5 d cd7996
96c5 96c5 s 				CALL	tGhostMapData
96c8 96c8 d 57
96c8 96c8 s 				LD		D,A
96c9 96c9 d 3e57
96c9 96c9 s 				LD		A,	'W'			;check up
96cb 96cb d cdcf97
96cb 96cb s 				CALL	isMoveValid
96ce 96ce d c4ea96
96ce 96ce s 				CALL	NZ,tGhostCheckU
96d1 96d1 d 3e53
96d1 96d1 s 				LD		A,	'S'			;down
96d3 96d3 d cdcf97
96d3 96d3 s 				CALL	isMoveValid
96d6 96d6 d c4f896
96d6 96d6 s 				CALL	NZ,tGhostCheckD
96d9 96d9 d 3e41
96d9 96d9 s 				LD		A,	'A'			;left
96db 96db d cdcf97
96db 96db s 				CALL	isMoveValid
96de 96de d c40697
96de 96de s 				CALL	NZ,tGhostCheckL
96e1 96e1 d 3e44
96e1 96e1 s 				LD		A,	'D'			;right
96e3 96e3 d cdcf97
96e3 96e3 s 				CALL	isMoveValid
96e6 96e6 d c41497
96e6 96e6 s 				CALL	NZ,tGhostCheckR
96e9 96e9 d c9
96e9 96e9 s 				RET
96ea 96ea s 				
96ea 96ea s tGhostCheckU:	
96ea 96ea d f5
96ea 96ea s 				PUSH	AF
96eb 96eb d 3a4181
96eb 96eb s 				LD		A, (tGhostY)
96ee 96ee d 3d
96ee 96ee s 				DEC		A
96ef 96ef d e61f
96ef 96ef s 				AND		00011111B
96f1 96f1 d 47
96f1 96f1 s 				LD		B,A
96f2 96f2 d 3a4081
96f2 96f2 s 				LD		A,(tGhostX)
96f5 96f5 d 4f
96f5 96f5 s 				LD		C,A
96f6 96f6 d 182a
96f6 96f6 s 				JR		tGhostPathFind
96f8 96f8 s tGhostCheckD:			
96f8 96f8 d f5
96f8 96f8 s 				PUSH	AF
96f9 96f9 d 3a4181
96f9 96f9 s 				LD		A, (tGhostY)
96fc 96fc d 3c
96fc 96fc s 				INC		A
96fd 96fd d e61f
96fd 96fd s 				AND		00011111B
96ff 96ff d 47
96ff 96ff s 				LD		B,A
9700 9700 d 3a4081
9700 9700 s 				LD		A,(tGhostX)
9703 9703 d 4f
9703 9703 s 				LD		C,A
9704 9704 d 181c
9704 9704 s 				JR		tGhostPathFind
9706 9706 s tGhostCheckL:		
9706 9706 d f5
9706 9706 s 				PUSH	AF	
9707 9707 d 3a4081
9707 9707 s 				LD		A, (tGhostX)
970a 970a d 3d
970a 970a s 				DEC		A
970b 970b d e61f
970b 970b s 				AND		00011111B
970d 970d d 4f
970d 970d s 				LD		C,A
970e 970e d 3a4181
970e 970e s 				LD		A,(tGhostY)
9711 9711 d 47
9711 9711 s 				LD		B,A
9712 9712 d 180e
9712 9712 s 				JR		tGhostPathFind
9714 9714 s tGhostCheckR:
9714 9714 d f5
9714 9714 s 				PUSH	AF	
9715 9715 d 3a4081
9715 9715 s 				LD		A, (tGhostX)
9718 9718 d 3c
9718 9718 s 				INC		A
9719 9719 d e61f
9719 9719 s 				AND		00011111B
971b 971b d 4f
971b 971b s 				LD		C,A
971c 971c d 3a4181
971c 971c s 				LD		A,(tGhostY)
971f 971f d 47
971f 971f s 				LD		B,A
9720 9720 d 1800
9720 9720 s 				JR		tGhostPathFind
9722 9722 s 
9722 9722 s tGhostPathFind:
9722 9722 d cd7898
9722 9722 s 				CALL	getAddressPF
9725 9725 d 3a1381
9725 9725 s 				LD		A,(ghostDis)
9728 9728 d 5e
9728 9728 s 				LD		E,(HL)
9729 9729 d bb
9729 9729 s 				CP		E
972a 972a d f5
972a 972a s                 PUSH    AF
972b 972b d 3a0481
972b 972b s                 LD      A,(pPActive)            ;Check power pellet is not activ, if it is, run away
972e 972e d b7
972e 972e s                 OR      A
972f 972f d c23997
972f 972f s                 JP      NZ,tGhostPFPP
9732 9732 d f1
9732 9732 s                 POP     AF
9733 9733 d d24597
9733 9733 s 				JP		NC,tGhostSetNewDir
9736 9736 d f1
9736 9736 s                 POP     AF
9737 9737 d f1
9737 9737 s 				POP		AF
9738 9738 d c9
9738 9738 s 				RET
9739 9739 s tGhostPFPP:
9739 9739 d f1
9739 9739 s                 POP     AF
973a 973a d da4597
973a 973a s                 JP		C,tGhostSetNewDir
973d 973d d feff
973d 973d s                 CP      0FFH
973f 973f d ca4597
973f 973f s                 JP      Z,tGhostSetNewDir
9742 9742 d f1
9742 9742 s                 POP     AF
9743 9743 d f1
9743 9743 s 				POP		AF
9744 9744 d c9
9744 9744 s                 RET
9745 9745 s 
9745 9745 s tGhostSetNewDir:
9745 9745 d 7b
9745 9745 s 				LD		A,E
9746 9746 d 321381
9746 9746 s 				LD		(ghostDis),A
9749 9749 d f1
9749 9749 s 				POP		AF
974a 974a d 324281
974a 974a s 				LD		(tGhostDir),A
974d 974d d c9
974d 974d s 				RET
974e 974e s 
974e 974e s tGhostColide:   
974e 974e d 3a0081
974e 974e s                 LD      A,(pacx)                ;Compair X
9751 9751 d 47
9751 9751 s                 LD      B,A
9752 9752 d 3a4081
9752 9752 s                 LD      A,(tGhostX)
9755 9755 d b8
9755 9755 s                 CP      B
9756 9756 d c0
9756 9756 s                 RET     NZ
9757 9757 d 3a0181
9757 9757 s                 LD      A,(pacy)                ;Compair Y
975a 975a d 47
975a 975a s                 LD      B,A
975b 975b d 3a4181
975b 975b s                 LD      A,(tGhostY)
975e 975e d b8
975e 975e s                 CP      B
975f 975f d c0
975f 975f s                 RET     NZ
9760 9760 d 3a0481
9760 9760 s                 LD      A,(pPActive)              ;Colishion Happened
9763 9763 d b7
9763 9763 s                 OR      A
9764 9764 d ca9491
9764 9764 s                 JP      Z,killPacman               ;If power pellet not active, run genric deth lib
9767 9767 d cd8492
9767 9767 s 				CALL	eatGhost
976a 976a d 3e11
976a 976a s                 LD		a, tGhostStoreX	           ;set tGhost Pos
976c 976c d 324081
976c 976c s 			    LD		(tGhostX),a
976f 976f d 3e0b
976f 976f s 			    LD		a, tGhostStoreY
9771 9771 d 324181
9771 9771 s 			    LD		(tGhostY),a
9774 9774 d 3e40
9774 9774 s                 LD		a, tGhostInitTimer
9776 9776 d 324581
9776 9776 s 			    LD		(tGhostTimer),a
9779 9779 d c9
9779 9779 s                 RET
977a 977a s 
977a 977a s ;x = l
977a 977a s ;y = h
977a 977a s tGhostStack:
977a 977a d 7d
977a 977a s 				LD      A,L               		;Compair X
977b 977b d 47
977b 977b s                 LD      B,A
977c 977c d 3a4081
977c 977c s                 LD      A,(tGhostX)
977f 977f d b8
977f 977f s                 CP      B
9780 9780 d c0
9780 9780 s                 RET     NZ
9781 9781 d 7c
9781 9781 s                 LD      A,h                		;Compair Y
9782 9782 d 47
9782 9782 s                 LD      B,A
9783 9783 d 3a4181
9783 9783 s                 LD      A,(tGhostY)
9786 9786 d b8
9786 9786 s                 CP      B
9787 9787 d c9
9787 9787 s                 RET
9788 9788 s 
9788 9788 f ghosts.asm
9788 9788 d 1b5b39366d4d1b5b306d00
9788 9788 s tGhost:		.BYTE	1BH,"[96mM",1BH,"[0m",0
9793 9793 s 
9793 9793 s 
9793 9793 d 1b5b33346d4d1b5b306d00
9793 9793 s sGhost0:	.BYTE	1BH,"[34mM",1BH,"[0m",0
979e 979e f main.asm
979e 979e d 1b5b39376d4d1b5b306d00
979e 979e s sGhost1:	.BYTE	1BH,"[97mM",1BH,"[0m",0
97a9 97a9 s ;-----------Spesific Libs -----;
97a9 97a9 s include movelibs.asm	
97a9 97a9 f movelibs.asm
97a9 97a9 s move:
97a9 97a9 d fe57
97a9 97a9 s 				CP		'W'
97ab 97ab d 280a
97ab 97ab s 				JR		Z,moveU
97ad 97ad d fe41
97ad 97ad s 				CP		'A'
97af 97af d 2812
97af 97af s 				JR		Z,moveL
97b1 97b1 d fe53
97b1 97b1 s 				CP		'S'
97b3 97b3 d 2808
97b3 97b3 s 				JR		Z,moveD
97b5 97b5 d 1812
97b5 97b5 s 				JR		moveR
97b7 97b7 s 
97b7 97b7 s moveU:			
97b7 97b7 d 0a
97b7 97b7 s 				LD		A, (BC)
97b8 97b8 d 3d
97b8 97b8 s 				DEC		A
97b9 97b9 d e61f
97b9 97b9 s 				AND		00011111B
97bb 97bb d 02
97bb 97bb s 				LD		(BC),A
97bc 97bc d c9
97bc 97bc s 				RET
97bd 97bd s moveD:			
97bd 97bd d 0a
97bd 97bd s 				LD		A, (BC)
97be 97be d 3c
97be 97be s 				INC		A
97bf 97bf d e61f
97bf 97bf s 				AND		00011111B
97c1 97c1 d 02
97c1 97c1 s 				LD		(BC),A
97c2 97c2 d c9
97c2 97c2 s 				RET
97c3 97c3 s moveL:			
97c3 97c3 d 1a
97c3 97c3 s 				LD		A, (DE)
97c4 97c4 d 3d
97c4 97c4 s 				DEC		A
97c5 97c5 d e61f
97c5 97c5 s 				AND		00011111B
97c7 97c7 d 12
97c7 97c7 s 				LD		(DE),A
97c8 97c8 d c9
97c8 97c8 s 				RET
97c9 97c9 s moveR:			
97c9 97c9 d 1a
97c9 97c9 s 				LD		A, (DE)
97ca 97ca d 3c
97ca 97ca s 				INC		A
97cb 97cb d e61f
97cb 97cb s 				AND		00011111B
97cd 97cd d 12
97cd 97cd s 				LD		(DE),A
97ce 97ce d c9
97ce 97ce s 				RET
97cf 97cf s isMoveValid:
97cf 97cf d fe57
97cf 97cf s 				CP		'W'
97d1 97d1 d 280a
97d1 97d1 s 				JR		Z,moveUValid
97d3 97d3 d fe41
97d3 97d3 s 				CP		'A'
97d5 97d5 d 280c
97d5 97d5 s 				JR		Z,moveLValid
97d7 97d7 d fe53
97d7 97d7 s 				CP		'S'
97d9 97d9 d 2805
97d9 97d9 s 				JR		Z,moveDValid
97db 97db d 1809
97db 97db s 				JR		moveRValid
97dd 97dd s moveUValid:			
97dd 97dd d cb42
97dd 97dd s 				BIT		upBit,D
97df 97df d c9
97df 97df s 				RET
97e0 97e0 s moveDValid:			
97e0 97e0 d cb4a
97e0 97e0 s 				BIT		downBit,D
97e2 97e2 d c9
97e2 97e2 s 				RET
97e3 97e3 s moveLValid:			
97e3 97e3 d cb52
97e3 97e3 s 				BIT		leftBit,D
97e5 97e5 d c9
97e5 97e5 s 				RET
97e6 97e6 s moveRValid:			
97e6 97e6 d cb5a
97e6 97e6 s 				BIT		rightBit,D
97e8 97e8 f main.asm
97e8 97e8 d c9
97e8 97e8 s 				RET
97e9 97e9 s include	mapLibs.asm	
97e9 97e9 f mapLibs.asm
97e9 97e9 s pathFindDepth   .EQU	30H
97e9 97e9 s 
97e9 97e9 s fruitTicks   	.EQU	0B0H
97e9 97e9 s fruitTimer  	.EQU    8106H       ;Fruit Timer Location
97e9 97e9 s 
97e9 97e9 s fruitX			.EQU	15
97e9 97e9 s fruitY			.EQU	14
97e9 97e9 s 
97e9 97e9 s ;-------- Map -------;
97e9 97e9 s ;InitiMap
97e9 97e9 s initMap:
97e9 97e9 d 3eb0
97e9 97e9 s 				LD		A,fruitTicks
97eb 97eb d 320681
97eb 97eb s 				LD		(fruitTimer),A
97ee 97ee d 010004
97ee 97ee s 				LD		BC,400H
97f1 97f1 d 21c8a1
97f1 97f1 s 				LD		HL,map
97f4 97f4 d 1100e0
97f4 97f4 s 				LD		DE,liveMap
97f7 97f7 d edb0
97f7 97f7 s 				LDIR
97f9 97f9 d c9
97f9 97f9 s 				RET
97fa 97fa s 
97fa 97fa s ;------- Get Map Data ----;
97fa 97fa s ; C - X
97fa 97fa s ; B	- Y
97fa 97fa s getMapAddress:
97fa 97fa d c5
97fa 97fa s 				push	bc
97fb 97fb d cb00
97fb 97fb s 				rlc		b			;Shift b left 5
97fd 97fd d cb00
97fd 97fd s 				rlc		b			;Shift b left 5
97ff 97ff d cb00
97ff 97ff s 				rlc		b			;Shift b left 5
9801 9801 d cb00
9801 9801 s 				rlc		b			;Shift b left 5
9803 9803 d cb00
9803 9803 s 				rlc		b			;Shift b left 5
9805 9805 d 78
9805 9805 s 				ld		a,b
9806 9806 d e6e0
9806 9806 s 				and		11100000b	;Mask lower adress
9808 9808 d b1
9808 9808 s 				or		c			;Combine with C
9809 9809 d 6f
9809 9809 s 				ld		l,a			;A is now low byte of adress
980a 980a d 78
980a 980a s 				ld		a,b
980b 980b d e603
980b 980b s 				and		00000011b	;Mask upper adress
980d 980d d f6e0
980d 980d s 				or		0E0H		;Start of map
980f 980f d 67
980f 980f s 				ld		h,a
9810 9810 d c1
9810 9810 s 				pop		bc
9811 9811 d c9
9811 9811 s 				ret
9812 9812 s 
9812 9812 s checkFruit:
9812 9812 d 3a0681
9812 9812 s 				LD		A,(fruitTimer)
9815 9815 d b7
9815 9815 s 				OR		A
9816 9816 d c8
9816 9816 s 				RET		Z
9817 9817 d 3d
9817 9817 s 				DEC		A
9818 9818 d 320681
9818 9818 s 				LD		(fruitTimer), A
981b 981b d b7
981b 981b s 				OR		A
981c 981c d c0
981c 981c s 				RET		NZ
981d 981d d 0e0f
981d 981d s 				LD		C,fruitX
981f 981f d 060e
981f 981f s 				LD		B,fruitY
9821 9821 d cdfa97
9821 9821 s 				CALL	getMapAddress
9824 9824 d cbfe
9824 9824 s 				SET		sfBit,(HL)
9826 9826 d cd9098
9826 9826 s 				CALL	printMapAt	
9829 9829 d c9
9829 9829 s 				RET
982a 982a s 
982a 982a s ;--------Check map for pellets ------;
982a 982a s checkNextLevel:
982a 982a d cd5098
982a 982a s 				CALL	checkMap
982d 982d d 7b
982d 982d s 				LD		A,E
982e 982e d b7
982e 982e s 				OR		A
982f 982f d c0
982f 982f s 				RET		NZ
9830 9830 d 7a
9830 9830 s 				LD		A,D
9831 9831 d b7
9831 9831 s 				OR		A
9832 9832 d c0
9832 9832 s 				RET		NZ
9833 9833 s 
9833 9833 d 2a0289
9833 9833 s 				LD		HL,(level)
9836 9836 d 23
9836 9836 s 				INC		HL
9837 9837 d 220289
9837 9837 s 				LD		(level),HL
983a 983a d cd689a
983a 983a s 				CALL	countdown
983d 983d d cde997
983d 983d s 				CALL	initMap
9840 9840 d cdf591
9840 9840 s 				CALL	initGhost
9843 9843 d cdba90
9843 9843 s 				CALL	resetPacman
9846 9846 d 21aea1
9846 9846 s 				LD		HL, home		;Go home
9849 9849 d cd29a1
9849 9849 s 				CALL	print
984c 984c d cd9f98
984c 984c s 				CALL 	printMap
984f 984f d c9
984f 984f s 				ret
9850 9850 s 
9850 9850 s checkMap:
9850 9850 d 3e20
9850 9850 s 				ld		a,32
9852 9852 d 47
9852 9852 s 				ld		b,a			; 32 chars per line
9853 9853 d 4f
9853 9853 s 				ld		c,a			; 32 lines per map
9854 9854 d 2100e0
9854 9854 s 				ld		hl,liveMap
9857 9857 d 110000
9857 9857 s 				ld		de,0
985a 985a d 7e
985a 985a s checkMapLoop:	ld		a,(hl)		; get char
985b 985b d cd6b98
985b 985b s 				call	checkMapChar; check the char
985e 985e d 23
985e 985e s 				inc		hl			; next char
985f 985f d 10f9
985f 985f s 				djnz	checkMapLoop; if were not at the end of a line, print next char
9861 9861 d 41
9861 9861 s 				ld		b,c			;are we at the end of a block
9862 9862 d 1001
9862 9862 s 				djnz	checkMapNextLine
9864 9864 d c9
9864 9864 s 				ret
9865 9865 s checkMapNextLine:	
9865 9865 d 48
9865 9865 s 				ld		c,b			;copy decremented b back to c
9866 9866 d 3e20
9866 9866 s 				ld 		a,32		;refill b withj 32
9868 9868 d 47
9868 9868 s 				ld		b,a
9869 9869 d 18ef
9869 9869 s 				jr		checkMapLoop;draw next char
986b 986b s 
986b 986b s checkMapChar:
986b 986b d cb6f
986b 986b s 				bit		pelletBit,a
986d 986d d c47698
986d 986d s 				CALL	NZ,incrementDE
9870 9870 d cb67
9870 9870 s 				bit		powerpBit,a
9872 9872 d c47698
9872 9872 s 				CALL	NZ,incrementDE
9875 9875 d c9
9875 9875 s 				RET
9876 9876 s incrementDE:
9876 9876 d 13
9876 9876 s 				INC		DE
9877 9877 d c9
9877 9877 s 				RET
9878 9878 s 
9878 9878 s ;------- Get Path Find Map Address----;
9878 9878 s ; C - X
9878 9878 s ; B	- Y
9878 9878 s getAddressPF:
9878 9878 d c5
9878 9878 s 				push	bc
9879 9879 d cb00
9879 9879 s 				rlc		b			;Shift b left 5
987b 987b d cb00
987b 987b s 				rlc		b			;Shift b left 5
987d 987d d cb00
987d 987d s 				rlc		b			;Shift b left 5
987f 987f d cb00
987f 987f s 				rlc		b			;Shift b left 5
9881 9881 d cb00
9881 9881 s 				rlc		b			;Shift b left 5
9883 9883 d 78
9883 9883 s 				ld		a,b
9884 9884 d e6e0
9884 9884 s 				and		11100000b	;Mask lower adress
9886 9886 d b1
9886 9886 s 				or		c			;Combine with C
9887 9887 d 6f
9887 9887 s 				ld		l,a			;A is now low byte of adress
9888 9888 d 78
9888 9888 s 				ld		a,b
9889 9889 d e603
9889 9889 s 				and		00000011b	;Mask upper adress
988b 988b d f6d0
988b 988b s 				or		0D0H		;Start of map
988d 988d d 67
988d 988d s 				ld		h,a
988e 988e d c1
988e 988e s 				pop		bc
988f 988f d c9
988f 988f s 				ret
9890 9890 s 
9890 9890 s 
9890 9890 s ;--------- Map print -------- ;
9890 9890 s ; C - X
9890 9890 s ; B	- Y
9890 9890 s printMapAt:	
9890 9890 d c5
9890 9890 s 			PUSH	BC
9891 9891 d 0c
9891 9891 s 			INC		C
9892 9892 d 04
9892 9892 s 			INC		B
9893 9893 d cdb3a0
9893 9893 s 			CALL	moveCursor
9896 9896 d c1
9896 9896 s 			POP 	BC
9897 9897 d cdfa97
9897 9897 s 			CALL	getMapAddress
989a 989a d 7e
989a 989a s 			LD		A,(HL)
989b 989b d cdba98
989b 989b s 			CALL	pmChar
989e 989e d c9
989e 989e s 			RET
989f 989f s 
989f 989f s printMap:
989f 989f d 3e20
989f 989f s 				ld		a,32
98a1 98a1 d 47
98a1 98a1 s 				ld		b,a			; 32 chars per line
98a2 98a2 d 4f
98a2 98a2 s 				ld		c,a			; 32 lines per map
98a3 98a3 d 2100e0
98a3 98a3 s 				ld		hl,liveMap
98a6 98a6 d 7e
98a6 98a6 s pmLoop:			ld		a,(hl)		; get char
98a7 98a7 d cdba98
98a7 98a7 s 				call	pmChar		; decode what to print
98aa 98aa d 23
98aa 98aa s 				inc		hl			; next char
98ab 98ab d 10f9
98ab 98ab s 				djnz	pmLoop		; if were not at the end of a line, print next char
98ad 98ad d cdaaa0
98ad 98ad s 				call	newline		; if we are, print a new line
98b0 98b0 d 41
98b0 98b0 s 				ld		b,c			;are we at the end of a block
98b1 98b1 d 1001
98b1 98b1 s 				djnz	pmNextLine
98b3 98b3 d c9
98b3 98b3 s 				ret
98b4 98b4 s pmNextLine:	
98b4 98b4 d 48
98b4 98b4 s 				ld		c,b			;copy decremented b back to c
98b5 98b5 d 3e20
98b5 98b5 s 				ld 		a,32		;refill b withj 32
98b7 98b7 d 47
98b7 98b7 s 				ld		b,a
98b8 98b8 d 18ec
98b8 98b8 s 				jr		pmLoop		;draw next char
98ba 98ba s 
98ba 98ba s 
98ba 98ba s pmChar:		;-- Print map char a
98ba 98ba d e5
98ba 98ba s 				push	hl
98bb 98bb d cb67
98bb 98bb s 				bit		powerpBit,a
98bd 98bd d 200e
98bd 98bd s 				jr		nz,printPP
98bf 98bf d cb6f
98bf 98bf s 				bit		pelletBit,a
98c1 98c1 d 2012
98c1 98c1 s 				jr		nz,printP
98c3 98c3 d cb77
98c3 98c3 s 				bit		wallBit,a
98c5 98c5 d 2016
98c5 98c5 s 				jr		nz,printWall
98c7 98c7 d cb7f
98c7 98c7 s 				bit		sfBit,a
98c9 98c9 d 201a
98c9 98c9 s 				jr		nz,printSF
98cb 98cb d 1820
98cb 98cb s 				jr	 	printVoid
98cd 98cd s 			
98cd 98cd s printPP:
98cd 98cd d 218ba1
98cd 98cd s 				ld		hl,powerPellet
98d0 98d0 d cd29a1
98d0 98d0 s 				call	print
98d3 98d3 d 1820
98d3 98d3 s 				jr		pmCharRet
98d5 98d5 s printP:
98d5 98d5 d 2196a1
98d5 98d5 s 				ld		hl,pellet
98d8 98d8 d cd29a1
98d8 98d8 s 				call	print
98db 98db d 1818
98db 98db s 				jr		pmCharRet
98dd 98dd s printWall:
98dd 98dd d 2180a1
98dd 98dd s 				ld		hl,wall
98e0 98e0 d cd29a1
98e0 98e0 s 				call	print
98e3 98e3 d 1810
98e3 98e3 s 				jr		pmCharRet
98e5 98e5 s printSF:
98e5 98e5 d 21a1a1
98e5 98e5 s 				ld		hl,superFruit
98e8 98e8 d cd29a1
98e8 98e8 s 				call	print
98eb 98eb d 1808
98eb 98eb s 				jr		pmCharRet
98ed 98ed s printVoid:
98ed 98ed d 21aca1
98ed 98ed s 				ld		hl,void
98f0 98f0 d cd29a1
98f0 98f0 s 				call	print
98f3 98f3 d 1800
98f3 98f3 s 				jr		pmCharRet
98f5 98f5 s pmCharRet:	
98f5 98f5 d e1
98f5 98f5 s 				pop 	hl
98f6 98f6 d c9
98f6 98f6 s 				ret
98f7 98f7 s 				
98f7 98f7 s ;-------- Path Find Map -------;
98f7 98f7 s ;Initi Path Find Map
98f7 98f7 s initPathFind:
98f7 98f7 d 3e20
98f7 98f7 s 				ld		a,32
98f9 98f9 d 47
98f9 98f9 s 				ld		b,a			; 32 chars per line
98fa 98fa d 4f
98fa 98fa s 				ld		c,a			; 32 lines per map
98fb 98fb d 2100d0
98fb 98fb s 				ld		hl,pathFindMap
98fe 98fe d 16ff
98fe 98fe s initpPFLoop:	ld		D,0FFH		; set char
9900 9900 d 72
9900 9900 s 				LD		(HL),D
9901 9901 d 23
9901 9901 s 				inc		hl			; next char
9902 9902 d 10fa
9902 9902 s 				djnz	initpPFLoop		; if were not at the end of a line, print next char
9904 9904 d 41
9904 9904 s 				ld		b,c			;are we at the end of a block
9905 9905 d 1001
9905 9905 s 				djnz	pfNextRow
9907 9907 d c9
9907 9907 s 				ret
9908 9908 s pfNextRow:	
9908 9908 d 48
9908 9908 s 				ld		c,b			;copy decremented b back to c
9909 9909 d 3e20
9909 9909 s 				ld 		a,32		;refill b withj 32
990b 990b d 47
990b 990b s 				ld		b,a
990c 990c d c3fe98
990c 990c s 				jp		initpPFLoop		;draw next char
990f 990f s 
990f 990f s ;Calculate Map
990f 990f s calculatePathMap:
990f 990f d 01ffff
990f 990f s 				ld		BC,0FFFFH		;Push Stack terminator		
9912 9912 d c5
9912 9912 s 				PUSH	BC
9913 9913 d 3a0081
9913 9913 s 				LD		A, (pacx)		;Push X to stack
9916 9916 d 4f
9916 9916 s 				LD		C,A
9917 9917 d 3a0181
9917 9917 s 				LD		A, (pacy)		;Push Y to stack
991a 991a d 47
991a 991a s 				LD		B,A
991b 991b d cd7898
991b 991b s 				CALL	getAddressPF
991e 991e d 3600
991e 991e s 				LD		(HL),00H
9920 9920 d c5
9920 9920 s 				PUSH	BC
9921 9921 s calculatePathMapLoop:
9921 9921 d c1
9921 9921 s 				POP		BC			;Get node to visit
9922 9922 d 78
9922 9922 s 				LD		A,B			;Check Its not FFFF
9923 9923 d b7
9923 9923 s 				OR		A
9924 9924 d feff
9924 9924 s 				CP		0FFH
9926 9926 d c8
9926 9926 s 				RET		Z			;We only have to check half the byte as its imposable to have a cord more than 20h
9927 9927 d ed43f289
9927 9927 s 				LD		(originalBC),BC
992b 992b d cd7898
992b 992b s 				CALL	getAddressPF
992e 992e d 7e
992e 992e s 				LD		A,(HL)
992f 992f d 3c
992f 992f s 				INC		A
9930 9930 d fe30
9930 9930 s                 CP      pathFindDepth
9932 9932 d ca2199
9932 9932 s 				JP 		Z,calculatePathMapLoop	;Skip if wer getting too long
9935 9935 d 5f
9935 9935 s 				LD		E,A			;Keep the distance were working with safe
9936 9936 d cdfa97
9936 9936 s 				CALL	getMapAddress
9939 9939 d 56
9939 9939 s 				LD		D,(HL)
993a 993a d 3e57
993a 993a s 				LD		A,	'W'			;check up
993c 993c d cdcf97
993c 993c s 				CALL	isMoveValid
993f 993f d c45d99
993f 993f s 				CALL	NZ,calculateMapU
9942 9942 d 3e53
9942 9942 s 				LD		A,	'S'			;down
9944 9944 d cdcf97
9944 9944 s 				CALL	isMoveValid
9947 9947 d c46999
9947 9947 s 				CALL	NZ,calculateMapD
994a 994a d 3e41
994a 994a s 				LD		A,	'A'			;left
994c 994c d cdcf97
994c 994c s 				CALL	isMoveValid
994f 994f d c47599
994f 994f s 				CALL	NZ,calculateMapL
9952 9952 d 3e44
9952 9952 s 				LD		A,	'D'			;right
9954 9954 d cdcf97
9954 9954 s 				CALL	isMoveValid
9957 9957 d c48199
9957 9957 s 				CALL	NZ,calculateMapR
995a 995a d c32199
995a 995a s 				JP		calculatePathMapLoop
995d 995d s 				
995d 995d s calculateMapU:	
995d 995d d ed4bf289
995d 995d s 				LD		BC,(originalBC)			;We want to preserve the OG BC Through this process so it can be used again in sub directions		
9961 9961 d 78
9961 9961 s 				LD		A, B				;Make modifications to corod
9962 9962 d 3d
9962 9962 s 				DEC		A
9963 9963 d e61f
9963 9963 s 				AND		00011111B			;Mask for looping
9965 9965 d 47
9965 9965 s 				LD		B,A
9966 9966 d c38d99
9966 9966 s 				JP		calculateMapCell
9969 9969 s calculateMapD:	
9969 9969 d ed4bf289
9969 9969 s 				LD		BC,(originalBC)	
996d 996d d 78
996d 996d s 				LD		A, B
996e 996e d 3c
996e 996e s 				INC		A
996f 996f d e61f
996f 996f s 				AND		00011111B
9971 9971 d 47
9971 9971 s 				LD		B,A
9972 9972 d c38d99
9972 9972 s 				JP		calculateMapCell
9975 9975 s calculateMapL:	
9975 9975 d ed4bf289
9975 9975 s 				LD		BC,(originalBC)
9979 9979 d 79
9979 9979 s 				LD		A, C
997a 997a d 3d
997a 997a s 				DEC		A
997b 997b d e61f
997b 997b s 				AND		00011111B
997d 997d d 4f
997d 997d s 				LD		C,A
997e 997e d c38d99
997e 997e s 				JP		calculateMapCell
9981 9981 s calculateMapR:
9981 9981 d ed4bf289
9981 9981 s 				LD		BC,(originalBC)
9985 9985 d 79
9985 9985 s 				LD		A, C
9986 9986 d 3c
9986 9986 s 				INC		A
9987 9987 d e61f
9987 9987 s 				AND		00011111B
9989 9989 d 4f
9989 9989 s 				LD		C,A
998a 998a d c38d99
998a 998a s 				JP		calculateMapCell
998d 998d s 
998d 998d s calculateMapCell:
998d 998d d cd7898
998d 998d s 				CALL	getAddressPF
9990 9990 d 7e
9990 9990 s 				LD		A,(HL)
9991 9991 s 
9991 9991 d bb
9991 9991 s 				CP		E			;Compare current data (A) with E (the path were looking at)
9992 9992 d d8
9992 9992 s 				RET		C			;If carry is set (A < E)(whats there already < our path) then this route is a dud
9993 9993 d c8
9993 9993 s 				RET		Z			;If its equal we dont want to continue as we alreay have an equally fast route
9994 9994 d 73
9994 9994 s 				LD		(HL),E
9995 9995 d e1
9995 9995 s 				POP		HL			;We need the return adress on the top of the stack
9996 9996 d c5
9996 9996 s 				PUSH	BC			;Push Cell so it can be visited
9997 9997 d e5
9997 9997 s 				PUSH	HL
9998 9998 d c9
9998 9998 s 				RET
9999 9999 s 
9999 9999 s printPFMap:
9999 9999 d 0e01
9999 9999 s                 LD		C, $01
999b 999b d 061a
999b 999b s 				LD		B, $1A
999d 999d d cdb3a0
999d 999d s 				CALL	moveCursor
99a0 99a0 d 3e20
99a0 99a0 s 				ld		a,32
99a2 99a2 d 47
99a2 99a2 s 				ld		b,a			; 32 chars per line
99a3 99a3 d 3e1a
99a3 99a3 s                 ld		a,$1A
99a5 99a5 d 4f
99a5 99a5 s 				ld		c,a			; 32 lines per map
99a6 99a6 d 2100d0
99a6 99a6 s 				ld		hl,pathFindMap
99a9 99a9 d 7e
99a9 99a9 s pmPFLoop:		ld		a,(hl)		; get char
99aa 99aa d feff
99aa 99aa s                 cp      0FFH
99ac 99ac d cac599
99ac 99ac s                 JP      Z,pmPFSkip
99af 99af d cdf9a0
99af 99af s 				call	NumToHex	; decode what to print
99b2 99b2 d 3e20
99b2 99b2 s pmPFAfterSkip:  ld      a,' '
99b4 99b4 d cf
99b4 99b4 s                 rst     08H
99b5 99b5 d 23
99b5 99b5 s 				inc		hl			; next char
99b6 99b6 d 10f1
99b6 99b6 s 				djnz	pmPFLoop		; if were not at the end of a line, print next char
99b8 99b8 d cdaaa0
99b8 99b8 s 				call	newline		; if we are, print a new line
99bb 99bb d 41
99bb 99bb s 				ld		b,c			;are we at the end of a block
99bc 99bc d 1001
99bc 99bc s 				djnz	pmPFNextLine
99be 99be d c9
99be 99be s 				ret
99bf 99bf s pmPFNextLine:	
99bf 99bf d 48
99bf 99bf s 				ld		c,b			;copy decremented b back to c
99c0 99c0 d 3e20
99c0 99c0 s 				ld 		a,32		;refill b withj 32
99c2 99c2 d 47
99c2 99c2 s 				ld		b,a
99c3 99c3 d 18e4
99c3 99c3 s 				jr		pmPFLoop	;draw next char
99c5 99c5 s pmPFSkip:       
99c5 99c5 d 3e20
99c5 99c5 s                 ld      a,' '
99c7 99c7 d cf
99c7 99c7 s                 rst     08H
99c8 99c8 d 3e20
99c8 99c8 s                 ld      a,' '
99ca 99ca d cf
99ca 99ca s                 rst     08H
99cb 99cb f main.asm
99cb 99cb d c3b299
99cb 99cb s                 JP      pmPFAfterSkip
99ce 99ce s 
99ce 99ce s ;------HUD;
99ce 99ce s include hud.asm
99ce 99ce f hud.asm
99ce 99ce s score			.EQU	8900H		;Score
99ce 99ce s level			.EQU	8902H		;Score
99ce 99ce s fruits			.EQU	8904H		;Score
99ce 99ce s 
99ce 99ce s printHud:
99ce 99ce d cddb99
99ce 99ce s 				CALL	printScore
99d1 99d1 d cd039a
99d1 99d1 s 				CALL	printLives
99d4 99d4 d cdef99
99d4 99d4 s 				CALL	printLevel
99d7 99d7 d cd289a
99d7 99d7 s 				CALL	printFruit
99da 99da d c9
99da 99da s 				RET
99db 99db s ;Hud elements
99db 99db s printScore:					
99db 99db d 0e03
99db 99db s 				LD		C, $03
99dd 99dd d 0619
99dd 99dd s 				LD		B, $19
99df 99df d cdb3a0
99df 99df s 				CALL	moveCursor
99e2 99e2 d 21449a
99e2 99e2 s 				LD		HL, scoreHUD
99e5 99e5 d cd29a1
99e5 99e5 s 				CALL 	print
99e8 99e8 d 2a0089
99e8 99e8 s 				LD		HL, (score)
99eb 99eb d cdcea0
99eb 99eb s 				CALL	HLToDec
99ee 99ee d c9
99ee 99ee s 				RET
99ef 99ef s printLevel:					
99ef 99ef d 0e03
99ef 99ef s 				LD		C, $03
99f1 99f1 d 061a
99f1 99f1 s 				LD		B, $1A
99f3 99f3 d cdb3a0
99f3 99f3 s 				CALL	moveCursor
99f6 99f6 d 214c9a
99f6 99f6 s 				LD		HL, levelHUD
99f9 99f9 d cd29a1
99f9 99f9 s 				CALL 	print
99fc 99fc d 2a0289
99fc 99fc s 				LD		HL, (level)
99ff 99ff d cdcea0
99ff 99ff s 				CALL	HLToDec
9a02 9a02 d c9
9a02 9a02 s 				RET
9a03 9a03 s 
9a03 9a03 s printLives:					
9a03 9a03 d 0e03
9a03 9a03 s 				LD		C, $03
9a05 9a05 d 061b
9a05 9a05 s 				LD		B, $1B
9a07 9a07 d cdb3a0
9a07 9a07 s 				CALL	moveCursor
9a0a 9a0a d 21549a
9a0a 9a0a s 				LD		HL, livesHUD
9a0d 9a0d d cd29a1
9a0d 9a0d s 				CALL 	print
9a10 9a10 d 3a0581
9a10 9a10 s 				LD 		A,(pacLives)
9a13 9a13 d 3d
9a13 9a13 s 				DEC		A
9a14 9a14 d b7
9a14 9a14 s 				OR		A
9a15 9a15 d ca219a
9a15 9a15 s 				JP		Z,removeOldLives
9a18 9a18 d 47
9a18 9a18 s 				LD		B,A
9a19 9a19 d 21b691
9a19 9a19 s printLivesLoop:	LD		HL, pacman
9a1c 9a1c d cd29a1
9a1c 9a1c s 				CALL 	print
9a1f 9a1f d 10f8
9a1f 9a1f s 				DJNZ	printLivesLoop
9a21 9a21 d 21649a
9a21 9a21 s removeOldLives:	LD		HL, liveBlanking
9a24 9a24 d cd29a1
9a24 9a24 s 				CALL 	print
9a27 9a27 d c9
9a27 9a27 s 				RET
9a28 9a28 s 
9a28 9a28 s printFruit:					
9a28 9a28 d 0e03
9a28 9a28 s 				LD		C, $03
9a2a 9a2a d 061c
9a2a 9a2a s 				LD		B, $1C
9a2c 9a2c d cdb3a0
9a2c 9a2c s 				CALL	moveCursor
9a2f 9a2f d 215c9a
9a2f 9a2f s 				LD		HL, fruitHud
9a32 9a32 d cd29a1
9a32 9a32 s 				CALL 	print
9a35 9a35 d 3a0489
9a35 9a35 s 				LD 		A,(fruits)
9a38 9a38 d b7
9a38 9a38 s 				OR		A
9a39 9a39 d c8
9a39 9a39 s 				RET		Z
9a3a 9a3a d 47
9a3a 9a3a s 				LD		B,A
9a3b 9a3b d 21a1a1
9a3b 9a3b s printFruitLoop:	LD		HL, superFruit
9a3e 9a3e d cd29a1
9a3e 9a3e s 				CALL 	print
9a41 9a41 d 10f8
9a41 9a41 s 				DJNZ	printFruitLoop
9a43 9a43 d c9
9a43 9a43 s 				RET
9a44 9a44 s 
9a44 9a44 d 53636f72653a2000
9a44 9a44 s scoreHUD:     	.BYTE "Score: ",0
9a4c 9a4c d 4c6576656c3a2000
9a4c 9a4c s levelHUD:     	.BYTE "Level: ",0
9a54 9a54 d 4c697665733a2000
9a54 9a54 s livesHUD:     	.BYTE "Lives: ",0
9a5c 9a5c d 46727569743a2000
9a5c 9a5c s fruitHud:     	.BYTE "Fruit: ",0
9a64 9a64 s 
9a64 9a64 f main.asm
9a64 9a64 d 20202000
9a64 9a64 s liveBlanking	.BYTE "   ",0
9a68 9a68 s 
9a68 9a68 s include countdown.asm
9a68 9a68 f countdown.asm
9a68 9a68 s countdown:
9a68 9a68 d 010503
9a68 9a68 s             LD      BC ,0305H
9a6b 9a6b d 111218
9a6b 9a6b s 			LD		DE ,1812H 
9a6e 9a6e d cd44a1
9a6e 9a6e s 			CALL	DrawBox
9a71 9a71 d 010704
9a71 9a71 s             LD      BC ,0407H
9a74 9a74 d 218c9d
9a74 9a74 s             LD      HL,number3
9a77 9a77 d cd34a1
9a77 9a77 s             CALL    printAtPos
9a7a 9a7a d 01ffff
9a7a 9a7a s             LD      BC, 0FFFFH
9a7d 9a7d d cd77a1
9a7d 9a7d s             CALL    delay
9a80 9a80 d cd77a1
9a80 9a80 s             CALL    delay
9a83 9a83 d cd77a1
9a83 9a83 s             CALL    delay
9a86 9a86 d cd77a1
9a86 9a86 s             CALL    delay
9a89 9a89 d 010704
9a89 9a89 s             LD      BC ,0407H
9a8c 9a8c d 21239c
9a8c 9a8c s             LD      HL,number2
9a8f 9a8f d cd34a1
9a8f 9a8f s             CALL    printAtPos
9a92 9a92 d 01ffff
9a92 9a92 s             LD      BC, 0FFFFH
9a95 9a95 d cd77a1
9a95 9a95 s             CALL    delay
9a98 9a98 d cd77a1
9a98 9a98 s             CALL    delay
9a9b 9a9b d cd77a1
9a9b 9a9b s             CALL    delay
9a9e 9a9e d cd77a1
9a9e 9a9e s             CALL    delay
9aa1 9aa1 d 21ba9a
9aa1 9aa1 s             LD      HL,number1
9aa4 9aa4 d 010704
9aa4 9aa4 s             LD      BC ,0407H
9aa7 9aa7 d cd34a1
9aa7 9aa7 s             CALL    printAtPos
9aaa 9aaa d 01ffff
9aaa 9aaa s             LD      BC, 0FFFFH
9aad 9aad d cd77a1
9aad 9aad s             CALL    delay
9ab0 9ab0 d cd77a1
9ab0 9ab0 s             CALL    delay
9ab3 9ab3 d cd77a1
9ab3 9ab3 s             CALL    delay
9ab6 9ab6 d cd77a1
9ab6 9ab6 s             CALL    delay
9ab9 9ab9 d c9
9ab9 9ab9 s             RET
9aba 9aba s 
9aba 9aba s ;Font 'doh'
9aba 9aba d 1b5b39336d20202020202031313131313131202020202020200001
9aba 9aba s number1:            .BYTE   1BH,"[93m      1111111       ",0,1
9ad5 9ad5 d 2020202020313a3a3a3a3a3a31202020202020200001
9ad5 9ad5 s                     .BYTE           "     1::::::1       ",0,1
9aeb 9aeb d 20202020313a3a3a3a3a3a3a31202020202020200001
9aeb 9aeb s                     .BYTE           "    1:::::::1       ",0,1
9b01 9b01 d 202020203131313a3a3a3a3a31202020202020200001
9b01 9b01 s                     .BYTE           "    111:::::1       ",0,1
9b17 9b17 d 20202020202020313a3a3a3a31202020202020200001
9b17 9b17 s                     .BYTE           "       1::::1       ",0,1
9b2d 9b2d d 20202020202020313a3a3a3a31202020202020200001
9b2d 9b2d s                     .BYTE           "       1::::1       ",0,1
9b43 9b43 d 20202020202020313a3a3a3a31202020202020200001
9b43 9b43 s                     .BYTE           "       1::::1       ",0,1
9b59 9b59 d 20202020202020313a3a3a3a6c202020202020200001
9b59 9b59 s                     .BYTE           "       1::::l       ",0,1
9b6f 9b6f d 20202020202020313a3a3a3a6c202020202020200001
9b6f 9b6f s                     .BYTE           "       1::::l       ",0,1
9b85 9b85 d 20202020202020313a3a3a3a6c202020202020200001
9b85 9b85 s                     .BYTE           "       1::::l       ",0,1
9b9b 9b9b d 20202020202020313a3a3a3a6c202020202020200001
9b9b 9b9b s                     .BYTE           "       1::::l       ",0,1
9bb1 9bb1 d 20202020202020313a3a3a3a6c202020202020200001
9bb1 9bb1 s                     .BYTE           "       1::::l       ",0,1
9bc7 9bc7 d 202020203131313a3a3a3a3a3a313131202020200001
9bc7 9bc7 s                     .BYTE           "    111::::::111    ",0,1
9bdd 9bdd d 20202020313a3a3a3a3a3a3a3a3a3a31202020200001
9bdd 9bdd s                     .BYTE           "    1::::::::::1    ",0,1
9bf3 9bf3 d 20202020313a3a3a3a3a3a3a3a3a3a31202020200001
9bf3 9bf3 s                     .BYTE           "    1::::::::::1    ",0,1
9c09 9c09 d 20202020313131313131313131313131202020201b5b306d0000
9c09 9c09 s                     .BYTE           "    111111111111    ", 1BH,"[0m",0,0
9c23 9c23 s 
9c23 9c23 d 1b5b39336d20323232323232323232323232323232202020200001
9c23 9c23 s number2:            .BYTE   1BH,"[93m 222222222222222    ",0,1
9c3e 9c3e d 323a3a3a3a3a3a3a3a3a3a3a3a3a3a3a323220200001
9c3e 9c3e s                     .BYTE           "2:::::::::::::::22  ",0,1
9c54 9c54 d 323a3a3a3a3a3a3232323232323a3a3a3a3a32200001
9c54 9c54 s                     .BYTE           "2::::::222222:::::2 ",0,1
9c6a 9c6a d 323232323232322020202020323a3a3a3a3a32200001
9c6a 9c6a s                     .BYTE           "2222222     2:::::2 ",0,1
9c80 9c80 d 202020202020202020202020323a3a3a3a3a32200001
9c80 9c80 s                     .BYTE           "            2:::::2 ",0,1
9c96 9c96 d 202020202020202020202020323a3a3a3a3a32200001
9c96 9c96 s                     .BYTE           "            2:::::2 ",0,1
9cac 9cac d 202020202020202020323232323a3a3a3a3220200001
9cac 9cac s                     .BYTE           "         2222::::2  ",0,1
9cc2 9cc2 d 2020202032323232323a3a3a3a3a3a32322020200001
9cc2 9cc2 s                     .BYTE           "    22222::::::22   ",0,1
9cd8 9cd8 d 202032323a3a3a3a3a3a3a3a32323220202020200001
9cd8 9cd8 s                     .BYTE           "  22::::::::222     ",0,1
9cee 9cee d 20323a3a3a3a3a323232323220202020202020200001
9cee 9cee s                     .BYTE           " 2:::::22222        ",0,1
9d04 9d04 d 323a3a3a3a3a32202020202020202020202020200001
9d04 9d04 s                     .BYTE           "2:::::2             ",0,1
9d1a 9d1a d 323a3a3a3a3a32202020202020202020202020200001
9d1a 9d1a s                     .BYTE           "2:::::2             ",0,1
9d30 9d30 d 323a3a3a3a3a32202020202020203232323232320001
9d30 9d30 s                     .BYTE           "2:::::2       222222",0,1
9d46 9d46 d 323a3a3a3a3a3a323232323232323a3a3a3a3a320001
9d46 9d46 s                     .BYTE           "2::::::2222222:::::2",0,1
9d5c 9d5c d 323a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a320001
9d5c 9d5c s                     .BYTE           "2::::::::::::::::::2",0,1
9d72 9d72 d 32323232323232323232323232323232323232321b5b306d0000
9d72 9d72 s                     .BYTE           "22222222222222222222", 1BH,"[0m",0,0
9d8c 9d8c s 
9d8c 9d8c d 1b5b39336d20203333333333333333333333333333332020200001
9d8c 9d8c s number3:            .BYTE   1BH,"[93m  333333333333333   ",0,1
9da7 9da7 d 20333a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3333200001
9da7 9da7 s                     .BYTE           " 3:::::::::::::::33 ",0,1
9dbd 9dbd d 20333a3a3a3a3a3a33333333333a3a3a3a3a3a330001
9dbd 9dbd s                     .BYTE           " 3::::::33333::::::3",0,1
9dd3 9dd3 d 20333333333333332020202020333a3a3a3a3a330001
9dd3 9dd3 s                     .BYTE           " 3333333     3:::::3",0,1
9de9 9de9 d 20202020202020202020202020333a3a3a3a3a330001
9de9 9de9 s                     .BYTE           "             3:::::3",0,1
9dff 9dff d 20202020202020202020202020333a3a3a3a3a330001
9dff 9dff s                     .BYTE           "             3:::::3",0,1
9e15 9e15 d 202020202033333333333333333a3a3a3a3a33200001
9e15 9e15 s                     .BYTE           "     33333333:::::3 ",0,1
9e2b 9e2b d 2020202020333a3a3a3a3a3a3a3a3a3a3a3320200001
9e2b 9e2b s                     .BYTE           "     3:::::::::::3  ",0,1
9e41 9e41 d 202020202033333333333333333a3a3a3a3a33200001
9e41 9e41 s                     .BYTE           "     33333333:::::3 ",0,1
9e57 9e57 d 20202020202020202020202020333a3a3a3a3a330001
9e57 9e57 s                     .BYTE           "             3:::::3",0,1
9e6d 9e6d d 20202020202020202020202020333a3a3a3a3a330001
9e6d 9e6d s                     .BYTE           "             3:::::3",0,1
9e83 9e83 d 20202020202020202020202020333a3a3a3a3a330001
9e83 9e83 s                     .BYTE           "             3:::::3",0,1
9e99 9e99 d 20333333333333332020202020333a3a3a3a3a330001
9e99 9e99 s                     .BYTE           " 3333333     3:::::3",0,1
9eaf 9eaf d 20333a3a3a3a3a3a33333333333a3a3a3a3a3a330001
9eaf 9eaf s                     .BYTE           " 3::::::33333::::::3",0,1
9ec5 9ec5 d 20333a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3333200001
9ec5 9ec5 s                     .BYTE           " 3:::::::::::::::33 ",0,1
9edb 9edb f main.asm
9edb 9edb d 20203333333333333333333333333333332020201b5b306d0000
9edb 9edb s                     .BYTE           "  333333333333333   ", 1BH,"[0m",0,0
9ef5 9ef5 s include titlescreen.asm
9ef5 9ef5 f titlescreen.asm
9ef5 9ef5 s displayTitleScreen:
9ef5 9ef5 d 010603
9ef5 9ef5 s                 LD      BC ,0306H
9ef8 9ef8 d 111416
9ef8 9ef8 s 			    LD		DE ,1614H 
9efb 9efb d cd44a1
9efb 9efb s 			    CALL	DrawBox
9efe 9efe d 010804
9efe 9efe s                 LD      BC ,0408H
9f01 9f01 d 21399f
9f01 9f01 s                 LD      HL,logo
9f04 9f04 d cd34a1
9f04 9f04 s                 CALL    printAtPos
9f07 9f07 d 010809
9f07 9f07 s                 LD      BC ,0908H
9f0a 9f0a d 21c99f
9f0a 9f0a s                 LD      HL,info
9f0d 9f0d d cd34a1
9f0d 9f0d s                 CALL    printAtPos
9f10 9f10 d 01080d
9f10 9f10 s                 LD      BC ,0D08H
9f13 9f13 d 21dd9f
9f13 9f13 s                 LD      HL,message
9f16 9f16 d cd34a1
9f16 9f16 s                 CALL    printAtPos
9f19 9f19 d 010a0f
9f19 9f19 s                 LD      BC ,0F0AH
9f1c 9f1c d 21f19f
9f1c 9f1c s                 LD      HL,startGameMessage
9f1f 9f1f d cd34a1
9f1f 9f1f s                 CALL    printAtPos
9f22 9f22 d 010810
9f22 9f22 s                 LD      BC ,1008H
9f25 9f25 d 2101a0
9f25 9f25 s                 LD      HL,exitMessage
9f28 9f28 d cd34a1
9f28 9f28 s                 CALL    printAtPos
9f2b 9f2b s titleScreenWaitForInput:
9f2b 9f2b d d7
9f2b 9f2b s                 RST		10H
9f2c 9f2c d fe31
9f2c 9f2c s                 CP      '1'
9f2e 9f2e d ca1c90
9f2e 9f2e s                 JP      Z,startGame
9f31 9f31 d fe32
9f31 9f31 s                 CP      '2'
9f33 9f33 d ca7f90
9f33 9f33 s                 JP      Z,quit                     
9f36 9f36 d c32b9f
9f36 9f36 s                 JP      titleScreenWaitForInput
9f39 9f39 s 
9f39 9f39 s ;font graceful
9f39 9f39 s logo:
9f39 9f39 d 1b5b39316d205f5f5f5f201b5b39366d205f20205f2020201b5b33336d5f5f5f200001
9f39 9f39 s                     .BYTE   1BH,"[91m ____ ",1BH,"[96m _  _   ",1BH,"[33m___ ",0,1
9f5c 9f5c d 1b5b39316d2820205f205c1b5b39366d2f202928205c201b5b33336d2f205f5f290001
9f5c 9f5c s                     .BYTE   1BH,"[91m(  _ \",1BH,"[96m/ )( \ ",1BH,"[33m/ __)",0,1
9f7f 9f7f d 1b5b39316d2029205f5f2f1b5b39366d29205c2f20281b5b33336d2820285f5f200001
9f7f 9f7f s                     .BYTE   1BH,"[91m ) __/",1BH,"[96m) \/ (",1BH,"[33m( (__ ",0,1
9fa2 9fa2 d 1b5b39316d285f5f2920201b5b39366d5c5f5f5f5f2f201b5b33336d5c5f5f5f291b5b306d0000
9fa2 9fa2 s                     .BYTE   1BH,"[91m(__)  ",1BH,"[96m\____/ ",1BH,"[33m\___)", 1BH,"[0m",0,0
9fc9 9fc9 s 
9fc9 9fc9 d 6279204a616d6573204272617920323032300000
9fc9 9fc9 s info:               .BYTE  "by James Bray 2020",0,0
9fdd 9fdd s 
9fdd 9fdd d 5072657373206b657920746f2073746172740000
9fdd 9fdd s message:           .BYTE   "Press key to start",0,0
9ff1 9ff1 d 2831292053746172742047616d650000
9ff1 9ff1 s startGameMessage:  .BYTE   "(1) Start Game",0,0
a001 a001 f main.asm
a001 a001 d 283229204578697420746f2050726f6d70740000
a001 a001 s exitMessage:       .BYTE   "(2) Exit to Prompt",0,0
a015 a015 s include gameOver.asm
a015 a015 f gameOver.asm
a015 a015 s displayGameOver:
a015 a015 d 010406
a015 a015 s                 LD      BC ,0604H
a018 a018 d 110a1a
a018 a018 s 			    LD		DE ,1A0AH 
a01b a01b d cd44a1
a01b a01b s 			    CALL	DrawBox
a01e a01e d 010507
a01e a01e s                 LD      BC ,0705H
a021 a021 d 2139a0
a021 a021 s                 LD      HL,deathMessage1
a024 a024 d cd34a1
a024 a024 s                 CALL    printAtPos
a027 a027 d 01050d
a027 a027 s                 LD      BC ,0D05H
a02a a02a d 2190a0
a02a a02a s                 LD      HL,deathMessage2
a02d a02d d cd34a1
a02d a02d s                 CALL    printAtPos
a030 a030 s gameOverwaitForInput:
a030 a030 d d7
a030 a030 s                 RST		10H
a031 a031 d fe20
a031 a031 s                 CP      ' '
a033 a033 d ca0790
a033 a033 s                 JP      Z,gameTop                    
a036 a036 d c330a0
a036 a036 s                 JP      gameOverwaitForInput
a039 a039 s 
a039 a039 s deathMessage1:
a039 a039 d 1b5b39316d205f5f202020202020202020205f202020202020202020200001
a039 a039 s                     .BYTE    1BH,"[91m __          _          ",0,1
a058 a058 d 2f5f5f205f205f5f20205f202f205c202020205f20205f5f0001
a058 a058 s                     .BYTE            "/__ _ __  _ / \    _  __",0,1
a072 a072 d 5c5f7c285f7c7c7c7c282f5f5c5f2f5c5f2f282f5f207c201b5b306d0000
a072 a072 s                     .BYTE            "\_|(_||||(/_\_/\_/(/_ | ",1BH,"[0m",0,0
a090 a090 s 
a090 a090 f main.asm
a090 a090 d 507265737320537061636520746f20636f6e74696e7565210000
a090 a090 s deathMessage2:      .BYTE    "Press Space to continue!",0,0
a0aa a0aa s 
a0aa a0aa s ;------- Libs ------------;
a0aa a0aa s include libs.asm
a0aa a0aa f libs.asm
a0aa a0aa s seed			.EQU	8888H		;Random seed
a0aa a0aa s 
a0aa a0aa s newline:			
a0aa a0aa d f5
a0aa a0aa s 				push 	af
a0ab a0ab d 3e0d
a0ab a0ab s 				ld		a, CR
a0ad a0ad d cf
a0ad a0ad s 				rst 	08H
a0ae a0ae d 3e0a
a0ae a0ae s 				ld		a, LF
a0b0 a0b0 d cf
a0b0 a0b0 s 				rst 	08H
a0b1 a0b1 d f1
a0b1 a0b1 s 				pop 	af
a0b2 a0b2 d c9
a0b2 a0b2 s 				ret
a0b3 a0b3 s 			
a0b3 a0b3 s ;move cursor to (C,B)				
a0b3 a0b3 s moveCursor:		
a0b3 a0b3 d e5
a0b3 a0b3 s 				PUSH	HL
a0b4 a0b4 d 3e1b
a0b4 a0b4 s 				LD		A,$1B
a0b6 a0b6 d cf
a0b6 a0b6 s 				RST     08H
a0b7 a0b7 d 3e5b
a0b7 a0b7 s 				LD		A,'['
a0b9 a0b9 d cf
a0b9 a0b9 s 				RST     08H
a0ba a0ba d 68
a0ba a0ba s 				LD		L,B
a0bb a0bb d 2600
a0bb a0bb s 				LD		H,0
a0bd a0bd d cdcea0
a0bd a0bd s 				CALL	HLToDec
a0c0 a0c0 d 3e3b
a0c0 a0c0 s 				LD		A,$3B
a0c2 a0c2 d cf
a0c2 a0c2 s 				RST     08H
a0c3 a0c3 d 69
a0c3 a0c3 s 				LD		L,C
a0c4 a0c4 d 2600
a0c4 a0c4 s 				LD		H,0
a0c6 a0c6 d cdcea0
a0c6 a0c6 s 				CALL	HLToDec
a0c9 a0c9 d 3e66
a0c9 a0c9 s 				LD		A,'f'
a0cb a0cb d cf
a0cb a0cb s 				RST     08H
a0cc a0cc d e1
a0cc a0cc s 				POP		HL
a0cd a0cd d c9
a0cd a0cd s 				RET
a0ce a0ce s 
a0ce a0ce s ;Prints	hl as decimal			
a0ce a0ce s HLToDec:
a0ce a0ce d f5
a0ce a0ce s 				PUSH	AF
a0cf a0cf d c5
a0cf a0cf s 				PUSH	BC
a0d0 a0d0 d cdd6a0
a0d0 a0d0 s 				CALL	DispHL
a0d3 a0d3 d c1
a0d3 a0d3 s 				POP		BC
a0d4 a0d4 d f1
a0d4 a0d4 s 				POP		AF
a0d5 a0d5 d c9
a0d5 a0d5 s 				RET
a0d6 a0d6 s DispHL:
a0d6 a0d6 d 01f0d8
a0d6 a0d6 s 				ld		bc,-10000
a0d9 a0d9 d cdefa0
a0d9 a0d9 s 				call	Num1
a0dc a0dc d 0118fc
a0dc a0dc s 				ld		bc,-1000
a0df a0df d cdefa0
a0df a0df s 				call	Num1
a0e2 a0e2 d 019cff
a0e2 a0e2 s 				ld		bc,-100
a0e5 a0e5 d cdefa0
a0e5 a0e5 s 				call	Num1
a0e8 a0e8 d 0ef6
a0e8 a0e8 s 				ld		c,-10
a0ea a0ea d cdefa0
a0ea a0ea s 				call	Num1
a0ed a0ed d 0eff
a0ed a0ed s 				ld		c,-1
a0ef a0ef d 3e2f
a0ef a0ef s Num1:			ld		a,'0'-1
a0f1 a0f1 d 3c
a0f1 a0f1 s Num2:			inc		a
a0f2 a0f2 d 09
a0f2 a0f2 s 				add		hl,bc
a0f3 a0f3 d 38fc
a0f3 a0f3 s 				jr		c,Num2
a0f5 a0f5 d ed42
a0f5 a0f5 s 				sbc		hl,bc
a0f7 a0f7 d cf
a0f7 a0f7 s 				RST     08H
a0f8 a0f8 d c9
a0f8 a0f8 s 				ret
a0f9 a0f9 s ;Print A as HEX				
a0f9 a0f9 s NumToHex:    	
a0f9 a0f9 d c5
a0f9 a0f9 s 				push	bc
a0fa a0fa d f5
a0fa a0fa s                 push    af
a0fb a0fb d 4f
a0fb a0fb s 				ld 		c, a   		; a = number to convert
a0fc a0fc d cd08a1
a0fc a0fc s             	call 	Num1H
a0ff a0ff d cf
a0ff a0ff s             	RST     08H
a100 a100 d 79
a100 a100 s             	ld 		a, c
a101 a101 d cd0ca1
a101 a101 s             	call 	Num2H
a104 a104 d cf
a104 a104 s             	RST     08H
a105 a105 d f1
a105 a105 s                 pop     af
a106 a106 d c1
a106 a106 s 				pop		bc
a107 a107 d c9
a107 a107 s             	ret
a108 a108 s 
a108 a108 d 1f
a108 a108 s Num1H:        	rra
a109 a109 d 1f
a109 a109 s             	rra
a10a a10a d 1f
a10a a10a s             	rra
a10b a10b d 1f
a10b a10b s            		rra
a10c a10c d f6f0
a10c a10c s Num2H:        	or 		$F0
a10e a10e d 27
a10e a10e s             	daa
a10f a10f d c6a0
a10f a10f s             	add 	a, $A0
a111 a111 d ce40
a111 a111 s             	adc 	a, $40 		; Ascii hex at this point (0 to F)   
a113 a113 d c9
a113 a113 s             	ret
a114 a114 s 
a114 a114 s ;Get ABS of A
a114 a114 s absA:
a114 a114 d b7
a114 a114 s      or a
a115 a115 d f0
a115 a115 s      ret p
a116 a116 d ed44
a116 a116 s      neg
a118 a118 d c9
a118 a118 s      ret
a119 a119 s 
a119 a119 s ;getArAndomA	 
a119 a119 s randomA:				
a119 a119 d 3a8888
a119 a119 s 				ld a, 	(seed)
a11c a11c d 47
a11c a11c s 				ld b, 	a 
a11d a11d s 
a11d a11d d 0f
a11d a11d s 				rrca ; multiply by 32
a11e a11e d 0f
a11e a11e s 				rrca
a11f a11f d 0f
a11f a11f s 				rrca
a120 a120 d ee1f
a120 a120 s 				xor $1f
a122 a122 s 
a122 a122 d 80
a122 a122 s 				add 	a, b
a123 a123 d deff
a123 a123 s 				sbc a, 255 ; carry
a125 a125 s 
a125 a125 d 328888
a125 a125 s 				ld (seed), a
a128 a128 d c9
a128 a128 s 				ret
a129 a129 s 
a129 a129 s ;------- Print string
a129 a129 d f5
a129 a129 s print:			PUSH 	AF				; Preserve AF				
a12a a12a d 7e
a12a a12a s printLoop:      LD      A,(HL)          ; Get character
a12b a12b d b7
a12b a12b s                 OR      A               ; Is it $00 ?
a12c a12c d 2804
a12c a12c s                 JR     	Z,printRet      ; Then RETurn on terminator
a12e a12e d cf
a12e a12e s                 RST     08H             ; Print it
a12f a12f d 23
a12f a12f s                 INC     HL              ; Next Character
a130 a130 d 18f8
a130 a130 s                 JR      printLoop       ; Continue until $00
a132 a132 s 
a132 a132 d f1
a132 a132 s printRet:		POP		AF
a133 a133 d c9
a133 a133 s 				RET
a134 a134 s 
a134 a134 s ;--------Print textBlockAtPos
a134 a134 s ;HL Start of sprite
a134 a134 s ;C  Sprite X
a134 a134 s ;B  Sprite Y
a134 a134 s 
a134 a134 d f5
a134 a134 s printAtPos:		PUSH 	AF					; Preserve AF				
a135 a135 d cdb3a0
a135 a135 s printAtPosLoop: CALL	moveCursor			; Move cursor to start of line
a138 a138 d cd29a1
a138 a138 s 				CALL	print				; Print Line
a13b a13b d 04
a13b a13b s 				INC		B
a13c a13c d 23
a13c a13c s 				INC		HL
a13d a13d d 7e
a13d a13d s 				LD      A,(HL)          	; Get character
a13e a13e d b7
a13e a13e s                 OR      A               	; Is it $00 ?
a13f a13f d 23
a13f a13f s 				INC		HL
a140 a140 d 20f3
a140 a140 s                 JR      NZ,printAtPosLoop   ; Continue until $00		
a142 a142 d f1
a142 a142 s 				POP		AF
a143 a143 d c9
a143 a143 s 				RET
a144 a144 s 
a144 a144 s ;------------Draw Box
a144 a144 s ;C Start X
a144 a144 s ;B Start Y
a144 a144 s 
a144 a144 s ;D Width
a144 a144 s ;E Height
a144 a144 s drawBox:
a144 a144 d 1d
a144 a144 s 				DEC		E
a145 a145 d 1d
a145 a145 s 				DEC		E
a146 a146 d cdb3a0
a146 a146 s 				CALL	moveCursor			; Move cursor to start of line
a149 a149 d c5
a149 a149 s 				PUSH	BC
a14a a14a d 42
a14a a14a s 				LD		B,D
a14b a14b d 3e23
a14b a14b s topLineLoop:	LD		A,'#'
a14d a14d d cf
a14d a14d s 				RST		08H
a14e a14e d 10fb
a14e a14e s 				DJNZ	topLineLoop			;Print Top line
a150 a150 d 15
a150 a150 s 				DEC		D					;Remove padding for left and right bars
a151 a151 d 15
a151 a151 s 				DEC		D
a152 a152 d 43
a152 a152 s 				LD		B,E
a153 a153 d 58
a153 a153 s boxBodyLoop:	LD		E,B
a154 a154 d c1
a154 a154 s 				POP		BC
a155 a155 d 04
a155 a155 s 				INC		B
a156 a156 d cdb3a0
a156 a156 s 				CALL	moveCursor
a159 a159 d c5
a159 a159 s 				PUSH	BC
a15a a15a d 3e23
a15a a15a s 				LD		A,'#'
a15c a15c d cf
a15c a15c s 				RST		08H
a15d a15d d 42
a15d a15d s 				LD		B,D
a15e a15e d 3e20
a15e a15e s boxContentLoop:	LD		A,' '
a160 a160 d cf
a160 a160 s 				RST		08H
a161 a161 d 10fb
a161 a161 s 				DJNZ	boxContentLoop
a163 a163 d 3e23
a163 a163 s 				LD		A,'#'
a165 a165 d cf
a165 a165 s 				RST		08H
a166 a166 d 43
a166 a166 s 				LD		B,E
a167 a167 d 10ea
a167 a167 s 				DJNZ	boxBodyLoop
a169 a169 d c1
a169 a169 s 				POP		BC
a16a a16a d 04
a16a a16a s 				INC		B
a16b a16b d cdb3a0
a16b a16b s 				CALL	moveCursor			; Move cursor to start of line
a16e a16e d 14
a16e a16e s 				INC		D
a16f a16f d 14
a16f a16f s 				INC		D
a170 a170 d 42
a170 a170 s 				LD		B,D
a171 a171 d 3e23
a171 a171 s bottomLineLoop:	LD		A,'#'
a173 a173 d cf
a173 a173 s 				RST		08H
a174 a174 d 10fb
a174 a174 s 				DJNZ	bottomLineLoop			;Print Top line
a176 a176 d c9
a176 a176 s 				RET		
a177 a177 s ;--------Delay
a177 a177 s delay:
a177 a177 d c5
a177 a177 s 				PUSH	BC
a178 a178 s delayLoop:
a178 a178 d 00
a178 a178 s 				NOP
a179 a179 d 0b
a179 a179 s 				DEC 	BC
a17a a17a d 78
a17a a17a s 				LD 		A,B
a17b a17b d b1
a17b a17b s 				OR 		C
a17c a17c d 20fa
a17c a17c s 				JR 		NZ,delayLoop
a17e a17e d c1
a17e a17e s 				POP		BC
a17f a17f f main.asm
a17f a17f d c9
a17f a17f s 				RET
a180 a180 s 
a180 a180 s ;Strings
a180 a180 d 1b5b33346d231b5b306d00
a180 a180 s wall:			.BYTE	1BH,"[34m#",1BH,"[0m",0
a18b a18b d 1b5b39376d6f1b5b306d00
a18b a18b s powerPellet:	.BYTE	1BH,"[97mo",1BH,"[0m",0
a196 a196 d 1b5b33376d2a1b5b306d00
a196 a196 s pellet:			.BYTE	1BH,"[37m*",1BH,"[0m",0
a1a1 a1a1 d 1b5b33316d401b5b306d00
a1a1 a1a1 s superFruit:		.BYTE	1BH,"[31m@",1BH,"[0m",0
a1ac a1ac d 2000
a1ac a1ac s void:			.BYTE	" ",0
a1ae a1ae s 
a1ae a1ae d 1b5b4800
a1ae a1ae s home:			.BYTE 1BH,"[H",0
a1b2 a1b2 d 1b5b481b5b324a00
a1b2 a1b2 s cls:      	  	.BYTE 1BH,"[H",1BH,"[2J",0
a1ba a1ba d 1b5b3f32356c00
a1ba a1ba s hideCursor:	  	.BYTE	1BH,"[?25l",0
a1c1 a1c1 d 1b5b3f32356800
a1c1 a1c1 s showCursor:	  	.BYTE	1BH,"[?25h",0
a1c8 a1c8 s 
a1c8 a1c8 s ;----- Map ------
a1c8 a1c8 s include map.asm
a1c8 a1c8 f map.asm
a1c8 a1c8 s ;----- Map data bit positions
a1c8 a1c8 s upBit			.EQU	0
a1c8 a1c8 s downBit			.EQU	1
a1c8 a1c8 s leftBit			.EQU	2
a1c8 a1c8 s rightBit		.EQU	3
a1c8 a1c8 s powerpBit		.EQU	4
a1c8 a1c8 s pelletBit		.EQU	5
a1c8 a1c8 s wallBit			.EQU	6
a1c8 a1c8 s sfBit			.EQU	7
a1c8 a1c8 s 
a1c8 a1c8 s ;----Pellet
a1c8 a1c8 s ww 		.EQU	40H
a1c8 a1c8 s 
a1c8 a1c8 s hp 		.EQU	2CH		;left 	right	pellet
a1c8 a1c8 s gp		.EQU	23H		;up		down	pellet
a1c8 a1c8 s 
a1c8 a1c8 s lp		.EQU	26H		;down 	left 	pellet
a1c8 a1c8 s rp		.EQU	2AH		;down 	right	pellet
a1c8 a1c8 s up		.EQU	25H		;up 	left	pellet
a1c8 a1c8 s dp		.EQU	29H		;up 	right	pellet
a1c8 a1c8 s 
a1c8 a1c8 s bp		.EQU	2BH		;up		down	right	pellet
a1c8 a1c8 s cp		.EQU	27H		;up		down	left	pellet
a1c8 a1c8 s vp		.EQU	2EH		;down	left	right	pellet
a1c8 a1c8 s kp		.EQU	2DH		;up		left	right	pellet
a1c8 a1c8 s 
a1c8 a1c8 s xp		.EQU	2FH		;all	pellet
a1c8 a1c8 s ;------- No pellet
a1c8 a1c8 s hn 		.EQU	0CH		;left 	right	pellet
a1c8 a1c8 s gn		.EQU	03H		;up		down	pellet
a1c8 a1c8 s 
a1c8 a1c8 s ln		.EQU	06H		;down 	left 	pellet
a1c8 a1c8 s rn		.EQU	0AH		;down 	right	pellet
a1c8 a1c8 s un		.EQU	05H		;up 	left	pellet
a1c8 a1c8 s dn		.EQU	09H		;up 	right	pellet
a1c8 a1c8 s 
a1c8 a1c8 s bn		.EQU	0BH		;up		down	right	pellet
a1c8 a1c8 s cn		.EQU	07H		;up		down	left	pellet
a1c8 a1c8 s vn		.EQU	0EH		;down	left	right	pellet
a1c8 a1c8 s kn		.EQU	0DH		;up		left	right	pellet
a1c8 a1c8 s 
a1c8 a1c8 s xn		.EQU	0FH		;all	pellet
a1c8 a1c8 s ;--------Power Pellet
a1c8 a1c8 s hs 		.EQU	1CH		;left 	right	pellet
a1c8 a1c8 s gs		.EQU	13H		;up		down	pellet
a1c8 a1c8 s 
a1c8 a1c8 s ls		.EQU	16H		;down 	left 	pellet
a1c8 a1c8 s rs		.EQU	1AH		;down 	right	pellet
a1c8 a1c8 s us		.EQU	15H		;up 	left	pellet
a1c8 a1c8 s ds		.EQU	19H		;up 	right	pellet
a1c8 a1c8 s 
a1c8 a1c8 s bs		.EQU	1BH		;up		down	right	pellet
a1c8 a1c8 s cs		.EQU	17H		;up		down	left	pellet
a1c8 a1c8 s vs		.EQU	1EH		;down	left	right	pellet
a1c8 a1c8 s ks		.EQU	1DH		;up		left	right	pellet
a1c8 a1c8 s 
a1c8 a1c8 s xs		.EQU	1FH		;all	pellet
a1c8 a1c8 s 
a1c8 a1c8 d 0000404040404040404040404040404040404040404040404040404040400000
a1c8 a1c8 s map:	.BYTE	00,00,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,00,00
a1e8 a1e8 d 0000402a2c2c2c2c2e2c2c2c2c2c2640402a2c2c2c2c2c2e2c2c2c2c26400000
a1e8 a1e8 s 		.BYTE	00,00,ww,rp,hp,hp,hp,hp,vp,hp,hp,hp,hp,hp,lp,ww,ww,rp,hp,hp,hp,hp,hp,vp,hp,hp,hp,hp,lp,ww,00,00
a208 a208 d 0000401340404040234040404040234040234040404040234040404013400000
a208 a208 s 		.BYTE	00,00,ww,gs,ww,ww,ww,ww,gp,ww,ww,ww,ww,ww,gp,ww,ww,gp,ww,ww,ww,ww,ww,gp,ww,ww,ww,ww,gs,ww,00,00
a228 a228 d 0000402340404040234040404040234040234040404040234040404023400000
a228 a228 s 		.BYTE	00,00,ww,gp,ww,ww,ww,ww,gp,ww,ww,ww,ww,ww,gp,ww,ww,gp,ww,ww,ww,ww,ww,gp,ww,ww,ww,ww,gp,ww,00,00
a248 a248 d 0000402b2c2c2c2c2f2c2c2e2c2c2d2c2c2d2c2c2e2c2c2f2c2c2c2c27400000
a248 a248 s 		.BYTE	00,00,ww,bp,hp,hp,hp,hp,xp,hp,hp,vp,hp,hp,kp,hp,hp,kp,hp,hp,vp,hp,hp,xp,hp,hp,hp,hp,cp,ww,00,00
a268 a268 d 0000402340404040234040234040404040404040234040234040404023400000
a268 a268 s 		.BYTE	00,00,ww,gp,ww,ww,ww,ww,gp,ww,ww,gp,ww,ww,ww,ww,ww,ww,ww,ww,gp,ww,ww,gp,ww,ww,ww,ww,gp,ww,00,00
a288 a288 d 000040292c2c2c2c274040292c2c2640402a2c2c2540402b2c2c2c2c25400000
a288 a288 s 		.BYTE	00,00,ww,dp,hp,hp,hp,hp,cp,ww,ww,dp,hp,hp,lp,ww,ww,rp,hp,hp,up,ww,ww,bp,hp,hp,hp,hp,up,ww,00,00
a2a8 a2a8 d 0000404040404040234040404040034040034040404040234040404040400000
a2a8 a2a8 s 		.BYTE	00,00,ww,ww,ww,ww,ww,ww,gp,ww,ww,ww,ww,ww,gn,ww,ww,gn,ww,ww,ww,ww,ww,gp,ww,ww,ww,ww,ww,ww,00,00
a2c8 a2c8 d 00000000000000402340400a0c0c0d0c0c0d0c0c064040234000000000000000
a2c8 a2c8 s 		.BYTE	00,00,00,00,00,00,00,ww,gp,ww,ww,rn,hn,hn,kn,hn,hn,kn,hn,hn,ln,ww,ww,gp,ww,00,00,00,00,00,00,00
a2e8 a2e8 d 0000000000000040234040034040400000404040034040234000000000000000
a2e8 a2e8 s 		.BYTE	00,00,00,00,00,00,00,ww,gp,ww,ww,gn,ww,ww,ww,00,00,ww,ww,ww,gn,ww,ww,gp,ww,00,00,00,00,00,00,00
a308 a308 d 4040404040404040234040034000000000000040034040234040404040404040
a308 a308 s 		.BYTE	ww,ww,ww,ww,ww,ww,ww,ww,gp,ww,ww,gn,ww,00,00,00,00,00,00,ww,gn,ww,ww,gp,ww,ww,ww,ww,ww,ww,ww,ww
a328 a328 d 0c0c0c0c0c0c0c0c2f0c0c0740000000000000400b0c0c2f0c0c0c0c0c0c0c0c
a328 a328 s 		.BYTE	hn,hn,hn,hn,hn,hn,hn,hn,xp,hn,hn,cn,ww,00,00,00,00,00,00,ww,bn,hn,hn,xp,hn,hn,hn,hn,hn,hn,hn,hn
a348 a348 d 4040404040404040234040034000000000000040034040234040404040404040
a348 a348 s 		.BYTE	ww,ww,ww,ww,ww,ww,ww,ww,gp,ww,ww,gn,ww,00,00,00,00,00,00,ww,gn,ww,ww,gp,ww,ww,ww,ww,ww,ww,ww,ww
a368 a368 d 0000000000000040234040034040404040404040034040234000000000000000
a368 a368 s 		.BYTE	00,00,00,00,00,00,00,ww,gp,ww,ww,gn,ww,ww,ww,ww,ww,ww,ww,ww,gn,ww,ww,gp,ww,00,00,00,00,00,00,00
a388 a388 d 00000000000000402340400b0c0c0c0c0c0c0c0c074040234000000000000000
a388 a388 s 		.BYTE	00,00,00,00,00,00,00,ww,gp,ww,ww,bn,hn,hn,hn,hn,hn,hn,hn,hn,cn,ww,ww,gp,ww,00,00,00,00,00,00,00
a3a8 a3a8 d 0000404040404040234040034040404040404040034040234040404040400000
a3a8 a3a8 s 		.BYTE	00,00,ww,ww,ww,ww,ww,ww,gp,ww,ww,gn,ww,ww,ww,ww,ww,ww,ww,ww,gn,ww,ww,gp,ww,ww,ww,ww,ww,ww,00,00
a3c8 a3c8 d 0000402a2c2c2c2c2f2c2c2d2c2c2640402a2c2c2d2c2c2f2c2c2c2c26400000
a3c8 a3c8 s 		.BYTE	00,00,ww,rp,hp,hp,hp,hp,xp,hp,hp,kp,hp,hp,lp,ww,ww,rp,hp,hp,kp,hp,hp,xp,hp,hp,hp,hp,lp,ww,00,00
a3e8 a3e8 d 0000402340404040234040404040234040234040404040234040404023400000
a3e8 a3e8 s 		.BYTE	00,00,ww,gp,ww,ww,ww,ww,gp,ww,ww,ww,ww,ww,gp,ww,ww,gp,ww,ww,ww,ww,ww,gp,ww,ww,ww,ww,gp,ww,00,00
a408 a408 d 000040192c2640402b2c2c2e2c2c2d2c2c2d2c2c2e2c2c2740402a2c15400000
a408 a408 s 		.BYTE	00,00,ww,ds,hp,lp,ww,ww,bp,hp,hp,vp,hp,hp,kp,hp,hp,kp,hp,hp,vp,hp,hp,cp,ww,ww,rp,hp,us,ww,00,00
a428 a428 d 0000404040234040234040234040404040404040234040234040234040400000
a428 a428 s 		.BYTE	00,00,ww,ww,ww,gp,ww,ww,gp,ww,ww,gp,ww,ww,ww,ww,ww,ww,ww,ww,gp,ww,ww,gp,ww,ww,gp,ww,ww,ww,00,00
a448 a448 d 0000402a2c2d2c2c254040292c2c2640402a2c2c254040292c2c2d2c26400000
a448 a448 s 		.BYTE	00,00,ww,rp,hp,kp,hp,hp,up,ww,ww,dp,hp,hp,lp,ww,ww,rp,hp,hp,up,ww,ww,dp,hp,hp,kp,hp,lp,ww,00,00
a468 a468 d 0000402340404040404040404040234040234040404040404040404023400000
a468 a468 s 		.BYTE	00,00,ww,gp,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,gp,ww,ww,gp,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,gp,ww,00,00
a488 a488 d 000040292c2c2c2c2c2c2c2c2c2c2d2c2c2d2c2c2c2c2c2c2c2c2c2c25400000
a488 a488 s 		.BYTE	00,00,ww,dp,hp,hp,hp,hp,hp,hp,hp,hp,hp,hp,kp,hp,hp,kp,hp,hp,hp,hp,hp,hp,hp,hp,hp,hp,up,ww,00,00
a4a8 a4a8 d 0000404040404040404040404040404040404040404040404040404040400000
a4a8 a4a8 s 		.BYTE	00,00,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,00,00
a4c8 a4c8 d 0000000000000000000000000000000000000000000000000000000000000000
a4c8 a4c8 s 		.BYTE	00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
a4e8 a4e8 d 0000000000000000000000000000000000000000000000000000000000000000
a4e8 a4e8 s 		.BYTE	00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
a508 a508 d 0000000000000000000000000000000000000000000000000000000000000000
a508 a508 s 		.BYTE	00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
a528 a528 d 0000000000000000000000000000000000000000000000000000000000000000
a528 a528 s 		.BYTE	00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
a548 a548 d 0000000000000000000000000000000000000000000000000000000000000000
a548 a548 s 		.BYTE	00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
a568 a568 d 0000000000000000000000000000000000000000000000000000000000000000
a568 a568 s 		.BYTE	00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
a588 a588 d 0000000000000000000000000000000000000000000000000000000000000000
a588 a588 s 		.BYTE	00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
a5a8 a5a8 d 0000000000000000000000000000000000000000000000000000000000000000
a5a8 a5a8 s 		.BYTE	00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
a5c8 a5c8 s 
a5c8 a5c8 s ; map:	.BYTE	00,00,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,00,00
a5c8 a5c8 s ; 		.BYTE	00,00,ww,rn,hn,hn,hn,hn,vn,hn,hn,hn,hn,hn,ln,ww,ww,rn,hn,hn,hn,hn,hn,vn,hn,hn,hn,hn,ln,ww,00,00
a5c8 a5c8 s ; 		.BYTE	00,00,ww,gn,ww,ww,ww,ww,gn,ww,ww,ww,ww,ww,gn,ww,ww,gn,ww,ww,ww,ww,ww,gn,ww,ww,ww,ww,gn,ww,00,00
a5c8 a5c8 s ; 		.BYTE	00,00,ww,gn,ww,ww,ww,ww,gn,ww,ww,ww,ww,ww,gn,ww,ww,gn,ww,ww,ww,ww,ww,gn,ww,ww,ww,ww,gn,ww,00,00
a5c8 a5c8 s ; 		.BYTE	00,00,ww,bn,hn,hn,hn,hn,xn,hn,hn,vn,hn,hn,kn,hn,hn,kn,hn,hn,vn,hn,hn,xn,hn,hn,hn,hn,cn,ww,00,00
a5c8 a5c8 s ; 		.BYTE	00,00,ww,gn,ww,ww,ww,ww,gn,ww,ww,gn,ww,ww,ww,ww,ww,ww,ww,ww,gn,ww,ww,gn,ww,ww,ww,ww,gn,ww,00,00
a5c8 a5c8 s ; 		.BYTE	00,00,ww,dn,hn,hn,hn,hn,cn,ww,ww,dn,hn,hn,ln,ww,ww,rn,hn,hn,un,ww,ww,bn,hn,hn,hn,hn,un,ww,00,00
a5c8 a5c8 s ; 		.BYTE	00,00,ww,ww,ww,ww,ww,ww,gn,ww,ww,ww,ww,ww,gn,ww,ww,gn,ww,ww,ww,ww,ww,gn,ww,ww,ww,ww,ww,ww,00,00
a5c8 a5c8 s ; 		.BYTE	00,00,00,00,00,00,00,ww,gn,ww,ww,rn,hn,hn,kn,hn,hn,kn,hn,hn,ln,ww,ww,gn,ww,00,00,00,00,00,00,00
a5c8 a5c8 s ; 		.BYTE	00,00,00,00,00,00,00,ww,gn,ww,ww,gn,ww,ww,ww,00,00,ww,ww,ww,gn,ww,ww,gn,ww,00,00,00,00,00,00,00
a5c8 a5c8 s ; 		.BYTE	ww,ww,ww,ww,ww,ww,ww,ww,gn,ww,ww,gn,ww,00,00,00,00,00,00,ww,gn,ww,ww,gn,ww,ww,ww,ww,ww,ww,ww,ww
a5c8 a5c8 s ; 		.BYTE	hn,hn,hn,hn,hn,hn,hn,hn,xn,hn,hn,cp,ww,00,00,00,00,00,00,ww,bn,hn,hn,xn,hn,hn,hn,hn,hn,hn,hn,hn
a5c8 a5c8 s ; 		.BYTE	ww,ww,ww,ww,ww,ww,ww,ww,gn,ww,ww,gn,ww,00,00,00,00,00,00,ww,gn,ww,ww,gn,ww,ww,ww,ww,ww,ww,ww,ww
a5c8 a5c8 s ; 		.BYTE	00,00,00,00,00,00,00,ww,gn,ww,ww,gn,ww,ww,ww,ww,ww,ww,ww,ww,gn,ww,ww,gn,ww,00,00,00,00,00,00,00
a5c8 a5c8 s ; 		.BYTE	00,00,00,00,00,00,00,ww,gn,ww,ww,bn,hn,hn,hn,hn,hn,hn,hn,hn,cn,ww,ww,gn,ww,00,00,00,00,00,00,00
a5c8 a5c8 s ; 		.BYTE	00,00,ww,ww,ww,ww,ww,ww,gn,ww,ww,gn,ww,ww,ww,ww,ww,ww,ww,ww,gn,ww,ww,gn,ww,ww,ww,ww,ww,ww,00,00
a5c8 a5c8 s ; 		.BYTE	00,00,ww,rn,hn,hn,hn,hn,xn,hn,hn,kn,hn,hn,ln,ww,ww,rn,hn,hn,kn,hn,hn,xn,hn,hn,hn,hn,ln,ww,00,00
a5c8 a5c8 s ; 		.BYTE	00,00,ww,gn,ww,ww,ww,ww,gn,ww,ww,ww,ww,ww,gn,ww,ww,gn,ww,ww,ww,ww,ww,gn,ww,ww,ww,ww,gn,ww,00,00
a5c8 a5c8 s ; 		.BYTE	00,00,ww,dn,hn,ln,ww,ww,bn,hn,hn,vn,hn,hn,kn,hn,hn,kn,hn,hn,vn,hn,hn,cn,ww,ww,rn,hn,un,ww,00,00
a5c8 a5c8 s ; 		.BYTE	00,00,ww,ww,ww,gn,ww,ww,gn,ww,ww,gn,ww,ww,ww,ww,ww,ww,ww,ww,gn,ww,ww,gn,ww,ww,gn,ww,ww,ww,00,00
a5c8 a5c8 s ; 		.BYTE	00,00,ww,rn,hn,kn,hn,hn,un,ww,ww,dn,hn,hn,ln,ww,ww,rn,hn,hn,un,ww,ww,dn,hn,hn,kn,hn,ln,ww,00,00
a5c8 a5c8 s ; 		.BYTE	00,00,ww,gn,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,gn,ww,ww,gn,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,gn,ww,00,00
a5c8 a5c8 s ; 		.BYTE	00,00,ww,dn,hn,hn,hn,hn,hn,hn,hn,hn,hn,hn,kn,hn,hn,kn,hn,hn,hn,hn,hn,hn,hn,hn,hn,hn,un,ww,00,00
a5c8 a5c8 s ; 		.BYTE	00,00,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,00,00
a5c8 a5c8 s ; 		.BYTE	00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
a5c8 a5c8 s ; 		.BYTE	00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
a5c8 a5c8 s ; 		.BYTE	00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
a5c8 a5c8 s ; 		.BYTE	00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
a5c8 a5c8 s ; 		.BYTE	00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
a5c8 a5c8 s ; 		.BYTE	00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
a5c8 a5c8 s ; 		.BYTE	00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
a5c8 a5c8 f main.asm
a5c8 a5c8 s ; 		.BYTE	00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
a5c8 a5c8 s 
a5c8 a5c8 s ;-----Path find map
a5c8 a5c8 s pathFindMap	.EQU	0D000H
a5c8 a5c8 s 
a5c8 a5c8 f main.asm
a5c8 a5c8 s liveMap		.EQU	0E000H
000b v bn
0007 v cn
000a v lf
002b v bp
0029 v dp
000d v cr
0027 v cp
0023 v gp
002c v hp
000c v hn
0003 v gn
002d v kp
0026 v lp
0006 v ln
0009 v dn
000d v kn
000a v rn
001c v hs
002a v rp
0005 v un
0025 v up
002e v vp
000e v vn
002f v xp
000f v xn
0013 v gs
0016 v ls
001a v rs
0015 v us
0040 v ww
0019 v ds
001b v bs
0017 v cs
001e v vs
001d v ks
001f v xs
a1c8 a map
a1b2 a cls
a0ef a num1
a0f1 a num2
a114 a absa
8888 v seed
a1ae a home
8100 v pacx
8101 v pacy
9fc9 a info
a180 a wall
9f39 a logo
a1ac a void
97a9 a move
907f a quit
a108 a num1h
a10c a num2h
a177 a delay
8902 v level
0007 v sfbit
97bd a moved
8900 v score
97c3 a movel
0000 v upbit
97c9 a mover
97b7 a moveu
a129 a print
908a a input
915f a checkh
91b6 a pacman
916d a checkv
98ba a pmchar
a0d6 a disphl
a196 a pellet
917d a movepm
9506 a oghost
9647 a pghost
93c5 a rghost
98a6 a pmloop
9788 a tghost
8904 v fruits
98d5 a printp
000f v fruitx
000e v fruity
9aba a number1
9c23 a number2
9d8c a number3
9793 a sghost0
979e a sghost1
8102 v paccdir
8103 v pacndir
a119 a randoma
a0ce a hltodec
90d2 a clearpm
9fdd a message
0002 v leftbit
9007 a gametop
e000 v livemap
0006 v wallbit
97e9 a initmap
a0aa a newline
9188 a movepma
9139 a getmove
0001 v downbit
a144 a drawbox
98e5 a printsf
90de a printpm
8120 v oghostx
8121 v oghosty
8130 v pghostx
8110 v rghostx
8111 v rghosty
8131 v pghosty
8140 v tghostx
8141 v tghosty
98cd a printpp
9850 a checkmap
903a a gameloop
8105 v paclives
9a4c a levelhud
8104 v ppactive
0003 v rightbit
9a44 a scorehud
9284 a eatghost
000e v initpacx
000e v initpacy
910f a eatfruit
8113 v ghostdis
9a54 a liveshud
99c5 a pmpfskip
989f a printmap
9a5c a fruithud
99a9 a pmpfloop
99ce a printhud
a0f9 a numtohex
a132 a printret
90ff a eatpellet
0005 v pelletbit
98f5 a pmcharret
901c a startgame
a178 a delayloop
8122 v oghostdir
8132 v pghostdir
8112 v rghostdir
0004 v initlives
8142 v tghostdir
91f5 a initghost
9202 a moveghost
0004 v powerpbit
9222 a ghostmove
98dd a printwall
98ed a printvoid
9a68 a countdown
a12a a printloop
9908 a pfnextrow
89f2 v originalbc
9194 a killpacman
90a4 a initpacman
9812 a checkfruit
97e0 a movedvalid
91ce a clearghost
9131 a eatppellet
9125 a eatspellet
97e3 a movelvalid
a1ba a hidecursor
97e6 a movervalid
97dd a moveuvalid
90a0 a validinput
9890 a printmapat
923c a ghostmoved
9999 a printpfmap
98b4 a pmnextline
99ef a printlevel
9404 a oghostinit
9545 a pghostinit
9248 a ghostmovel
92c3 a rghostinit
9414 a oghostmove
9686 a tghostinit
92d3 a rghostmove
9555 a pghostmove
9696 a tghostmove
9230 a ghostmoveu
91db a printghost
9254 a ghostmover
9376 a rghostpfpp
a0b3 a movecursor
94b7 a oghostpfpp
95f8 a pghostpfpp
9739 a tghostpfpp
00b0 v fruitticks
8106 v fruittimer
a1a1 a superfruit
99db a printscore
9a03 a printlives
9a28 a printfruit
a1c1 a showcursor
a134 a printatpos
d000 v pathfindmap
9876 a incrementde
90ba a resetpacman
91e8 a colideghost
93d0 a oghostclear
9511 a pghostclear
928f a rghostclear
a001 a exitmessage
9652 a tghostclear
97cf a ismovevalid
0020 v ppellettics
94f8 a oghoststack
9639 a pghoststack
93b7 a rghoststack
977a a tghoststack
a153 a boxbodyloop
a18b a powerpellet
98fe a initppfloop
8125 v oghosttimer
8135 v pghosttimer
a14b a toplineloop
8115 v rghosttimer
8145 v tghosttimer
000f v oghostinitx
93dc a oghostprint
951d a pghostprint
000f v rghostinitx
929b a rghostprint
920f a printsghost
965e a tghostprint
0008 v rghostinity
0008 v oghostinity
000f v pghostinitx
0008 v pghostinity
000f v tghostinitx
0008 v tghostinity
986b a checkmapchar
90f2 a getpmmapdata
921b a sghost1print
9476 a oghostcheckd
95b7 a pghostcheckd
9335 a rghostcheckd
985a a checkmaploop
96f8 a tghostcheckd
9878 a getaddresspf
9a64 a liveblanking
9484 a oghostcheckl
95c5 a pghostcheckl
9343 a rghostcheckl
98f7 a initpathfind
9706 a tghostcheckl
94cc a oghostcolide
960d a pghostcolide
9492 a oghostcheckr
938b a rghostcolide
9351 a rghostcheckr
9155 a calcnextmove
974e a tghostcolide
9327 a rghostchecku
9468 a oghostchecku
95a9 a pghostchecku
927f a ghostdostack
95d3 a pghostcheckr
96ea a tghostchecku
9714 a tghostcheckr
99bf a pmpfnextline
a039 a deathmessage1
a090 a deathmessage2
000f v oghoststorex
000b v oghoststorey
0010 v pghoststorex
000e v rghoststorex
000b v rghoststorey
000b v pghoststorey
0011 v tghoststorex
000b v tghoststorey
9969 a calculatemapd
9975 a calculatemapl
9981 a calculatemapr
995d a calculatemapu
0030 v pathfinddepth
97fa a getmapaddress
93f7 a oghostmapdata
9538 a pghostmapdata
92b6 a rghostmapdata
9679 a tghostmapdata
99b2 a pmpfafterskip
914e a nextmovevalid
91c1 a ghostnextmove
0020 v caughtjaletime
982a a checknextlevel
942d a oghostdectimer
94a0 a oghostpathfind
956e a pghostdectimer
92ec a rghostdectimer
935f a rghostpathfind
95e1 a pghostpathfind
96af a tghostdectimer
9722 a tghostpathfind
9a21 a removeoldlives
a171 a bottomlineloop
a15e a boxcontentloop
943e a oghostnextmove
957f a pghostnextmove
9a19 a printlivesloop
92fd a rghostnextmove
a135 a printatposloop
96c0 a tghostnextmove
9a3b a printfruitloop
9260 a ghostcheckstack
a015 a displaygameover
89f0 v oldstackpointer
0020 v oghostinittimer
94c3 a oghostsetnewdir
0030 v pghostinittimer
0010 v rghostinittimer
9382 a rghostsetnewdir
9604 a pghostsetnewdir
0040 v tghostinittimer
9745 a tghostsetnewdir
998d a calculatemapcell
990f a calculatepathmap
9865 a checkmapnextline
9ff1 a startgamemessage
9ef5 a displaytitlescreen
9921 a calculatepathmaploop
a030 a gameoverwaitforinput
9f2b a titlescreenwaitforinput
