   1:     -	000D          	CR              .EQU     0DH
   2:     -	000A          	LF              .EQU     0AH
   3:				
   4:     -	89F0          	oldStackPointer	.EQU	89F0H		;Old Stack Location 	
   5:     -	89F2          	originalBC		.EQU	89F2H		;BC before manipulation, used for calculating board position
   6:				
   7:     -	9000          		.ORG 9000H
   8:    0+20	9000  ED73F089				ld		(oldStackPointer), SP
   9:   20+10	9004  31FFFF  				ld		sp,0FFFFH
  10:     -	9007          	gameTop:
  11:   30+17	9007  CDC797  				CALL	initMap
  12:   47+10	900A  2131A1  				LD		HL, cls			;Clear screen
  13:   57+17	900D  CDA8A0  				CALL	print
  14:   74+10	9010  2139A1  				LD		HL, hideCursor	;Hide Cursor
  15:   84+17	9013  CDA8A0  				CALL	print
  16:  101+17	9016  CD6098  				CALL 	printMap
  17:  118+10	9019  C3749E  				JP		displayTitleScreen
  18:     -	901C          	startGame:
  19:  128+17	901C  CDA190  				CALL	initPacman
  20:  145+17	901F  CDD391  				CALL	initGhost
  21:  162+17	9022  CDC797  				CALL	initMap
  22:  179+10	9025  2131A1  				LD		HL, cls			;Clear screen
  23:  189+17	9028  CDA8A0  				CALL	print
  24:  206+17	902B  CD6098  				CALL 	printMap
  25:  223+17	902E  CD029A  				CALL	countdown
  26:  240+10	9031  212DA1  				LD		HL, home		;Go home
  27:  250+17	9034  CDA8A0  				CALL	print
  28:  267+17	9037  CD6098  				CALL 	printMap
  29:     -	903A          	gameLoop:		
  30:  284+17	903A  CD8790  				call	input
  31:  301+17	903D  CD1791  				call 	getMove
  32:  318+17	9040  CDCA90  				call 	clearPM
  33:  335+17	9043  CD5B91  				call	movePM
  34:  352+17	9046  CDD690  				call 	printPM
  35:  369+17	9049  CDF790  				call	eatPellet
  36:							
  37:  386+17	904C  CDB898  				call	initPathFind
  38:  403+17	904F  CDD098  				call	calculatePathMap
  39:				
  40:  420+17	9052  CD9F91  				call	ghostNextMove
  41:  437+17	9055  CDAC91  				call	clearGhost
  42:  454+17	9058  CDC691  				call	colideGhost
  43:  471+17	905B  CDE091  				call	moveGhost
  44:  488+17	905E  CDB991  				call	printGhost
  45:				
  46:  505+17	9061  CDC691  				call	colideGhost
  47:				
  48:				
  49:							;call 	printPFMap
  50:							
  51:  522+17	9064  CD8F99  				call 	printHUD
  52:  539+17	9067  CD29A0  				call	newline
  53:  556+17	906A  CDEB97  				call	checkNextLevel
  54:  573+7	906D  060F    				LD 		B,0FH   ;delay
  55:  580+7	906F  0EFF    				LD		C,0FFH
  56:  587+17	9071  CDF6A0  				CALL 	DELAY
  57:  604+10	9074  C33A90  				JP		gameLoop
  58:  614+20	9077  ED7BF089				LD		SP,(oldStackPointer)
  59:  634+10	907B  C9      				ret
  60:				
  61:  644+10	907C  2140A1  	quit:       LD		HL, showCursor	;Hide Cursor
  62:  654+17	907F  CDA8A0  				CALL	print
  63:  671+20	9082  ED7BF089	            LD		SP,(oldStackPointer)
  64:  691+10	9086  C9      				RET	
  65:						
  66:				;-------------- Input --------------------------					
  67:				include input.asm	
**** input.asm ****
   1:     -	9087          	input:
   2:  701+11	9087  DF      					RST		18H
   3:  712+5+6	9088  C8      					RET		Z
   4:  717+11	9089  D7      					RST		10H
   5:  728+7	908A  E6DF    					AND     11011111b       ; lower to uppercase
   6:  735+7	908C  FE57    					CP		'W'
   7:  742+7+5	908E  280D    					JR		Z,validInput
   8:  749+7	9090  FE41    					CP		'A'
   9:  756+7+5	9092  2809    					JR		Z,validInput
  10:  763+7	9094  FE53    					CP		'S'
  11:  770+7+5	9096  2805    					JR		Z,validInput
  12:  777+7	9098  FE44    					CP		'D'
  13:  784+7+5	909A  2801    					JR		Z,validInput
  14:  791+10	909C  C9      					RET
  15:     -	909D          	validInput:		
  16:  801+13	909D  320381  					LD		(pacNDir), A
**** main.asm ****
  68:  814+10	90A0  C9      					RET
  69:				;----------Pacman------;
  70:				include	pacman.asm
**** pacman.asm ****
   1:				;Packman
   2:     -	8100          	pacx			.EQU	8100H
   3:     -	8101          	pacy			.EQU	8101H
   4:     -	8102          	pacCDir			.EQU	8102H		;Pacmans current direction
   5:     -	8103          	pacNDir			.EQU	8103H		;Pacman next direction (from key press)
   6:     -	8105          	pacLives		.EQU	8105H		;Pacman next direction (from key press)
   7:				
   8:     -	000E          	initPacx		.EQU	14
   9:     -	000E          	initPacy		.EQU	14
  10:     -	0004          	initLives		.EQU	4
  11:				
  12:     -	0020          	pPelletTics     .EQU    20H         ;Power Pellet last time
  13:				
  14:     -	8104          	pPActive        .EQU    8104H       ;Power Pellet Timer
  15:				
  16:     -	90A1          	initPacman:
  17:  824+10	90A1  210000  					LD		HL, 0H
  18:  834+16	90A4  220089  					LD		(score), HL
  19:  850+10	90A7  210100  					LD		HL, 1H
  20:  860+16	90AA  220289  					LD		(level), HL
  21:  876+7	90AD  3E04    					LD		a,initLives
  22:  883+13	90AF  320581  					LD		(pacLives),a
  23:  896+7	90B2  3E0E    	resetPacMan:	LD		a, initPacx		;set Pacman Pos
  24:  903+13	90B4  320081  					LD		(pacx),a
  25:  916+7	90B7  3E0E    					LD		a, initPacy
  26:  923+13	90B9  320181  					LD		(pacy),a
  27:  936+7	90BC  3E44    					LD		a, 'D'			;Set start direction
  28:  943+13	90BE  320281  					LD		(pacCDir),A
  29:  956+13	90C1  320381  					LD		(pacNDir),A
  30:  969+7	90C4  3E00    					LD		a,0
  31:  976+13	90C6  320481  					LD		(pPActive),A
  32:  989+10	90C9  C9      					RET
  33:				
  34:     -	90CA          	clearPM:
  35:  999+13	90CA  3A0081  					LD		A, (pacx)		;Push X to stack
  36: 1012+4	90CD  4F      					LD		C,A
  37: 1016+13	90CE  3A0181  					LD		A, (pacy)		;Push Y to stack
  38: 1029+4	90D1  47      					LD		B,A
  39: 1033+17	90D2  CD5198  					CALL 	printMapAt
  40: 1050+10	90D5  C9      					RET
  41:								
  42:     -	90D6          	printPM:
  43: 1060+13	90D6  3A0081  					LD		A, (pacx)		;Push X to stack
  44: 1073+4	90D9  3C      					INC		A
  45: 1077+4	90DA  4F      					LD		C,A
  46: 1081+13	90DB  3A0181  					LD		A, (pacy)		;Push Y to stack
  47: 1094+4	90DE  3C      					INC		A
  48: 1098+4	90DF  47      					LD		B,A
  49: 1102+17	90E0  CD32A0  					CALL	moveCursor
  50: 1119+10	90E3  219491  					LD		HL, pacman
  51: 1129+17	90E6  CDA8A0  					CALL 	print
  52: 1146+10	90E9  C9      					RET
  53:     -	90EA          	getPMMapData:	
  54: 1156+13	90EA  3A0081  					LD		A, (pacx)
  55: 1169+4	90ED  4F      					LD		C,A
  56: 1173+13	90EE  3A0181  					LD		A, (pacy)
  57: 1186+4	90F1  47      					LD		B,A
  58: 1190+17	90F2  CDD397  					CALL	getMapAddress
  59: 1207+7	90F5  7E      	                LD      A,(HL)
  60: 1214+10	90F6  C9      					ret
  61:     -	90F7          	eatPellet:		;Eat pellet at packman location
  62: 1224+17	90F7  CDEA90  					CALL 	getPMMapData
  63: 1241+8	90FA  CB6F    					BIT		pelletBit,A
  64: 1249+7+5	90FC  2005    					JR		NZ,eatSPellet
  65: 1256+8	90FE  CB67    	                BIT		powerPBit,A
  66: 1264+7+5	9100  200D    					JR		NZ,eatPPellet
  67: 1271+10	9102  C9      					RET
  68:								
  69:     -	9103          	eatSPellet:		
  70: 1281+11	9103  E5      					PUSH	HL		
  71: 1292+16	9104  2A0089  					LD		HL,(score)
  72: 1308+6	9107  23      					INC		HL
  73: 1314+16	9108  220089  					LD		(score),HL
  74: 1330+10	910B  E1      					POP		HL
  75: 1340+15	910C  CBAE    					RES		pelletBit,(HL)
  76: 1355+10	910E  C9      					RET
  77:				
  78:     -	910F          	eatPPellet:		
  79: 1365+7	910F  3E20    					LD      A,pPelletTics
  80: 1372+13	9111  320481  	                LD      (pPActive),A
  81: 1385+15	9114  CBA6    	                RES		powerPBit,(HL)
  82: 1400+10	9116  C9      					RET
  83:								
  84:     -	9117          	getMove:		;Sets the current move var
  85: 1410+17	9117  CDEA90  					CALL	getPMMapData
  86: 1427+4	911A  57      					LD		D,A
  87: 1431+13	911B  3A0381  					LD		A,(pacNDir)			;Is the next move valid
  88: 1444+17	911E  CDAD97  					CALL	isMoveValid
  89: 1461+7+5	9121  2009    					JR		NZ,nextMoveValid
  90: 1468+13	9123  3A0281  					LD		A,(pacCDir)			;Is the current move valid
  91: 1481+17	9126  CDAD97  					CALL	isMoveValid
  92: 1498+5+6	9129  C0      					RET		NZ
  93: 1503+12	912A  1807    					JR		calcNextMove
  94:								
  95:     -	912C          	nextMoveValid:
  96: 1515+13	912C  320281  					LD		(pacCDir),A
  97: 1528+13	912F  320381  					LD		(pacNDir),A
  98: 1541+10	9132  C9      					RET
  99:								
 100:     -	9133          	calcNextMove:	
 101: 1551+7	9133  FE41    					CP		'A'
 102: 1558+7+5	9135  2814    					JR		Z,checkV
 103: 1565+7	9137  FE44    					CP		'D'
 104: 1572+7+5	9139  2810    					JR		Z,checkV
 105: 1579+12	913B  1800    					JR		checkH
 106:     -	913D          	checkH:
 107: 1591+7	913D  3E41    					LD		A,'A'
 108: 1598+17	913F  CDAD97  					CALL	isMoveValid
 109: 1615+7+5	9142  20E8    					JR		NZ,nextMoveValid
 110: 1622+7	9144  3E44    					LD		A,'D'
 111: 1629+17	9146  CDAD97  					CALL	isMoveValid
 112: 1646+7+5	9149  20E1    					JR		NZ,nextMoveValid
 113:     -	914B          	checkV:
 114: 1653+7	914B  3E57    					LD		A,'W'
 115: 1660+17	914D  CDAD97  					CALL	isMoveValid
 116: 1677+7+5	9150  20DA    					JR		NZ,nextMoveValid
 117: 1684+7	9152  3E53    					LD		A,'S'
 118: 1691+17	9154  CDAD97  					CALL	isMoveValid
 119: 1708+7+5	9157  20D3    					JR		NZ,nextMoveValid
 120: 1715+12	9159  18E2    					JR		checkH
 121:				;Move
 122:     -	915B          	movePM:
 123: 1727+13	915B  3A0481  					LD      A,(pPActive)
 124: 1740+4	915E  B7      	                OR      A
 125: 1744+10	915F  CA6691  	                JP      Z,movePMA
 126: 1754+4	9162  3D      	                DEC     A
 127: 1758+13	9163  320481  	                LD      (pPActive),A
 128: 1771+13	9166  3A0281  	movePMA:        LD		A,(pacCDir)
 129: 1784+10	9169  110081  					LD		DE,pacx
 130: 1794+10	916C  010181  					LD		BC,pacy
 131: 1804+10	916F  C38797  					JP		move
 132:				
 133:     -	9172          	killPacman:
 134: 1814+10	9172  E1      					POP		HL
 135: 1824+10	9173  E1      					POP		HL
 136: 1834+13	9174  3A0581  					LD		A,(pacLives)
 137: 1847+4	9177  3D      					DEC		A
 138: 1851+4	9178  B7      					OR		A
 139: 1855+10	9179  CA949F  					JP		Z,displayGameOver
 140: 1865+13	917C  320581  					LD		(pacLives),A
 141: 1878+17	917F  CDB290  					CALL	resetPacMan
 142: 1895+17	9182  CDD391  					CALL	initGhost
 143: 1912+17	9185  CD029A  					CALL	countdown
 144: 1929+10	9188  212DA1  					LD		HL, home		;Go home
 145: 1939+17	918B  CDA8A0  					CALL	print
 146: 1956+17	918E  CD6098  					CALL 	printMap
 147: 1973+10	9191  C33A90  					JP		gameLoop
 148:				
**** main.asm ****
  71:     -	9194  1B5B3933	pacman:			.BYTE	1BH,"[93mC",1BH,"[0m",0
	              6D431B5B
	              306D00
  72:				;------------Ghost
  73:				include ghosts.asm
**** ghosts.asm ****
   1:     -	8113          	ghostDis		.EQU	8113H		;ghost move distance from pacman
   2:     -	0020          	caughtJaleTime  .EQU    20H
   3:				
   4:     -	919F          	ghostNextMove:
   5: 1983+17	919F  CDDB92  	                CALL    rGhostNextMove
   6: 2000+17	91A2  CD1C94  	                CALL    oGhostNextMove
   7: 2017+17	91A5  CD5D95  	                CALL    pGhostNextMove
   8: 2034+17	91A8  CD9E96  	                CALL    tGhostNextMove
   9: 2051+10	91AB  C9      	                RET
  10:     -	91AC          	clearGhost:
  11: 2061+17	91AC  CD6D92  	                CALL    rGhostClear
  12: 2078+17	91AF  CDAE93  	                CALL    oGhostClear
  13: 2095+17	91B2  CDEF94  	                CALL    pGhostClear
  14: 2112+17	91B5  CD3096  	                CALL    tGhostClear
  15: 2129+10	91B8  C9      	                RET
  16:     -	91B9          	printGhost:
  17: 2139+17	91B9  CD7992  	                CALL    rGhostPrint
  18: 2156+17	91BC  CDBA93  	                CALL    oGhostPrint
  19: 2173+17	91BF  CDFB94  	                CALL    pGhostPrint
  20: 2190+17	91C2  CD3C96  	                CALL    tGhostPrint
  21: 2207+10	91C5  C9      	                RET
  22:     -	91C6          	colideGhost:
  23: 2217+17	91C6  CD6993  	                CALL    rGhostColide
  24: 2234+17	91C9  CDAA94  	                CALL    oGhostColide
  25: 2251+17	91CC  CDEB95  	                CALL    pGhostColide
  26: 2268+17	91CF  CD2C97  	                CALL    tGhostColide
  27: 2285+10	91D2  C9      	                RET
  28:     -	91D3          	initGhost:
  29: 2295+17	91D3  CDA192  	                CALL    rGhostInit
  30: 2312+17	91D6  CDE293  	                CALL    oGhostInit
  31: 2329+17	91D9  CD2395  	                CALL    pGhostInit
  32: 2346+17	91DC  CD6496  	                CALL    tGhostInit
  33: 2363+10	91DF  C9      	                RET
  34:     -	91E0          	moveGhost:
  35: 2373+17	91E0  CDB192  	                CALL    rGhostMove
  36: 2390+17	91E3  CDF293  	                CALL    oGhostMove
  37: 2407+17	91E6  CD3395  	                CALL    pGhostMove
  38: 2424+17	91E9  CD7496  	                CALL    tGhostMove
  39: 2441+10	91EC  C9      	                RET
  40:				
  41:     -	91ED          	printSGhost:
  42: 2451+8	91ED  CB47    	                BIT     0,A
  43: 2459+10	91EF  CAF991  	                JP      Z,sGhost1Print
  44: 2469+10	91F2  217197  	                LD		HL, sGhost0
  45: 2479+17	91F5  CDA8A0  					CALL 	print
  46: 2496+10	91F8  C9      					RET
  47:     -	91F9          	sGhost1Print:
  48: 2506+10	91F9  217C97  	                LD		HL, sGhost1
  49: 2516+17	91FC  CDA8A0  					CALL 	print
  50: 2533+10	91FF  C9      					RET
  51:				
  52:     -	9200          	ghostMove:
  53: 2543+7	9200  FE57    					CP		'W'
  54: 2550+7+5	9202  280A    					JR		Z,ghostMoveU
  55: 2557+7	9204  FE41    					CP		'A'
  56: 2564+7+5	9206  281E    					JR		Z,ghostMoveL
  57: 2571+7	9208  FE53    					CP		'S'
  58: 2578+7+5	920A  280E    					JR		Z,ghostMoveD
  59: 2585+12	920C  1824    					JR		ghostMoveR
  60:				
  61:     -	920E          	ghostMoveU:			
  62: 2597+7	920E  1A      					LD      A, (DE)
  63: 2604+4	920F  6F      	                LD      L,A         ;ld x
  64: 2608+7	9210  0A      	                LD		A, (BC)
  65: 2615+4	9211  3D      					DEC		A
  66: 2619+7	9212  E61F    					AND		00011111B
  67: 2626+4	9214  67      	                LD      H,A         ;ld y
  68: 2630+17	9215  CD3E92  	                CALL    ghostCheckStack
  69: 2647+7	9218  02      					LD		(BC),A
  70: 2654+10	9219  C9      					RET
  71:     -	921A          	ghostMoveD:		
  72: 2664+7	921A  1A      		            LD      A, (DE)
  73: 2671+4	921B  6F      	                LD      L,A         ;ld x
  74: 2675+7	921C  0A      					LD		A, (BC)
  75: 2682+4	921D  3C      					INC		A
  76: 2686+7	921E  E61F    					AND		00011111B
  77: 2693+4	9220  67      	                LD      H,A         ;ld y
  78: 2697+17	9221  CD3E92  	                CALL    ghostCheckStack
  79: 2714+7	9224  02      					LD		(BC),A
  80: 2721+10	9225  C9      					RET
  81:     -	9226          	ghostMoveL:		
  82: 2731+7	9226  0A      	                LD      A, (BC)
  83: 2738+4	9227  67      	                LD      H,A         ;ld y
  84: 2742+7	9228  1A      					LD		A, (DE)
  85: 2749+4	9229  3D      					DEC		A
  86: 2753+7	922A  E61F    					AND		00011111B
  87: 2760+4	922C  6F      	                LD      L,A         ;ld x
  88: 2764+17	922D  CD3E92  	                CALL    ghostCheckStack
  89: 2781+7	9230  12      					LD		(DE),A
  90: 2788+10	9231  C9      					RET
  91:     -	9232          	ghostMoveR:		
  92: 2798+7	9232  0A      	                LD      A, (BC)
  93: 2805+4	9233  67      	                LD      H,A         ;ld y
  94: 2809+7	9234  1A      					LD		A, (DE)
  95: 2816+4	9235  3C      					INC		A
  96: 2820+7	9236  E61F    					AND		00011111B
  97: 2827+4	9238  6F      	                LD      L,A         ;ld x
  98: 2831+17	9239  CD3E92  	                CALL    ghostCheckStack
  99: 2848+7	923C  12      					LD		(DE),A
 100: 2855+10	923D  C9      					RET
 101:     -	923E          	ghostCheckStack:
 102: 2865+11	923E  F5      	                PUSH   AF
 103: 2876+11	923F  C5      	                PUSH   BC
 104: 2887+11	9240  D5      	                PUSH   DE
 105: 2898+17	9241  CD9593  	                CALL   rGhostStack
 106: 2915+10	9244  CA5D92  	                JP     Z,ghostDoStack
 107: 2925+17	9247  CDD694  	                CALL   oGhostStack
 108: 2942+10	924A  CA5D92  	                JP     Z,ghostDoStack
 109: 2952+17	924D  CD1796  	                CALL   pGhostStack
 110: 2969+10	9250  CA5D92  	                JP     Z,ghostDoStack
 111: 2979+17	9253  CD5897  	                CALL   tGhostStack
 112: 2996+10	9256  CA5D92  	                JP     Z,ghostDoStack
 113: 3006+10	9259  D1      	                POP    DE
 114: 3016+10	925A  C1      	                POP    BC
 115: 3026+10	925B  F1      	                POP    AF
 116: 3036+10	925C  C9      	                RET
 117:     -	925D          	ghostDoStack:   
 118: 3046+10	925D  D1      	                POP    DE
 119: 3056+10	925E  C1      	                POP    BC
 120: 3066+10	925F  F1      	                POP    AF
 121: 3076+10	9260  F1      	                POP    AF
 122: 3086+10	9261  C9      	                RET
 123:				
 124:     -	9262          	eatGhost:       
 125: 3096+16	9262  2A0089  	                LD      HL,(score)
 126: 3112+10	9265  010A00  	                LD      BC,10
 127: 3122+11	9268  09      	                ADD     HL,BC
 128: 3133+16	9269  220089  	                LD      (score),HL
 129: 3149+10	926C  C9      	                RET
 130:				                
 131:				include ghosts/red.asm
**** ghosts/red.asm ****
   1:     -	000F          	rGhostInitX	    .EQU	15
   2:     -	0008          	rGhostInitY	    .EQU	8
   3:     -	0010          	rGhostInitTimer .EQU    10H
   4:     -	000E          	rGhostStoreX	.EQU	14
   5:     -	000B          	rGhostStoreY	.EQU	11
   6:				
   7:     -	8110          	rGhostX		    .EQU	8110H		
   8:     -	8111          	rGhostY		    .EQU	8111H
   9:     -	8112          	rGhostDir		.EQU	8112H
  10:     -	8115          	rGhostTimer     .EQU    8115H
  11:				
  12:     -	926D          	rGhostClear:
  13: 3159+13	926D  3A1081  					LD		A, (rGhostX)		;Push X to stack
  14: 3172+4	9270  4F      					LD		C,A
  15: 3176+13	9271  3A1181  					LD		A, (rGhostY)		;Push Y to stack
  16: 3189+4	9274  47      					LD		B,A
  17: 3193+17	9275  CD5198  					CALL 	printMapAt
  18: 3210+10	9278  C9      					RET
  19:								
  20:     -	9279          	rGhostPrint:
  21: 3220+13	9279  3A1081  					LD		A, (rGhostX)		;Push X to stack
  22: 3233+4	927C  3C      					INC		A
  23: 3237+4	927D  4F      					LD		C,A
  24: 3241+13	927E  3A1181  					LD		A, (rGhostY)		;Push Y to stack
  25: 3254+4	9281  3C      					INC		A
  26: 3258+4	9282  47      					LD		B,A
  27: 3262+17	9283  CD32A0  					CALL	moveCursor
  28: 3279+13	9286  3A0481  	                LD      A,(pPActive)
  29: 3292+4	9289  B7      	                OR      A
  30: 3296+10	928A  C2ED91  	                JP      NZ, printSGhost
  31: 3306+10	928D  21A393  					LD		HL, rGhost
  32: 3316+17	9290  CDA8A0  					CALL 	print
  33: 3333+10	9293  C9      					RET
  34:     -	9294          	rGhostMapData:	
  35: 3343+13	9294  3A1081  					LD		A, (rGhostX)
  36: 3356+4	9297  4F      					LD		C,A
  37: 3360+13	9298  3A1181  					LD		A, (rGhostY)
  38: 3373+4	929B  47      					LD		B,A
  39: 3377+17	929C  CDD397  					CALL	getMapAddress
  40: 3394+7	929F  7E      	                LD      A,(HL)
  41: 3401+10	92A0  C9      					ret
  42:				
  43:				
  44:     -	92A1          	rGhostInit:   
  45: 3411+7	92A1  3E0E    	                LD		a, rGhostStoreX	;set rGhost Pos
  46: 3418+13	92A3  321081  				    LD		(rGhostX),a
  47: 3431+7	92A6  3E0B    				    LD		a, rGhostStoreY
  48: 3438+13	92A8  321181  				    LD		(rGhostY),a
  49: 3451+7	92AB  3E10    	                LD		a, rGhostInitTimer
  50: 3458+13	92AD  321581  				    LD		(rGhostTimer),a
  51: 3471+10	92B0  C9      	                RET
  52:				
  53:     -	92B1          	rGhostMove:
  54: 3481+13	92B1  3A1581  	                LD      A,(rGhostTimer)     ;Dont move if the ghost is in jale
  55: 3494+4	92B4  B7      	                OR      A                
  56: 3498+10	92B5  C2CA92  	                JP      NZ,rGhostDecTimer   ;Decrement the timer if its x
  57: 3508+13	92B8  3A0481  	                LD      A,(pPActive)
  58: 3521+8	92BB  CB47    	                BIT     0,A                 ;Move every other tick, bit 0 will always 0 when the power pellet isnt active
  59: 3529+5+6	92BD  C0      	                RET     NZ
  60: 3534+13	92BE  3A1281  					LD		A,(rGhostDir)
  61: 3547+10	92C1  111081  					LD		DE,rGhostX
  62: 3557+10	92C4  011181  					LD		BC,rGhostY
  63: 3567+10	92C7  C30092  					JP		ghostMove
  64:				
  65:				
  66:     -	92CA          	rGhostDecTimer:
  67: 3577+4	92CA  3D      	                DEC     A
  68: 3581+13	92CB  321581  	                LD      (rGhostTimer),A
  69: 3594+4	92CE  B7      	                OR      A
  70: 3598+5+6	92CF  C0      	                RET     NZ              ;IF Zero move ghost out of jale
  71: 3603+7	92D0  3E0F    	                LD		a, rGhostInitX	;set rGhost Pos
  72: 3610+13	92D2  321081  				    LD		(rGhostX),a
  73: 3623+7	92D5  3E08    				    LD		a, rGhostInitY
  74: 3630+13	92D7  321181  				    LD		(rGhostY),a
  75: 3643+10	92DA  C9      	                RET
  76:				
  77:     -	92DB          	rGhostNextMove:
  78: 3653+7	92DB  3EFF    					LD		A, 0FFH
  79: 3660+13	92DD  321381  					LD		(ghostDis),A
  80: 3673+17	92E0  CD9492  					CALL	rGhostMapData
  81: 3690+4	92E3  57      					LD		D,A
  82: 3694+7	92E4  3E57    					LD		A,	'W'			;check up
  83: 3701+17	92E6  CDAD97  					CALL	isMoveValid
  84: 3718+10+7	92E9  C40593  					CALL	NZ,rGhostCheckU
  85: 3728+7	92EC  3E53    					LD		A,	'S'			;down
  86: 3735+17	92EE  CDAD97  					CALL	isMoveValid
  87: 3752+10+7	92F1  C41393  					CALL	NZ,rGhostCheckD
  88: 3762+7	92F4  3E41    					LD		A,	'A'			;left
  89: 3769+17	92F6  CDAD97  					CALL	isMoveValid
  90: 3786+10+7	92F9  C42193  					CALL	NZ,rGhostCheckL
  91: 3796+7	92FC  3E44    					LD		A,	'D'			;right
  92: 3803+17	92FE  CDAD97  					CALL	isMoveValid
  93: 3820+10+7	9301  C42F93  					CALL	NZ,rGhostCheckR
  94: 3830+10	9304  C9      					RET
  95:								
  96:     -	9305          	rGhostCheckU:	
  97: 3840+11	9305  F5      					PUSH	AF
  98: 3851+13	9306  3A1181  					LD		A, (rGhostY)
  99: 3864+4	9309  3D      					DEC		A
 100: 3868+7	930A  E61F    					AND		00011111B
 101: 3875+4	930C  47      					LD		B,A
 102: 3879+13	930D  3A1081  					LD		A,(rGhostX)
 103: 3892+4	9310  4F      					LD		C,A
 104: 3896+12	9311  182A    					JR		rGhostPathFind
 105:     -	9313          	rGhostCheckD:			
 106: 3908+11	9313  F5      					PUSH	AF
 107: 3919+13	9314  3A1181  					LD		A, (rGhostY)
 108: 3932+4	9317  3C      					INC		A
 109: 3936+7	9318  E61F    					AND		00011111B
 110: 3943+4	931A  47      					LD		B,A
 111: 3947+13	931B  3A1081  					LD		A,(rGhostX)
 112: 3960+4	931E  4F      					LD		C,A
 113: 3964+12	931F  181C    					JR		rGhostPathFind
 114:     -	9321          	rGhostCheckL:		
 115: 3976+11	9321  F5      					PUSH	AF	
 116: 3987+13	9322  3A1081  					LD		A, (rGhostX)
 117: 4000+4	9325  3D      					DEC		A
 118: 4004+7	9326  E61F    					AND		00011111B
 119: 4011+4	9328  4F      					LD		C,A
 120: 4015+13	9329  3A1181  					LD		A,(rGhostY)
 121: 4028+4	932C  47      					LD		B,A
 122: 4032+12	932D  180E    					JR		rGhostPathFind
 123:     -	932F          	rGhostCheckR:
 124: 4044+11	932F  F5      					PUSH	AF	
 125: 4055+13	9330  3A1081  					LD		A, (rGhostX)
 126: 4068+4	9333  3C      					INC		A
 127: 4072+7	9334  E61F    					AND		00011111B
 128: 4079+4	9336  4F      					LD		C,A
 129: 4083+13	9337  3A1181  					LD		A,(rGhostY)
 130: 4096+4	933A  47      					LD		B,A
 131: 4100+12	933B  1800    					JR		rGhostPathFind
 132:				
 133:     -	933D          	rGhostPathFind:
 134: 4112+17	933D  CD3998  					CALL	getAddressPF
 135: 4129+13	9340  3A1381  					LD		A,(ghostDis)
 136: 4142+7	9343  5E      					LD		E,(HL)
 137: 4149+4	9344  BB      					CP		E
 138: 4153+11	9345  F5      	                PUSH    AF
 139: 4164+13	9346  3A0481  	                LD      A,(pPActive)            ;Check power pellet is not activ, if it is, run away
 140: 4177+4	9349  B7      	                OR      A
 141: 4181+10	934A  C25493  	                JP      NZ,rGhostPFPP
 142: 4191+10	934D  F1      	                POP     AF
 143: 4201+10	934E  D26093  					JP		NC,rGhostSetNewDir
 144: 4211+10	9351  F1      	                POP     AF
 145: 4221+10	9352  F1      					POP		AF
 146: 4231+10	9353  C9      					RET
 147:     -	9354          	rGhostPFPP:
 148: 4241+10	9354  F1      	                POP     AF
 149: 4251+10	9355  DA6093  	                JP		C,rGhostSetNewDir
 150: 4261+7	9358  FEFF    	                CP      0FFH
 151: 4268+10	935A  CA6093  	                JP      Z,rGhostSetNewDir
 152: 4278+10	935D  F1      	                POP     AF
 153: 4288+10	935E  F1      					POP		AF
 154: 4298+10	935F  C9      	                RET
 155:				
 156:     -	9360          	rGhostSetNewDir:
 157: 4308+4	9360  7B      					LD		A,E
 158: 4312+13	9361  321381  					LD		(ghostDis),A
 159: 4325+10	9364  F1      					POP		AF
 160: 4335+13	9365  321281  					LD		(rGhostDir),A
 161: 4348+10	9368  C9      					RET
 162:				
 163:     -	9369          	rGhostColide:   
 164: 4358+13	9369  3A0081  	                LD      A,(pacx)                ;Compair X
 165: 4371+4	936C  47      	                LD      B,A
 166: 4375+13	936D  3A1081  	                LD      A,(rGhostX)
 167: 4388+4	9370  B8      	                CP      B
 168: 4392+5+6	9371  C0      	                RET     NZ
 169: 4397+13	9372  3A0181  	                LD      A,(pacy)                ;Compair Y
 170: 4410+4	9375  47      	                LD      B,A
 171: 4414+13	9376  3A1181  	                LD      A,(rGhostY)
 172: 4427+4	9379  B8      	                CP      B
 173: 4431+5+6	937A  C0      	                RET     NZ
 174: 4436+13	937B  3A0481  	                LD      A,(pPActive)              ;Colishion Happened
 175: 4449+4	937E  B7      	                OR      A
 176: 4453+10	937F  CA7291  	                JP      Z,killPacman               ;If power pellet not active, run genric deth lib
 177: 4463+17	9382  CD6292  					CALL	eatGhost
 178: 4480+7	9385  3E0E    	                LD		a, rGhostStoreX	           ;set rGhost Pos
 179: 4487+13	9387  321081  				    LD		(rGhostX),a
 180: 4500+7	938A  3E0B    				    LD		a, rGhostStoreY
 181: 4507+13	938C  321181  				    LD		(rGhostY),a
 182: 4520+7	938F  3E10    	                LD		a, rGhostInitTimer
 183: 4527+13	9391  321581  				    LD		(rGhostTimer),a
 184: 4540+10	9394  C9      	                RET
 185:				;x = l
 186:				;y = h
 187:     -	9395          	rGhostStack:
 188: 4550+4	9395  7D      					LD      A,L               		;Compair X
 189: 4554+4	9396  47      	                LD      B,A
 190: 4558+13	9397  3A1081  	                LD      A,(rGhostX)
 191: 4571+4	939A  B8      	                CP      B
 192: 4575+5+6	939B  C0      	                RET     NZ
 193: 4580+4	939C  7C      	                LD      A,h                		;Compair Y
 194: 4584+4	939D  47      	                LD      B,A
 195: 4588+13	939E  3A1181  	                LD      A,(rGhostY)
 196: 4601+4	93A1  B8      	                CP      B
 197: 4605+10	93A2  C9      	                RET
 198:				
**** ghosts.asm ****
 132:     -	93A3  1B5B3931	rGhost:		.BYTE	1BH,"[91mM",1BH,"[0m",0
	              6D4D1B5B
	              306D00
 133:				include ghosts/orange.asm
**** ghosts/orange.asm ****
   1:     -	000F          	oGhostInitX	    .EQU	15
   2:     -	0008          	oGhostInitY	    .EQU	8
   3:     -	0020          	oGhostInitTimer .EQU    20H
   4:     -	000F          	oGhostStoreX	.EQU	15
   5:     -	000B          	oGhostStoreY	.EQU	11
   6:				
   7:     -	8120          	oGhostX		    .EQU	8120H		
   8:     -	8121          	oGhostY		    .EQU	8121H
   9:     -	8122          	oGhostDir		.EQU	8122H
  10:     -	8125          	oGhostTimer     .EQU    8125H
  11:				
  12:     -	93AE          	oGhostClear:
  13: 4615+13	93AE  3A2081  					LD		A, (oGhostX)		;Push X to stack
  14: 4628+4	93B1  4F      					LD		C,A
  15: 4632+13	93B2  3A2181  					LD		A, (oGhostY)		;Push Y to stack
  16: 4645+4	93B5  47      					LD		B,A
  17: 4649+17	93B6  CD5198  					CALL 	printMapAt
  18: 4666+10	93B9  C9      					RET
  19:								
  20:     -	93BA          	oGhostPrint:
  21: 4676+13	93BA  3A2081  					LD		A, (oGhostX)		;Push X to stack
  22: 4689+4	93BD  3C      					INC		A
  23: 4693+4	93BE  4F      					LD		C,A
  24: 4697+13	93BF  3A2181  					LD		A, (oGhostY)		;Push Y to stack
  25: 4710+4	93C2  3C      					INC		A
  26: 4714+4	93C3  47      					LD		B,A
  27: 4718+17	93C4  CD32A0  					CALL	moveCursor
  28: 4735+13	93C7  3A0481  	                LD      A,(pPActive)
  29: 4748+4	93CA  B7      	                OR      A
  30: 4752+10	93CB  C2ED91  	                JP      NZ, printSGhost
  31: 4762+10	93CE  21E494  					LD		HL, oGhost
  32: 4772+17	93D1  CDA8A0  					CALL 	print
  33: 4789+10	93D4  C9      					RET
  34:     -	93D5          	oGhostMapData:	
  35: 4799+13	93D5  3A2081  					LD		A, (oGhostX)
  36: 4812+4	93D8  4F      					LD		C,A
  37: 4816+13	93D9  3A2181  					LD		A, (oGhostY)
  38: 4829+4	93DC  47      					LD		B,A
  39: 4833+17	93DD  CDD397  					CALL	getMapAddress
  40: 4850+7	93E0  7E      	                LD      A,(HL)
  41: 4857+10	93E1  C9      					ret
  42:				
  43:				
  44:     -	93E2          	oGhostInit:   
  45: 4867+7	93E2  3E0F    	                LD		a, oGhostStoreX	;set oGhost Pos
  46: 4874+13	93E4  322081  				    LD		(oGhostX),a
  47: 4887+7	93E7  3E0B    				    LD		a, oGhostStoreY
  48: 4894+13	93E9  322181  				    LD		(oGhostY),a
  49: 4907+7	93EC  3E20    	                LD		a, oGhostInitTimer
  50: 4914+13	93EE  322581  				    LD		(oGhostTimer),a
  51: 4927+10	93F1  C9      	                RET
  52:				
  53:     -	93F2          	oGhostMove:
  54: 4937+13	93F2  3A2581  	                LD      A,(oGhostTimer)     ;Dont move if the ghost is in jale
  55: 4950+4	93F5  B7      	                OR      A                
  56: 4954+10	93F6  C20B94  	                JP      NZ,oGhostDecTimer   ;Decrement the timer if its x
  57: 4964+13	93F9  3A0481  	                LD      A,(pPActive)
  58: 4977+8	93FC  CB47    	                BIT     0,A                 ;Move every other tick, bit 0 will always 0 when the power pellet isnt active
  59: 4985+5+6	93FE  C0      	                RET     NZ
  60: 4990+13	93FF  3A2281  					LD		A,(oGhostDir)
  61: 5003+10	9402  112081  					LD		DE,oGhostX
  62: 5013+10	9405  012181  					LD		BC,oGhostY
  63: 5023+10	9408  C30092  					JP		ghostMove
  64:				
  65:     -	940B          	oGhostDecTimer:
  66: 5033+4	940B  3D      	                DEC     A
  67: 5037+13	940C  322581  	                LD      (oGhostTimer),A
  68: 5050+4	940F  B7      	                OR      A
  69: 5054+5+6	9410  C0      	                RET     NZ              ;IF Zero move ghost out of jale
  70: 5059+7	9411  3E0F    	                LD		a, oGhostInitX	;set oGhost Pos
  71: 5066+13	9413  322081  				    LD		(oGhostX),a
  72: 5079+7	9416  3E08    				    LD		a, oGhostInitY
  73: 5086+13	9418  322181  				    LD		(oGhostY),a
  74: 5099+10	941B  C9      	                RET
  75:				
  76:     -	941C          	oGhostNextMove:
  77: 5109+7	941C  3EFF    					LD		A, 0FFH
  78: 5116+13	941E  321381  					LD		(ghostDis),A
  79: 5129+17	9421  CDD593  					CALL	oGhostMapData
  80: 5146+4	9424  57      					LD		D,A
  81: 5150+7	9425  3E57    					LD		A,	'W'			;check up
  82: 5157+17	9427  CDAD97  					CALL	isMoveValid
  83: 5174+10+7	942A  C44694  					CALL	NZ,oGhostCheckU
  84: 5184+7	942D  3E53    					LD		A,	'S'			;down
  85: 5191+17	942F  CDAD97  					CALL	isMoveValid
  86: 5208+10+7	9432  C45494  					CALL	NZ,oGhostCheckD
  87: 5218+7	9435  3E41    					LD		A,	'A'			;left
  88: 5225+17	9437  CDAD97  					CALL	isMoveValid
  89: 5242+10+7	943A  C46294  					CALL	NZ,oGhostCheckL
  90: 5252+7	943D  3E44    					LD		A,	'D'			;right
  91: 5259+17	943F  CDAD97  					CALL	isMoveValid
  92: 5276+10+7	9442  C47094  					CALL	NZ,oGhostCheckR
  93: 5286+10	9445  C9      					RET
  94:								
  95:     -	9446          	oGhostCheckU:	
  96: 5296+11	9446  F5      					PUSH	AF
  97: 5307+13	9447  3A2181  					LD		A, (oGhostY)
  98: 5320+4	944A  3D      					DEC		A
  99: 5324+7	944B  E61F    					AND		00011111B
 100: 5331+4	944D  47      					LD		B,A
 101: 5335+13	944E  3A2081  					LD		A,(oGhostX)
 102: 5348+4	9451  4F      					LD		C,A
 103: 5352+12	9452  182A    					JR		oGhostPathFind
 104:     -	9454          	oGhostCheckD:			
 105: 5364+11	9454  F5      					PUSH	AF
 106: 5375+13	9455  3A2181  					LD		A, (oGhostY)
 107: 5388+4	9458  3C      					INC		A
 108: 5392+7	9459  E61F    					AND		00011111B
 109: 5399+4	945B  47      					LD		B,A
 110: 5403+13	945C  3A2081  					LD		A,(oGhostX)
 111: 5416+4	945F  4F      					LD		C,A
 112: 5420+12	9460  181C    					JR		oGhostPathFind
 113:     -	9462          	oGhostCheckL:		
 114: 5432+11	9462  F5      					PUSH	AF	
 115: 5443+13	9463  3A2081  					LD		A, (oGhostX)
 116: 5456+4	9466  3D      					DEC		A
 117: 5460+7	9467  E61F    					AND		00011111B
 118: 5467+4	9469  4F      					LD		C,A
 119: 5471+13	946A  3A2181  					LD		A,(oGhostY)
 120: 5484+4	946D  47      					LD		B,A
 121: 5488+12	946E  180E    					JR		oGhostPathFind
 122:     -	9470          	oGhostCheckR:
 123: 5500+11	9470  F5      					PUSH	AF	
 124: 5511+13	9471  3A2081  					LD		A, (oGhostX)
 125: 5524+4	9474  3C      					INC		A
 126: 5528+7	9475  E61F    					AND		00011111B
 127: 5535+4	9477  4F      					LD		C,A
 128: 5539+13	9478  3A2181  					LD		A,(oGhostY)
 129: 5552+4	947B  47      					LD		B,A
 130: 5556+12	947C  1800    					JR		oGhostPathFind
 131:				
 132:     -	947E          	oGhostPathFind:
 133: 5568+17	947E  CD3998  					CALL	getAddressPF
 134: 5585+13	9481  3A1381  					LD		A,(ghostDis)
 135: 5598+7	9484  5E      					LD		E,(HL)
 136: 5605+4	9485  BB      					CP		E
 137: 5609+11	9486  F5      	                PUSH    AF
 138: 5620+13	9487  3A0481  	                LD      A,(pPActive)            ;Check power pellet is not activ, if it is, run away
 139: 5633+4	948A  B7      	                OR      A
 140: 5637+10	948B  C29594  	                JP      NZ,oGhostPFPP
 141: 5647+10	948E  F1      	                POP     AF
 142: 5657+10	948F  D2A194  					JP		NC,oGhostSetNewDir
 143: 5667+10	9492  F1      	                POP     AF
 144: 5677+10	9493  F1      					POP		AF
 145: 5687+10	9494  C9      					RET
 146:     -	9495          	oGhostPFPP:
 147: 5697+10	9495  F1      	                POP     AF
 148: 5707+10	9496  DAA194  	                JP		C,oGhostSetNewDir
 149: 5717+7	9499  FEFF    	                CP      0FFH
 150: 5724+10	949B  CAA194  	                JP      Z,oGhostSetNewDir
 151: 5734+10	949E  F1      	                POP     AF
 152: 5744+10	949F  F1      					POP		AF
 153: 5754+10	94A0  C9      	                RET
 154:				
 155:     -	94A1          	oGhostSetNewDir:
 156: 5764+4	94A1  7B      					LD		A,E
 157: 5768+13	94A2  321381  					LD		(ghostDis),A
 158: 5781+10	94A5  F1      					POP		AF
 159: 5791+13	94A6  322281  					LD		(oGhostDir),A
 160: 5804+10	94A9  C9      					RET
 161:				
 162:     -	94AA          	oGhostColide:   
 163: 5814+13	94AA  3A0081  	                LD      A,(pacx)                ;Compair X
 164: 5827+4	94AD  47      	                LD      B,A
 165: 5831+13	94AE  3A2081  	                LD      A,(oGhostX)
 166: 5844+4	94B1  B8      	                CP      B
 167: 5848+5+6	94B2  C0      	                RET     NZ
 168: 5853+13	94B3  3A0181  	                LD      A,(pacy)                ;Compair Y
 169: 5866+4	94B6  47      	                LD      B,A
 170: 5870+13	94B7  3A2181  	                LD      A,(oGhostY)
 171: 5883+4	94BA  B8      	                CP      B
 172: 5887+5+6	94BB  C0      	                RET     NZ
 173: 5892+13	94BC  3A0481  	                LD      A,(pPActive)              ;Colishion Happened
 174: 5905+4	94BF  B7      	                OR      A
 175: 5909+10	94C0  CA7291  	                JP      Z,killPacman               ;If power pellet not active, run genric deth lib
 176: 5919+17	94C3  CD6292  					CALL	eatGhost
 177: 5936+7	94C6  3E0F    	                LD		a, oGhostStoreX	           ;set oGhost Pos
 178: 5943+13	94C8  322081  				    LD		(oGhostX),a
 179: 5956+7	94CB  3E0B    				    LD		a, oGhostStoreY
 180: 5963+13	94CD  322181  				    LD		(oGhostY),a
 181: 5976+7	94D0  3E20    	                LD		a, oGhostInitTimer
 182: 5983+13	94D2  322581  				    LD		(oGhostTimer),a
 183: 5996+10	94D5  C9      	                RET
 184:				;x = l
 185:				;y = h
 186:     -	94D6          	oGhostStack:
 187: 6006+4	94D6  7D      					LD      A,L               		;Compair X
 188: 6010+4	94D7  47      	                LD      B,A
 189: 6014+13	94D8  3A2081  	                LD      A,(oGhostX)
 190: 6027+4	94DB  B8      	                CP      B
 191: 6031+5+6	94DC  C0      	                RET     NZ
 192: 6036+4	94DD  7C      	                LD      A,h                		;Compair Y
 193: 6040+4	94DE  47      	                LD      B,A
 194: 6044+13	94DF  3A2181  	                LD      A,(oGhostY)
 195: 6057+4	94E2  B8      	                CP      B
 196: 6061+10	94E3  C9      	                RET
 197:				
**** ghosts.asm ****
 134:     -	94E4  1B5B3333	oGhost:		.BYTE	1BH,"[33mM",1BH,"[0m",0
	              6D4D1B5B
	              306D00
 135:				include ghosts/pink.asm
**** ghosts/pink.asm ****
   1:     -	000F          	pGhostInitX	    .EQU	15
   2:     -	0008          	pGhostInitY	    .EQU	8
   3:     -	0030          	pGhostInitTimer .EQU    30H
   4:     -	0010          	pGhostStoreX	.EQU	16
   5:     -	000B          	pGhostStoreY	.EQU	11
   6:				
   7:     -	8130          	pGhostX		    .EQU	8130H		
   8:     -	8131          	pGhostY		    .EQU	8131H
   9:     -	8132          	pGhostDir		.EQU	8132H
  10:     -	8135          	pGhostTimer     .EQU    8135H
  11:				
  12:     -	94EF          	pGhostClear:
  13: 6071+13	94EF  3A3081  					LD		A, (pGhostX)		;Push X to stack
  14: 6084+4	94F2  4F      					LD		C,A
  15: 6088+13	94F3  3A3181  					LD		A, (pGhostY)		;Push Y to stack
  16: 6101+4	94F6  47      					LD		B,A
  17: 6105+17	94F7  CD5198  					CALL 	printMapAt
  18: 6122+10	94FA  C9      					RET
  19:								
  20:     -	94FB          	pGhostPrint:
  21: 6132+13	94FB  3A3081  					LD		A, (pGhostX)		;Push X to stack
  22: 6145+4	94FE  3C      					INC		A
  23: 6149+4	94FF  4F      					LD		C,A
  24: 6153+13	9500  3A3181  					LD		A, (pGhostY)		;Push Y to stack
  25: 6166+4	9503  3C      					INC		A
  26: 6170+4	9504  47      					LD		B,A
  27: 6174+17	9505  CD32A0  					CALL	moveCursor
  28: 6191+13	9508  3A0481  	                LD      A,(pPActive)
  29: 6204+4	950B  B7      	                OR      A
  30: 6208+10	950C  C2ED91  	                JP      NZ, printSGhost
  31: 6218+10	950F  212596  					LD		HL, pGhost
  32: 6228+17	9512  CDA8A0  					CALL 	print
  33: 6245+10	9515  C9      					RET
  34:     -	9516          	pGhostMapData:	
  35: 6255+13	9516  3A3081  					LD		A, (pGhostX)
  36: 6268+4	9519  4F      					LD		C,A
  37: 6272+13	951A  3A3181  					LD		A, (pGhostY)
  38: 6285+4	951D  47      					LD		B,A
  39: 6289+17	951E  CDD397  					CALL	getMapAddress
  40: 6306+7	9521  7E      	                LD      A,(HL)
  41: 6313+10	9522  C9      					ret
  42:				
  43:				
  44:     -	9523          	pGhostInit:   
  45: 6323+7	9523  3E10    	                LD		a, pGhostStoreX	;set pGhost Pos
  46: 6330+13	9525  323081  				    LD		(pGhostX),a
  47: 6343+7	9528  3E0B    				    LD		a, pGhostStoreY
  48: 6350+13	952A  323181  				    LD		(pGhostY),a
  49: 6363+7	952D  3E30    	                LD		a, pGhostInitTimer
  50: 6370+13	952F  323581  				    LD		(pGhostTimer),a
  51: 6383+10	9532  C9      	                RET
  52:				
  53:     -	9533          	pGhostMove:
  54: 6393+13	9533  3A3581  	                LD      A,(pGhostTimer)     ;Dont move if the ghost is in jale
  55: 6406+4	9536  B7      	                OR      A                
  56: 6410+10	9537  C24C95  	                JP      NZ,pGhostDecTimer   ;Decrement the timer if its x
  57: 6420+13	953A  3A0481  	                LD      A,(pPActive)
  58: 6433+8	953D  CB47    	                BIT     0,A                 ;Move every other tick, bit 0 will always 0 when the power pellet isnt active
  59: 6441+5+6	953F  C0      	                RET     NZ
  60: 6446+13	9540  3A3281  					LD		A,(pGhostDir)
  61: 6459+10	9543  113081  					LD		DE,pGhostX
  62: 6469+10	9546  013181  					LD		BC,pGhostY
  63: 6479+10	9549  C30092  					JP		ghostMove
  64:				
  65:				
  66:     -	954C          	pGhostDecTimer:
  67: 6489+4	954C  3D      	                DEC     A
  68: 6493+13	954D  323581  	                LD      (pGhostTimer),A
  69: 6506+4	9550  B7      	                OR      A
  70: 6510+5+6	9551  C0      	                RET     NZ              ;IF Zero move ghost out of jale
  71: 6515+7	9552  3E0F    	                LD		a, pGhostInitX	;set pGhost Pos
  72: 6522+13	9554  323081  				    LD		(pGhostX),a
  73: 6535+7	9557  3E08    				    LD		a, pGhostInitY
  74: 6542+13	9559  323181  				    LD		(pGhostY),a
  75: 6555+10	955C  C9      	                RET
  76:				
  77:     -	955D          	pGhostNextMove:
  78: 6565+7	955D  3EFF    					LD		A, 0FFH
  79: 6572+13	955F  321381  					LD		(ghostDis),A
  80: 6585+17	9562  CD1695  					CALL	pGhostMapData
  81: 6602+4	9565  57      					LD		D,A
  82: 6606+7	9566  3E57    					LD		A,	'W'			;check up
  83: 6613+17	9568  CDAD97  					CALL	isMoveValid
  84: 6630+10+7	956B  C48795  					CALL	NZ,pGhostCheckU
  85: 6640+7	956E  3E53    					LD		A,	'S'			;down
  86: 6647+17	9570  CDAD97  					CALL	isMoveValid
  87: 6664+10+7	9573  C49595  					CALL	NZ,pGhostCheckD
  88: 6674+7	9576  3E41    					LD		A,	'A'			;left
  89: 6681+17	9578  CDAD97  					CALL	isMoveValid
  90: 6698+10+7	957B  C4A395  					CALL	NZ,pGhostCheckL
  91: 6708+7	957E  3E44    					LD		A,	'D'			;right
  92: 6715+17	9580  CDAD97  					CALL	isMoveValid
  93: 6732+10+7	9583  C4B195  					CALL	NZ,pGhostCheckR
  94: 6742+10	9586  C9      					RET
  95:								
  96:     -	9587          	pGhostCheckU:	
  97: 6752+11	9587  F5      					PUSH	AF
  98: 6763+13	9588  3A3181  					LD		A, (pGhostY)
  99: 6776+4	958B  3D      					DEC		A
 100: 6780+7	958C  E61F    					AND		00011111B
 101: 6787+4	958E  47      					LD		B,A
 102: 6791+13	958F  3A3081  					LD		A,(pGhostX)
 103: 6804+4	9592  4F      					LD		C,A
 104: 6808+12	9593  182A    					JR		pGhostPathFind
 105:     -	9595          	pGhostCheckD:			
 106: 6820+11	9595  F5      					PUSH	AF
 107: 6831+13	9596  3A3181  					LD		A, (pGhostY)
 108: 6844+4	9599  3C      					INC		A
 109: 6848+7	959A  E61F    					AND		00011111B
 110: 6855+4	959C  47      					LD		B,A
 111: 6859+13	959D  3A3081  					LD		A,(pGhostX)
 112: 6872+4	95A0  4F      					LD		C,A
 113: 6876+12	95A1  181C    					JR		pGhostPathFind
 114:     -	95A3          	pGhostCheckL:		
 115: 6888+11	95A3  F5      					PUSH	AF	
 116: 6899+13	95A4  3A3081  					LD		A, (pGhostX)
 117: 6912+4	95A7  3D      					DEC		A
 118: 6916+7	95A8  E61F    					AND		00011111B
 119: 6923+4	95AA  4F      					LD		C,A
 120: 6927+13	95AB  3A3181  					LD		A,(pGhostY)
 121: 6940+4	95AE  47      					LD		B,A
 122: 6944+12	95AF  180E    					JR		pGhostPathFind
 123:     -	95B1          	pGhostCheckR:
 124: 6956+11	95B1  F5      					PUSH	AF	
 125: 6967+13	95B2  3A3081  					LD		A, (pGhostX)
 126: 6980+4	95B5  3C      					INC		A
 127: 6984+7	95B6  E61F    					AND		00011111B
 128: 6991+4	95B8  4F      					LD		C,A
 129: 6995+13	95B9  3A3181  					LD		A,(pGhostY)
 130: 7008+4	95BC  47      					LD		B,A
 131: 7012+12	95BD  1800    					JR		pGhostPathFind
 132:				
 133:     -	95BF          	pGhostPathFind:
 134: 7024+17	95BF  CD3998  					CALL	getAddressPF
 135: 7041+13	95C2  3A1381  					LD		A,(ghostDis)
 136: 7054+7	95C5  5E      					LD		E,(HL)
 137: 7061+4	95C6  BB      					CP		E
 138: 7065+11	95C7  F5      	                PUSH    AF
 139: 7076+13	95C8  3A0481  	                LD      A,(pPActive)            ;Check power pellet is not activ, if it is, run away
 140: 7089+4	95CB  B7      	                OR      A
 141: 7093+10	95CC  C2D695  	                JP      NZ,pGhostPFPP
 142: 7103+10	95CF  F1      	                POP     AF
 143: 7113+10	95D0  D2E295  					JP		NC,pGhostSetNewDir
 144: 7123+10	95D3  F1      	                POP     AF
 145: 7133+10	95D4  F1      					POP		AF
 146: 7143+10	95D5  C9      					RET
 147:     -	95D6          	pGhostPFPP:
 148: 7153+10	95D6  F1      	                POP     AF
 149: 7163+10	95D7  DAE295  	                JP		C,pGhostSetNewDir
 150: 7173+7	95DA  FEFF    	                CP      0FFH
 151: 7180+10	95DC  CAE295  	                JP      Z,pGhostSetNewDir
 152: 7190+10	95DF  F1      	                POP     AF
 153: 7200+10	95E0  F1      					POP		AF
 154: 7210+10	95E1  C9      	                RET
 155:				
 156:     -	95E2          	pGhostSetNewDir:
 157: 7220+4	95E2  7B      					LD		A,E
 158: 7224+13	95E3  321381  					LD		(ghostDis),A
 159: 7237+10	95E6  F1      					POP		AF
 160: 7247+13	95E7  323281  					LD		(pGhostDir),A
 161: 7260+10	95EA  C9      					RET
 162:				
 163:     -	95EB          	pGhostColide:   
 164: 7270+13	95EB  3A0081  	                LD      A,(pacx)                ;Compair X
 165: 7283+4	95EE  47      	                LD      B,A
 166: 7287+13	95EF  3A3081  	                LD      A,(pGhostX)
 167: 7300+4	95F2  B8      	                CP      B
 168: 7304+5+6	95F3  C0      	                RET     NZ
 169: 7309+13	95F4  3A0181  	                LD      A,(pacy)                ;Compair Y
 170: 7322+4	95F7  47      	                LD      B,A
 171: 7326+13	95F8  3A3181  	                LD      A,(pGhostY)
 172: 7339+4	95FB  B8      	                CP      B
 173: 7343+5+6	95FC  C0      	                RET     NZ
 174: 7348+13	95FD  3A0481  	                LD      A,(pPActive)              ;Colishion Happened
 175: 7361+4	9600  B7      	                OR      A
 176: 7365+10	9601  CA7291  	                JP      Z,killPacman               ;If power pellet not active, run genric deth lib
 177: 7375+17	9604  CD6292  					CALL	eatGhost
 178: 7392+7	9607  3E10    	                LD		a, pGhostStoreX	           ;set pGhost Pos
 179: 7399+13	9609  323081  				    LD		(pGhostX),a
 180: 7412+7	960C  3E0B    				    LD		a, pGhostStoreY
 181: 7419+13	960E  323181  				    LD		(pGhostY),a
 182: 7432+7	9611  3E30    	                LD		a, pGhostInitTimer
 183: 7439+13	9613  323581  				    LD		(pGhostTimer),a
 184: 7452+10	9616  C9      	                RET
 185:				
 186:				;x = l
 187:				;y = h
 188:     -	9617          	pGhostStack:
 189: 7462+4	9617  7D      					LD      A,L               		;Compair X
 190: 7466+4	9618  47      	                LD      B,A
 191: 7470+13	9619  3A3081  	                LD      A,(pGhostX)
 192: 7483+4	961C  B8      	                CP      B
 193: 7487+5+6	961D  C0      	                RET     NZ
 194: 7492+4	961E  7C      	                LD      A,h                		;Compair Y
 195: 7496+4	961F  47      	                LD      B,A
 196: 7500+13	9620  3A3181  	                LD      A,(pGhostY)
 197: 7513+4	9623  B8      	                CP      B
 198: 7517+10	9624  C9      	                RET
 199:				
**** ghosts.asm ****
 136:     -	9625  1B5B3935	pGhost:		.BYTE	1BH,"[95mM",1BH,"[0m",0
	              6D4D1B5B
	              306D00
 137:				include ghosts/teal.asm
**** ghosts/teal.asm ****
   1:     -	000F          	tGhostInitX	    .EQU	15
   2:     -	0008          	tGhostInitY	    .EQU	8
   3:     -	0040          	tGhostInitTimer .EQU    40H
   4:     -	0011          	tGhostStoreX	.EQU	17 
   5:     -	000B          	tGhostStoreY	.EQU	11
   6:				
   7:     -	8140          	tGhostX		    .EQU	8140H		
   8:     -	8141          	tGhostY		    .EQU	8141H
   9:     -	8142          	tGhostDir		.EQU	8142H
  10:     -	8145          	tGhostTimer     .EQU    8145H
  11:				
  12:     -	9630          	tGhostClear:
  13: 7527+13	9630  3A4081  					LD		A, (tGhostX)		;Push X to stack
  14: 7540+4	9633  4F      					LD		C,A
  15: 7544+13	9634  3A4181  					LD		A, (tGhostY)		;Push Y to stack
  16: 7557+4	9637  47      					LD		B,A
  17: 7561+17	9638  CD5198  					CALL 	printMapAt
  18: 7578+10	963B  C9      					RET
  19:								
  20:     -	963C          	tGhostPrint:
  21: 7588+13	963C  3A4081  					LD		A, (tGhostX)		;Push X to stack
  22: 7601+4	963F  3C      					INC		A
  23: 7605+4	9640  4F      					LD		C,A
  24: 7609+13	9641  3A4181  					LD		A, (tGhostY)		;Push Y to stack
  25: 7622+4	9644  3C      					INC		A
  26: 7626+4	9645  47      					LD		B,A
  27: 7630+17	9646  CD32A0  					CALL	moveCursor
  28: 7647+13	9649  3A0481  	                LD      A,(pPActive)
  29: 7660+4	964C  B7      	                OR      A
  30: 7664+10	964D  C2ED91  	                JP      NZ, printSGhost
  31: 7674+10	9650  216697  					LD		HL, tGhost
  32: 7684+17	9653  CDA8A0  					CALL 	print
  33: 7701+10	9656  C9      					RET
  34:     -	9657          	tGhostMapData:	
  35: 7711+13	9657  3A4081  					LD		A, (tGhostX)
  36: 7724+4	965A  4F      					LD		C,A
  37: 7728+13	965B  3A4181  					LD		A, (tGhostY)
  38: 7741+4	965E  47      					LD		B,A
  39: 7745+17	965F  CDD397  					CALL	getMapAddress
  40: 7762+7	9662  7E      	                LD      A,(HL)
  41: 7769+10	9663  C9      					ret
  42:				
  43:     -	9664          	tGhostInit:   
  44: 7779+7	9664  3E11    	                LD		a, tGhostStoreX	;set tGhost Pos
  45: 7786+13	9666  324081  				    LD		(tGhostX),a
  46: 7799+7	9669  3E0B    				    LD		a, tGhostStoreY
  47: 7806+13	966B  324181  				    LD		(tGhostY),a
  48: 7819+7	966E  3E40    	                LD		a, tGhostInitTimer
  49: 7826+13	9670  324581  				    LD		(tGhostTimer),a
  50: 7839+10	9673  C9      	                RET
  51:				
  52:     -	9674          	tGhostMove:
  53: 7849+13	9674  3A4581  	                LD      A,(tGhostTimer)     ;Dont move if the ghost is in jale
  54: 7862+4	9677  B7      	                OR      A                
  55: 7866+10	9678  C28D96  	                JP      NZ,tGhostDecTimer   ;Decrement the timer if its x
  56: 7876+13	967B  3A0481  	                LD      A,(pPActive)
  57: 7889+8	967E  CB47    	                BIT     0,A                 ;Move every other tick, bit 0 will always 0 when the power pellet isnt active
  58: 7897+5+6	9680  C0      	                RET     NZ
  59: 7902+13	9681  3A4281  					LD		A,(tGhostDir)
  60: 7915+10	9684  114081  					LD		DE,tGhostX
  61: 7925+10	9687  014181  					LD		BC,tGhostY
  62: 7935+10	968A  C30092  					JP		ghostMove
  63:				
  64:     -	968D          	tGhostDecTimer:
  65: 7945+4	968D  3D      	                DEC     A
  66: 7949+13	968E  324581  	                LD      (tGhostTimer),A
  67: 7962+4	9691  B7      	                OR      A
  68: 7966+5+6	9692  C0      	                RET     NZ              ;IF Zero move ghost out of jale
  69: 7971+7	9693  3E0F    	                LD		a, tGhostInitX	;set tGhost Pos
  70: 7978+13	9695  324081  				    LD		(tGhostX),a
  71: 7991+7	9698  3E08    				    LD		a, tGhostInitY
  72: 7998+13	969A  324181  				    LD		(tGhostY),a
  73: 8011+10	969D  C9      	                RET
  74:				
  75:     -	969E          	tGhostNextMove:
  76: 8021+7	969E  3EFF    					LD		A, 0FFH
  77: 8028+13	96A0  321381  					LD		(ghostDis),A
  78: 8041+17	96A3  CD5796  					CALL	tGhostMapData
  79: 8058+4	96A6  57      					LD		D,A
  80: 8062+7	96A7  3E57    					LD		A,	'W'			;check up
  81: 8069+17	96A9  CDAD97  					CALL	isMoveValid
  82: 8086+10+7	96AC  C4C896  					CALL	NZ,tGhostCheckU
  83: 8096+7	96AF  3E53    					LD		A,	'S'			;down
  84: 8103+17	96B1  CDAD97  					CALL	isMoveValid
  85: 8120+10+7	96B4  C4D696  					CALL	NZ,tGhostCheckD
  86: 8130+7	96B7  3E41    					LD		A,	'A'			;left
  87: 8137+17	96B9  CDAD97  					CALL	isMoveValid
  88: 8154+10+7	96BC  C4E496  					CALL	NZ,tGhostCheckL
  89: 8164+7	96BF  3E44    					LD		A,	'D'			;right
  90: 8171+17	96C1  CDAD97  					CALL	isMoveValid
  91: 8188+10+7	96C4  C4F296  					CALL	NZ,tGhostCheckR
  92: 8198+10	96C7  C9      					RET
  93:								
  94:     -	96C8          	tGhostCheckU:	
  95: 8208+11	96C8  F5      					PUSH	AF
  96: 8219+13	96C9  3A4181  					LD		A, (tGhostY)
  97: 8232+4	96CC  3D      					DEC		A
  98: 8236+7	96CD  E61F    					AND		00011111B
  99: 8243+4	96CF  47      					LD		B,A
 100: 8247+13	96D0  3A4081  					LD		A,(tGhostX)
 101: 8260+4	96D3  4F      					LD		C,A
 102: 8264+12	96D4  182A    					JR		tGhostPathFind
 103:     -	96D6          	tGhostCheckD:			
 104: 8276+11	96D6  F5      					PUSH	AF
 105: 8287+13	96D7  3A4181  					LD		A, (tGhostY)
 106: 8300+4	96DA  3C      					INC		A
 107: 8304+7	96DB  E61F    					AND		00011111B
 108: 8311+4	96DD  47      					LD		B,A
 109: 8315+13	96DE  3A4081  					LD		A,(tGhostX)
 110: 8328+4	96E1  4F      					LD		C,A
 111: 8332+12	96E2  181C    					JR		tGhostPathFind
 112:     -	96E4          	tGhostCheckL:		
 113: 8344+11	96E4  F5      					PUSH	AF	
 114: 8355+13	96E5  3A4081  					LD		A, (tGhostX)
 115: 8368+4	96E8  3D      					DEC		A
 116: 8372+7	96E9  E61F    					AND		00011111B
 117: 8379+4	96EB  4F      					LD		C,A
 118: 8383+13	96EC  3A4181  					LD		A,(tGhostY)
 119: 8396+4	96EF  47      					LD		B,A
 120: 8400+12	96F0  180E    					JR		tGhostPathFind
 121:     -	96F2          	tGhostCheckR:
 122: 8412+11	96F2  F5      					PUSH	AF	
 123: 8423+13	96F3  3A4081  					LD		A, (tGhostX)
 124: 8436+4	96F6  3C      					INC		A
 125: 8440+7	96F7  E61F    					AND		00011111B
 126: 8447+4	96F9  4F      					LD		C,A
 127: 8451+13	96FA  3A4181  					LD		A,(tGhostY)
 128: 8464+4	96FD  47      					LD		B,A
 129: 8468+12	96FE  1800    					JR		tGhostPathFind
 130:				
 131:     -	9700          	tGhostPathFind:
 132: 8480+17	9700  CD3998  					CALL	getAddressPF
 133: 8497+13	9703  3A1381  					LD		A,(ghostDis)
 134: 8510+7	9706  5E      					LD		E,(HL)
 135: 8517+4	9707  BB      					CP		E
 136: 8521+11	9708  F5      	                PUSH    AF
 137: 8532+13	9709  3A0481  	                LD      A,(pPActive)            ;Check power pellet is not activ, if it is, run away
 138: 8545+4	970C  B7      	                OR      A
 139: 8549+10	970D  C21797  	                JP      NZ,tGhostPFPP
 140: 8559+10	9710  F1      	                POP     AF
 141: 8569+10	9711  D22397  					JP		NC,tGhostSetNewDir
 142: 8579+10	9714  F1      	                POP     AF
 143: 8589+10	9715  F1      					POP		AF
 144: 8599+10	9716  C9      					RET
 145:     -	9717          	tGhostPFPP:
 146: 8609+10	9717  F1      	                POP     AF
 147: 8619+10	9718  DA2397  	                JP		C,tGhostSetNewDir
 148: 8629+7	971B  FEFF    	                CP      0FFH
 149: 8636+10	971D  CA2397  	                JP      Z,tGhostSetNewDir
 150: 8646+10	9720  F1      	                POP     AF
 151: 8656+10	9721  F1      					POP		AF
 152: 8666+10	9722  C9      	                RET
 153:				
 154:     -	9723          	tGhostSetNewDir:
 155: 8676+4	9723  7B      					LD		A,E
 156: 8680+13	9724  321381  					LD		(ghostDis),A
 157: 8693+10	9727  F1      					POP		AF
 158: 8703+13	9728  324281  					LD		(tGhostDir),A
 159: 8716+10	972B  C9      					RET
 160:				
 161:     -	972C          	tGhostColide:   
 162: 8726+13	972C  3A0081  	                LD      A,(pacx)                ;Compair X
 163: 8739+4	972F  47      	                LD      B,A
 164: 8743+13	9730  3A4081  	                LD      A,(tGhostX)
 165: 8756+4	9733  B8      	                CP      B
 166: 8760+5+6	9734  C0      	                RET     NZ
 167: 8765+13	9735  3A0181  	                LD      A,(pacy)                ;Compair Y
 168: 8778+4	9738  47      	                LD      B,A
 169: 8782+13	9739  3A4181  	                LD      A,(tGhostY)
 170: 8795+4	973C  B8      	                CP      B
 171: 8799+5+6	973D  C0      	                RET     NZ
 172: 8804+13	973E  3A0481  	                LD      A,(pPActive)              ;Colishion Happened
 173: 8817+4	9741  B7      	                OR      A
 174: 8821+10	9742  CA7291  	                JP      Z,killPacman               ;If power pellet not active, run genric deth lib
 175: 8831+17	9745  CD6292  					CALL	eatGhost
 176: 8848+7	9748  3E11    	                LD		a, tGhostStoreX	           ;set tGhost Pos
 177: 8855+13	974A  324081  				    LD		(tGhostX),a
 178: 8868+7	974D  3E0B    				    LD		a, tGhostStoreY
 179: 8875+13	974F  324181  				    LD		(tGhostY),a
 180: 8888+7	9752  3E40    	                LD		a, tGhostInitTimer
 181: 8895+13	9754  324581  				    LD		(tGhostTimer),a
 182: 8908+10	9757  C9      	                RET
 183:				
 184:				;x = l
 185:				;y = h
 186:     -	9758          	tGhostStack:
 187: 8918+4	9758  7D      					LD      A,L               		;Compair X
 188: 8922+4	9759  47      	                LD      B,A
 189: 8926+13	975A  3A4081  	                LD      A,(tGhostX)
 190: 8939+4	975D  B8      	                CP      B
 191: 8943+5+6	975E  C0      	                RET     NZ
 192: 8948+4	975F  7C      	                LD      A,h                		;Compair Y
 193: 8952+4	9760  47      	                LD      B,A
 194: 8956+13	9761  3A4181  	                LD      A,(tGhostY)
 195: 8969+4	9764  B8      	                CP      B
 196: 8973+10	9765  C9      	                RET
 197:				
**** ghosts.asm ****
 138:     -	9766  1B5B3936	tGhost:		.BYTE	1BH,"[96mM",1BH,"[0m",0
	              6D4D1B5B
	              306D00
 139:				
 140:				
 141:     -	9771  1B5B3334	sGhost0:	.BYTE	1BH,"[34mM",1BH,"[0m",0
	              6D4D1B5B
	              306D00
**** main.asm ****
  74:     -	977C  1B5B3937	sGhost1:	.BYTE	1BH,"[97mM",1BH,"[0m",0
	              6D4D1B5B
	              306D00
  75:				;-----------Spesific Libs -----;
  76:				include movelibs.asm	
**** movelibs.asm ****
   1:     -	9787          	move:
   2: 8983+7	9787  FE57    					CP		'W'
   3: 8990+7+5	9789  280A    					JR		Z,moveU
   4: 8997+7	978B  FE41    					CP		'A'
   5: 9004+7+5	978D  2812    					JR		Z,moveL
   6: 9011+7	978F  FE53    					CP		'S'
   7: 9018+7+5	9791  2808    					JR		Z,moveD
   8: 9025+12	9793  1812    					JR		moveR
   9:				
  10:     -	9795          	moveU:			
  11: 9037+7	9795  0A      					LD		A, (BC)
  12: 9044+4	9796  3D      					DEC		A
  13: 9048+7	9797  E61F    					AND		00011111B
  14: 9055+7	9799  02      					LD		(BC),A
  15: 9062+10	979A  C9      					RET
  16:     -	979B          	moveD:			
  17: 9072+7	979B  0A      					LD		A, (BC)
  18: 9079+4	979C  3C      					INC		A
  19: 9083+7	979D  E61F    					AND		00011111B
  20: 9090+7	979F  02      					LD		(BC),A
  21: 9097+10	97A0  C9      					RET
  22:     -	97A1          	moveL:			
  23: 9107+7	97A1  1A      					LD		A, (DE)
  24: 9114+4	97A2  3D      					DEC		A
  25: 9118+7	97A3  E61F    					AND		00011111B
  26: 9125+7	97A5  12      					LD		(DE),A
  27: 9132+10	97A6  C9      					RET
  28:     -	97A7          	moveR:			
  29: 9142+7	97A7  1A      					LD		A, (DE)
  30: 9149+4	97A8  3C      					INC		A
  31: 9153+7	97A9  E61F    					AND		00011111B
  32: 9160+7	97AB  12      					LD		(DE),A
  33: 9167+10	97AC  C9      					RET
  34:     -	97AD          	isMoveValid:
  35: 9177+7	97AD  FE57    					CP		'W'
  36: 9184+7+5	97AF  280A    					JR		Z,moveUValid
  37: 9191+7	97B1  FE41    					CP		'A'
  38: 9198+7+5	97B3  280C    					JR		Z,moveLValid
  39: 9205+7	97B5  FE53    					CP		'S'
  40: 9212+7+5	97B7  2805    					JR		Z,moveDValid
  41: 9219+12	97B9  1809    					JR		moveRValid
  42:     -	97BB          	moveUValid:			
  43: 9231+8	97BB  CB42    					BIT		upBit,D
  44: 9239+10	97BD  C9      					RET
  45:     -	97BE          	moveDValid:			
  46: 9249+8	97BE  CB4A    					BIT		downBit,D
  47: 9257+10	97C0  C9      					RET
  48:     -	97C1          	moveLValid:			
  49: 9267+8	97C1  CB52    					BIT		leftBit,D
  50: 9275+10	97C3  C9      					RET
  51:     -	97C4          	moveRValid:			
  52: 9285+8	97C4  CB5A    					BIT		rightBit,D
**** main.asm ****
  77: 9293+10	97C6  C9      					RET
  78:				include	mapLibs.asm	
**** mapLibs.asm ****
   1:     -	0030          	pathFindDepth   .EQU	30H
   2:				
   3:				;-------- Map -------;
   4:				;InitiMap
   5:     -	97C7          	initMap:
   6: 9303+10	97C7  010004  					LD		BC,400H
   7: 9313+10	97CA  2147A5  					LD		HL,map
   8: 9323+10	97CD  1100E0  					LD		DE,liveMap
   9: 9333+16+5	97D0  EDB0    					LDIR
  10: 9349+10	97D2  C9      					RET
  11:				
  12:				;------- Get Map Data ----;
  13:				; C - X
  14:				; B	- Y
  15:     -	97D3          	getMapAddress:
  16: 9359+11	97D3  C5      					push	bc
  17: 9370+8	97D4  CB00    					rlc		b			;Shift b left 5
  18: 9378+8	97D6  CB00    					rlc		b			;Shift b left 5
  19: 9386+8	97D8  CB00    					rlc		b			;Shift b left 5
  20: 9394+8	97DA  CB00    					rlc		b			;Shift b left 5
  21: 9402+8	97DC  CB00    					rlc		b			;Shift b left 5
  22: 9410+4	97DE  78      					ld		a,b
  23: 9414+7	97DF  E6E0    					and		11100000b	;Mask lower adress
  24: 9421+4	97E1  B1      					or		c			;Combine with C
  25: 9425+4	97E2  6F      					ld		l,a			;A is now low byte of adress
  26: 9429+4	97E3  78      					ld		a,b
  27: 9433+7	97E4  E603    					and		00000011b	;Mask upper adress
  28: 9440+7	97E6  F6E0    					or		0E0H		;Start of map
  29: 9447+4	97E8  67      					ld		h,a
  30: 9451+10	97E9  C1      					pop		bc
  31: 9461+10	97EA  C9      					ret
  32:				
  33:				;--------Check map for pellets ------;
  34:     -	97EB          	checkNextLevel:
  35: 9471+17	97EB  CD1198  					CALL	checkMap
  36: 9488+4	97EE  7B      					LD		A,E
  37: 9492+4	97EF  B7      					OR		A
  38: 9496+5+6	97F0  C0      					RET		NZ
  39: 9501+4	97F1  7A      					LD		A,D
  40: 9505+4	97F2  B7      					OR		A
  41: 9509+5+6	97F3  C0      					RET		NZ
  42:				
  43: 9514+16	97F4  2A0289  					LD		HL,(level)
  44: 9530+6	97F7  23      					INC		HL
  45: 9536+16	97F8  220289  					LD		(level),HL
  46: 9552+17	97FB  CD029A  					CALL	countdown
  47: 9569+17	97FE  CDC797  					CALL	initMap
  48: 9586+17	9801  CDD391  					CALL	initGhost
  49: 9603+17	9804  CDB290  					CALL	resetPacman
  50: 9620+10	9807  212DA1  					LD		HL, home		;Go home
  51: 9630+17	980A  CDA8A0  					CALL	print
  52: 9647+17	980D  CD6098  					CALL 	printMap
  53: 9664+10	9810  C9      					ret
  54:				
  55:     -	9811          	checkMap:
  56: 9674+7	9811  3E20    					ld		a,32
  57: 9681+4	9813  47      					ld		b,a			; 32 chars per line
  58: 9685+4	9814  4F      					ld		c,a			; 32 lines per map
  59: 9689+10	9815  2100E0  					ld		hl,liveMap
  60: 9699+10	9818  110000  					ld		de,0
  61: 9709+7	981B  7E      	checkMapLoop:	ld		a,(hl)		; get char
  62: 9716+17	981C  CD2C98  					call	checkMapChar; check the char
  63: 9733+6	981F  23      					inc		hl			; next char
  64: 9739+8+5	9820  10F9    					djnz	checkMapLoop; if were not at the end of a line, print next char
  65: 9747+4	9822  41      					ld		b,c			;are we at the end of a block
  66: 9751+8+5	9823  1001    					djnz	checkMapNextLine
  67: 9759+10	9825  C9      					ret
  68:     -	9826          	checkMapNextLine:	
  69: 9769+4	9826  48      					ld		c,b			;copy decremented b back to c
  70: 9773+7	9827  3E20    					ld 		a,32		;refill b withj 32
  71: 9780+4	9829  47      					ld		b,a
  72: 9784+12	982A  18EF    					jr		checkMapLoop;draw next char
  73:				
  74:     -	982C          	checkMapChar:
  75: 9796+8	982C  CB6F    					bit		pelletBit,a
  76: 9804+10+7	982E  C43798  					CALL	NZ,incrementDE
  77: 9814+8	9831  CB67    					bit		powerpBit,a
  78: 9822+10+7	9833  C43798  					CALL	NZ,incrementDE
  79: 9832+10	9836  C9      					RET
  80:     -	9837          	incrementDE:
  81: 9842+6	9837  13      					INC		DE
  82: 9848+10	9838  C9      					RET
  83:				
  84:				;------- Get Path Find Map Address----;
  85:				; C - X
  86:				; B	- Y
  87:     -	9839          	getAddressPF:
  88: 9858+11	9839  C5      					push	bc
  89: 9869+8	983A  CB00    					rlc		b			;Shift b left 5
  90: 9877+8	983C  CB00    					rlc		b			;Shift b left 5
  91: 9885+8	983E  CB00    					rlc		b			;Shift b left 5
  92: 9893+8	9840  CB00    					rlc		b			;Shift b left 5
  93: 9901+8	9842  CB00    					rlc		b			;Shift b left 5
  94: 9909+4	9844  78      					ld		a,b
  95: 9913+7	9845  E6E0    					and		11100000b	;Mask lower adress
  96: 9920+4	9847  B1      					or		c			;Combine with C
  97: 9924+4	9848  6F      					ld		l,a			;A is now low byte of adress
  98: 9928+4	9849  78      					ld		a,b
  99: 9932+7	984A  E603    					and		00000011b	;Mask upper adress
 100: 9939+7	984C  F6D0    					or		0D0H		;Start of map
 101: 9946+4	984E  67      					ld		h,a
 102: 9950+10	984F  C1      					pop		bc
 103: 9960+10	9850  C9      					ret
 104:				
 105:				
 106:				;--------- Map print -------- ;
 107:				; C - X
 108:				; B	- Y
 109:     -	9851          	printMapAt:	
 110: 9970+11	9851  C5      				PUSH	BC
 111: 9981+4	9852  0C      				INC		C
 112: 9985+4	9853  04      				INC		B
 113: 9989+17	9854  CD32A0  				CALL	moveCursor
 114:10006+10	9857  C1      				POP 	BC
 115:10016+17	9858  CDD397  				CALL	getMapAddress
 116:10033+7	985B  7E      				LD		A,(HL)
 117:10040+17	985C  CD7B98  				CALL	pmChar
 118:10057+10	985F  C9      				RET
 119:				
 120:     -	9860          	printMap:
 121:10067+7	9860  3E20    					ld		a,32
 122:10074+4	9862  47      					ld		b,a			; 32 chars per line
 123:10078+4	9863  4F      					ld		c,a			; 32 lines per map
 124:10082+10	9864  2100E0  					ld		hl,liveMap
 125:10092+7	9867  7E      	pmLoop:			ld		a,(hl)		; get char
 126:10099+17	9868  CD7B98  					call	pmChar		; decode what to print
 127:10116+6	986B  23      					inc		hl			; next char
 128:10122+8+5	986C  10F9    					djnz	pmLoop		; if were not at the end of a line, print next char
 129:10130+17	986E  CD29A0  					call	newline		; if we are, print a new line
 130:10147+4	9871  41      					ld		b,c			;are we at the end of a block
 131:10151+8+5	9872  1001    					djnz	pmNextLine
 132:10159+10	9874  C9      					ret
 133:     -	9875          	pmNextLine:	
 134:10169+4	9875  48      					ld		c,b			;copy decremented b back to c
 135:10173+7	9876  3E20    					ld 		a,32		;refill b withj 32
 136:10180+4	9878  47      					ld		b,a
 137:10184+12	9879  18EC    					jr		pmLoop		;draw next char
 138:				
 139:				
 140:     -	987B          	pmChar:		;-- Print map char a
 141:10196+11	987B  E5      					push	hl
 142:10207+8	987C  CB67    					bit		powerpBit,a
 143:10215+7+5	987E  200E    					jr		nz,printPP
 144:10222+8	9880  CB6F    					bit		pelletBit,a
 145:10230+7+5	9882  2012    					jr		nz,printP
 146:10237+8	9884  CB77    					bit		wallBit,a
 147:10245+7+5	9886  2016    					jr		nz,printWall
 148:10252+8	9888  CB7F    					bit		sfBit,a
 149:10260+7+5	988A  201A    					jr		nz,printSF
 150:10267+12	988C  1820    					jr	 	printVoid
 151:							
 152:     -	988E          	printPP:
 153:10279+10	988E  210AA1  					ld		hl,powerPellet
 154:10289+17	9891  CDA8A0  					call	print
 155:10306+12	9894  1820    					jr		pmCharRet
 156:     -	9896          	printP:
 157:10318+10	9896  2115A1  					ld		hl,pellet
 158:10328+17	9899  CDA8A0  					call	print
 159:10345+12	989C  1818    					jr		pmCharRet
 160:     -	989E          	printWall:
 161:10357+10	989E  21FFA0  					ld		hl,wall
 162:10367+17	98A1  CDA8A0  					call	print
 163:10384+12	98A4  1810    					jr		pmCharRet
 164:     -	98A6          	printSF:
 165:10396+10	98A6  2120A1  					ld		hl,superFruit
 166:10406+17	98A9  CDA8A0  					call	print
 167:10423+12	98AC  1808    					jr		pmCharRet
 168:     -	98AE          	printVoid:
 169:10435+10	98AE  212BA1  					ld		hl,void
 170:10445+17	98B1  CDA8A0  					call	print
 171:10462+12	98B4  1800    					jr		pmCharRet
 172:     -	98B6          	pmCharRet:	
 173:10474+10	98B6  E1      					pop 	hl
 174:10484+10	98B7  C9      					ret
 175:								
 176:				;-------- Path Find Map -------;
 177:				;Initi Path Find Map
 178:     -	98B8          	initPathFind:
 179:10494+7	98B8  3E20    					ld		a,32
 180:10501+4	98BA  47      					ld		b,a			; 32 chars per line
 181:10505+4	98BB  4F      					ld		c,a			; 32 lines per map
 182:10509+10	98BC  2100D0  					ld		hl,pathFindMap
 183:10519+7	98BF  16FF    	initpPFLoop:	ld		D,0FFH		; set char
 184:10526+7	98C1  72      					LD		(HL),D
 185:10533+6	98C2  23      					inc		hl			; next char
 186:10539+8+5	98C3  10FA    					djnz	initpPFLoop		; if were not at the end of a line, print next char
 187:10547+4	98C5  41      					ld		b,c			;are we at the end of a block
 188:10551+8+5	98C6  1001    					djnz	pfNextRow
 189:10559+10	98C8  C9      					ret
 190:     -	98C9          	pfNextRow:	
 191:10569+4	98C9  48      					ld		c,b			;copy decremented b back to c
 192:10573+7	98CA  3E20    					ld 		a,32		;refill b withj 32
 193:10580+4	98CC  47      					ld		b,a
 194:10584+10	98CD  C3BF98  					jp		initpPFLoop		;draw next char
 195:				
 196:				;Calculate Map
 197:     -	98D0          	calculatePathMap:
 198:10594+10	98D0  01FFFF  					ld		BC,0FFFFH		;Push Stack terminator		
 199:10604+11	98D3  C5      					PUSH	BC
 200:10615+13	98D4  3A0081  					LD		A, (pacx)		;Push X to stack
 201:10628+4	98D7  4F      					LD		C,A
 202:10632+13	98D8  3A0181  					LD		A, (pacy)		;Push Y to stack
 203:10645+4	98DB  47      					LD		B,A
 204:10649+17	98DC  CD3998  					CALL	getAddressPF
 205:10666+10	98DF  3600    					LD		(HL),00H
 206:10676+11	98E1  C5      					PUSH	BC
 207:     -	98E2          	calculatePathMapLoop:
 208:10687+10	98E2  C1      					POP		BC			;Get node to visit
 209:10697+4	98E3  78      					LD		A,B			;Check Its not FFFF
 210:10701+4	98E4  B7      					OR		A
 211:10705+7	98E5  FEFF    					CP		0FFH
 212:10712+5+6	98E7  C8      					RET		Z			;We only have to check half the byte as its imposable to have a cord more than 20h
 213:10717+20	98E8  ED43F289					LD		(originalBC),BC
 214:10737+17	98EC  CD3998  					CALL	getAddressPF
 215:10754+7	98EF  7E      					LD		A,(HL)
 216:10761+4	98F0  3C      					INC		A
 217:10765+7	98F1  FE30    	                CP      pathFindDepth
 218:10772+10	98F3  CAE298  					JP 		Z,calculatePathMapLoop	;Skip if wer getting too long
 219:10782+4	98F6  5F      					LD		E,A			;Keep the distance were working with safe
 220:10786+17	98F7  CDD397  					CALL	getMapAddress
 221:10803+7	98FA  56      					LD		D,(HL)
 222:10810+7	98FB  3E57    					LD		A,	'W'			;check up
 223:10817+17	98FD  CDAD97  					CALL	isMoveValid
 224:10834+10+7	9900  C41E99  					CALL	NZ,calculateMapU
 225:10844+7	9903  3E53    					LD		A,	'S'			;down
 226:10851+17	9905  CDAD97  					CALL	isMoveValid
 227:10868+10+7	9908  C42A99  					CALL	NZ,calculateMapD
 228:10878+7	990B  3E41    					LD		A,	'A'			;left
 229:10885+17	990D  CDAD97  					CALL	isMoveValid
 230:10902+10+7	9910  C43699  					CALL	NZ,calculateMapL
 231:10912+7	9913  3E44    					LD		A,	'D'			;right
 232:10919+17	9915  CDAD97  					CALL	isMoveValid
 233:10936+10+7	9918  C44299  					CALL	NZ,calculateMapR
 234:10946+10	991B  C3E298  					JP		calculatePathMapLoop
 235:								
 236:     -	991E          	calculateMapU:	
 237:10956+20	991E  ED4BF289					LD		BC,(originalBC)			;We want to preserve the OG BC Through this process so it can be used again in sub directions		
 238:10976+4	9922  78      					LD		A, B				;Make modifications to corod
 239:10980+4	9923  3D      					DEC		A
 240:10984+7	9924  E61F    					AND		00011111B			;Mask for looping
 241:10991+4	9926  47      					LD		B,A
 242:10995+10	9927  C34E99  					JP		calculateMapCell
 243:     -	992A          	calculateMapD:	
 244:11005+20	992A  ED4BF289					LD		BC,(originalBC)	
 245:11025+4	992E  78      					LD		A, B
 246:11029+4	992F  3C      					INC		A
 247:11033+7	9930  E61F    					AND		00011111B
 248:11040+4	9932  47      					LD		B,A
 249:11044+10	9933  C34E99  					JP		calculateMapCell
 250:     -	9936          	calculateMapL:	
 251:11054+20	9936  ED4BF289					LD		BC,(originalBC)
 252:11074+4	993A  79      					LD		A, C
 253:11078+4	993B  3D      					DEC		A
 254:11082+7	993C  E61F    					AND		00011111B
 255:11089+4	993E  4F      					LD		C,A
 256:11093+10	993F  C34E99  					JP		calculateMapCell
 257:     -	9942          	calculateMapR:
 258:11103+20	9942  ED4BF289					LD		BC,(originalBC)
 259:11123+4	9946  79      					LD		A, C
 260:11127+4	9947  3C      					INC		A
 261:11131+7	9948  E61F    					AND		00011111B
 262:11138+4	994A  4F      					LD		C,A
 263:11142+10	994B  C34E99  					JP		calculateMapCell
 264:				
 265:     -	994E          	calculateMapCell:
 266:11152+17	994E  CD3998  					CALL	getAddressPF
 267:11169+7	9951  7E      					LD		A,(HL)
 268:				
 269:11176+4	9952  BB      					CP		E			;Compare current data (A) with E (the path were looking at)
 270:11180+5+6	9953  D8      					RET		C			;If carry is set (A < E)(whats there already < our path) then this route is a dud
 271:11185+5+6	9954  C8      					RET		Z			;If its equal we dont want to continue as we alreay have an equally fast route
 272:11190+7	9955  73      					LD		(HL),E
 273:11197+10	9956  E1      					POP		HL			;We need the return adress on the top of the stack
 274:11207+11	9957  C5      					PUSH	BC			;Push Cell so it can be visited
 275:11218+11	9958  E5      					PUSH	HL
 276:11229+10	9959  C9      					RET
 277:				
 278:     -	995A          	printPFMap:
 279:11239+7	995A  0E01    	                LD		C, $01
 280:11246+7	995C  061A    					LD		B, $1A
 281:11253+17	995E  CD32A0  					CALL	moveCursor
 282:11270+7	9961  3E20    					ld		a,32
 283:11277+4	9963  47      					ld		b,a			; 32 chars per line
 284:11281+7	9964  3E1A    	                ld		a,$1A
 285:11288+4	9966  4F      					ld		c,a			; 32 lines per map
 286:11292+10	9967  2100D0  					ld		hl,pathFindMap
 287:11302+7	996A  7E      	pmPFLoop:		ld		a,(hl)		; get char
 288:11309+7	996B  FEFF    	                cp      0FFH
 289:11316+10	996D  CA8699  	                JP      Z,pmPFSkip
 290:11326+17	9970  CD78A0  					call	NumToHex	; decode what to print
 291:11343+7	9973  3E20    	pmPFAfterSkip:  ld      a,' '
 292:11350+11	9975  CF      	                rst     08H
 293:11361+6	9976  23      					inc		hl			; next char
 294:11367+8+5	9977  10F1    					djnz	pmPFLoop		; if were not at the end of a line, print next char
 295:11375+17	9979  CD29A0  					call	newline		; if we are, print a new line
 296:11392+4	997C  41      					ld		b,c			;are we at the end of a block
 297:11396+8+5	997D  1001    					djnz	pmPFNextLine
 298:11404+10	997F  C9      					ret
 299:     -	9980          	pmPFNextLine:	
 300:11414+4	9980  48      					ld		c,b			;copy decremented b back to c
 301:11418+7	9981  3E20    					ld 		a,32		;refill b withj 32
 302:11425+4	9983  47      					ld		b,a
 303:11429+12	9984  18E4    					jr		pmPFLoop	;draw next char
 304:     -	9986          	pmPFSkip:       
 305:11441+7	9986  3E20    	                ld      a,' '
 306:11448+11	9988  CF      	                rst     08H
 307:11459+7	9989  3E20    	                ld      a,' '
 308:11466+11	998B  CF      	                rst     08H
**** main.asm ****
  79:11477+10	998C  C37399  	                JP      pmPFAfterSkip
  80:				
  81:				;------HUD;
  82:				include hud.asm
**** hud.asm ****
   1:     -	8900          	score			.EQU	8900H		;Score
   2:     -	8902          	level			.EQU	8902H		;Score
   3:				
   4:     -	998F          	printHud:
   5:11487+17	998F  CD9999  					CALL	printScore
   6:11504+17	9992  CDC199  					CALL	printLives
   7:11521+17	9995  CDAD99  					CALL	printLevel
   8:11538+10	9998  C9      					RET
   9:				;Hud elements
  10:     -	9999          	printScore:					
  11:11548+7	9999  0E02    					LD		C, $02
  12:11555+7	999B  0619    					LD		B, $19
  13:11562+17	999D  CD32A0  					CALL	moveCursor
  14:11579+10	99A0  21E699  					LD		HL, scoreHUD
  15:11589+17	99A3  CDA8A0  					CALL 	print
  16:11606+16	99A6  2A0089  					LD		HL, (score)
  17:11622+17	99A9  CD4DA0  					CALL	HLToDec
  18:11639+10	99AC  C9      					RET
  19:     -	99AD          	printLevel:					
  20:11649+7	99AD  0E02    					LD		C, $02
  21:11656+7	99AF  061A    					LD		B, $1A
  22:11663+17	99B1  CD32A0  					CALL	moveCursor
  23:11680+10	99B4  21EE99  					LD		HL, levelHUD
  24:11690+17	99B7  CDA8A0  					CALL 	print
  25:11707+16	99BA  2A0289  					LD		HL, (level)
  26:11723+17	99BD  CD4DA0  					CALL	HLToDec
  27:11740+10	99C0  C9      					RET
  28:				
  29:     -	99C1          	printLives:					
  30:11750+7	99C1  0E02    					LD		C, $02
  31:11757+7	99C3  061B    					LD		B, $1B
  32:11764+17	99C5  CD32A0  					CALL	moveCursor
  33:11781+10	99C8  21F699  					LD		HL, livesHUD
  34:11791+17	99CB  CDA8A0  					CALL 	print
  35:11808+13	99CE  3A0581  					LD 		A,(pacLives)
  36:11821+4	99D1  3D      					DEC		A
  37:11825+4	99D2  B7      					OR		A
  38:11829+10	99D3  CADF99  					JP		Z,removeOldLives
  39:11839+4	99D6  47      					LD		B,A
  40:11843+10	99D7  219491  	printLivesLoop:	LD		HL, pacman
  41:11853+17	99DA  CDA8A0  					CALL 	print
  42:11870+8+5	99DD  10F8    					DJNZ	printLivesLoop
  43:11878+10	99DF  21FE99  	removeOldLives:	LD		HL, liveBlanking
  44:11888+17	99E2  CDA8A0  					CALL 	print
  45:11905+10	99E5  C9      					RET
  46:				
  47:     -	99E6  53636F72	scoreHUD:     	.BYTE "Score: ",0
	              653A2000
  48:     -	99EE  4C657665	levelHUD:     	.BYTE "Level: ",0
	              6C3A2000
  49:     -	99F6  4C697665	livesHUD:     	.BYTE "Lives: ",0
	              733A2000
**** main.asm ****
  83:     -	99FE  20202000	liveBlanking	.BYTE "   ",0
  84:				
  85:				include countdown.asm
**** countdown.asm ****
   1:     -	9A02          	countdown:
   2:11915+10	9A02  010503  	            LD      BC ,0305H
   3:11925+10	9A05  111218  				LD		DE ,1812H 
   4:11935+17	9A08  CDC3A0  				CALL	DrawBox
   5:11952+10	9A0B  010704  	            LD      BC ,0407H
   6:11962+10	9A0E  21149D  	            LD      HL,number3
   7:11972+17	9A11  CDB3A0  	            CALL    printAtPos
   8:11989+10	9A14  01FFFF  	            LD      BC, 0FFFFH
   9:11999+17	9A17  CDF6A0  	            CALL    delay
  10:12016+17	9A1A  CDF6A0  	            CALL    delay
  11:12033+17	9A1D  CDF6A0  	            CALL    delay
  12:12050+17	9A20  CDF6A0  	            CALL    delay
  13:12067+10	9A23  010704  	            LD      BC ,0407H
  14:12077+10	9A26  21B49B  	            LD      HL,number2
  15:12087+17	9A29  CDB3A0  	            CALL    printAtPos
  16:12104+10	9A2C  01FFFF  	            LD      BC, 0FFFFH
  17:12114+17	9A2F  CDF6A0  	            CALL    delay
  18:12131+17	9A32  CDF6A0  	            CALL    delay
  19:12148+17	9A35  CDF6A0  	            CALL    delay
  20:12165+17	9A38  CDF6A0  	            CALL    delay
  21:12182+10	9A3B  21549A  	            LD      HL,number1
  22:12192+10	9A3E  010704  	            LD      BC ,0407H
  23:12202+17	9A41  CDB3A0  	            CALL    printAtPos
  24:12219+10	9A44  01FFFF  	            LD      BC, 0FFFFH
  25:12229+17	9A47  CDF6A0  	            CALL    delay
  26:12246+17	9A4A  CDF6A0  	            CALL    delay
  27:12263+17	9A4D  CDF6A0  	            CALL    delay
  28:12280+17	9A50  CDF6A0  	            CALL    delay
  29:12297+10	9A53  C9      	            RET
  30:				
  31:				;Font 'doh'
  32:     -	9A54  20202020	number1:            .BYTE   "      1111111       ",0,1
	              20203131
	              31313131
	              31202020
	              20202020
	              0001
  33:     -	9A6A  20202020	                    .BYTE   "     1::::::1       ",0,1
	              20313A3A
	              3A3A3A3A
	              31202020
	              20202020
	              0001
  34:     -	9A80  20202020	                    .BYTE   "    1:::::::1       ",0,1
	              313A3A3A
	              3A3A3A3A
	              31202020
	              20202020
	              0001
  35:     -	9A96  20202020	                    .BYTE   "    111:::::1       ",0,1
	              3131313A
	              3A3A3A3A
	              31202020
	              20202020
	              0001
  36:     -	9AAC  20202020	                    .BYTE   "       1::::1       ",0,1
	              20202031
	              3A3A3A3A
	              31202020
	              20202020
	              0001
  37:     -	9AC2  20202020	                    .BYTE   "       1::::1       ",0,1
	              20202031
	              3A3A3A3A
	              31202020
	              20202020
	              0001
  38:     -	9AD8  20202020	                    .BYTE   "       1::::1       ",0,1
	              20202031
	              3A3A3A3A
	              31202020
	              20202020
	              0001
  39:     -	9AEE  20202020	                    .BYTE   "       1::::l       ",0,1
	              20202031
	              3A3A3A3A
	              6C202020
	              20202020
	              0001
  40:     -	9B04  20202020	                    .BYTE   "       1::::l       ",0,1
	              20202031
	              3A3A3A3A
	              6C202020
	              20202020
	              0001
  41:     -	9B1A  20202020	                    .BYTE   "       1::::l       ",0,1
	              20202031
	              3A3A3A3A
	              6C202020
	              20202020
	              0001
  42:     -	9B30  20202020	                    .BYTE   "       1::::l       ",0,1
	              20202031
	              3A3A3A3A
	              6C202020
	              20202020
	              0001
  43:     -	9B46  20202020	                    .BYTE   "       1::::l       ",0,1
	              20202031
	              3A3A3A3A
	              6C202020
	              20202020
	              0001
  44:     -	9B5C  20202020	                    .BYTE   "    111::::::111    ",0,1
	              3131313A
	              3A3A3A3A
	              3A313131
	              20202020
	              0001
  45:     -	9B72  20202020	                    .BYTE   "    1::::::::::1    ",0,1
	              313A3A3A
	              3A3A3A3A
	              3A3A3A31
	              20202020
	              0001
  46:     -	9B88  20202020	                    .BYTE   "    1::::::::::1    ",0,1
	              313A3A3A
	              3A3A3A3A
	              3A3A3A31
	              20202020
	              0001
  47:     -	9B9E  20202020	                    .BYTE   "    111111111111    ",0,0
	              31313131
	              31313131
	              31313131
	              20202020
	              0000
  48:				
  49:     -	9BB4  20323232	number2:            .BYTE   " 222222222222222    ",0,1
	              32323232
	              32323232
	              32323232
	              20202020
	              0001
  50:     -	9BCA  323A3A3A	                    .BYTE   "2:::::::::::::::22  ",0,1
	              3A3A3A3A
	              3A3A3A3A
	              3A3A3A3A
	              32322020
	              0001
  51:     -	9BE0  323A3A3A	                    .BYTE   "2::::::222222:::::2 ",0,1
	              3A3A3A32
	              32323232
	              323A3A3A
	              3A3A3220
	              0001
  52:     -	9BF6  32323232	                    .BYTE   "2222222     2:::::2 ",0,1
	              32323220
	              20202020
	              323A3A3A
	              3A3A3220
	              0001
  53:     -	9C0C  20202020	                    .BYTE   "            2:::::2 ",0,1
	              20202020
	              20202020
	              323A3A3A
	              3A3A3220
	              0001
  54:     -	9C22  20202020	                    .BYTE   "            2:::::2 ",0,1
	              20202020
	              20202020
	              323A3A3A
	              3A3A3220
	              0001
  55:     -	9C38  20202020	                    .BYTE   "         2222::::2  ",0,1
	              20202020
	              20323232
	              323A3A3A
	              3A322020
	              0001
  56:     -	9C4E  20202020	                    .BYTE   "    22222::::::22   ",0,1
	              32323232
	              323A3A3A
	              3A3A3A32
	              32202020
	              0001
  57:     -	9C64  20203232	                    .BYTE   "  22::::::::222     ",0,1
	              3A3A3A3A
	              3A3A3A3A
	              32323220
	              20202020
	              0001
  58:     -	9C7A  20323A3A	                    .BYTE   " 2:::::22222        ",0,1
	              3A3A3A32
	              32323232
	              20202020
	              20202020
	              0001
  59:     -	9C90  323A3A3A	                    .BYTE   "2:::::2             ",0,1
	              3A3A3220
	              20202020
	              20202020
	              20202020
	              0001
  60:     -	9CA6  323A3A3A	                    .BYTE   "2:::::2             ",0,1
	              3A3A3220
	              20202020
	              20202020
	              20202020
	              0001
  61:     -	9CBC  323A3A3A	                    .BYTE   "2:::::2       222222",0,1
	              3A3A3220
	              20202020
	              20203232
	              32323232
	              0001
  62:     -	9CD2  323A3A3A	                    .BYTE   "2::::::2222222:::::2",0,1
	              3A3A3A32
	              32323232
	              32323A3A
	              3A3A3A32
	              0001
  63:     -	9CE8  323A3A3A	                    .BYTE   "2::::::::::::::::::2",0,1
	              3A3A3A3A
	              3A3A3A3A
	              3A3A3A3A
	              3A3A3A32
	              0001
  64:     -	9CFE  32323232	                    .BYTE   "22222222222222222222",0,0
	              32323232
	              32323232
	              32323232
	              32323232
	              0000
  65:				
  66:     -	9D14  20203333	number3:            .BYTE   "  333333333333333   ",0,1
	              33333333
	              33333333
	              33333333
	              33202020
	              0001
  67:     -	9D2A  20333A3A	                    .BYTE   " 3:::::::::::::::33 ",0,1
	              3A3A3A3A
	              3A3A3A3A
	              3A3A3A3A
	              3A333320
	              0001
  68:     -	9D40  20333A3A	                    .BYTE   " 3::::::33333::::::3",0,1
	              3A3A3A3A
	              33333333
	              333A3A3A
	              3A3A3A33
	              0001
  69:     -	9D56  20333333	                    .BYTE   " 3333333     3:::::3",0,1
	              33333333
	              20202020
	              20333A3A
	              3A3A3A33
	              0001
  70:     -	9D6C  20202020	                    .BYTE   "             3:::::3",0,1
	              20202020
	              20202020
	              20333A3A
	              3A3A3A33
	              0001
  71:     -	9D82  20202020	                    .BYTE   "             3:::::3",0,1
	              20202020
	              20202020
	              20333A3A
	              3A3A3A33
	              0001
  72:     -	9D98  20202020	                    .BYTE   "     33333333:::::3 ",0,1
	              20333333
	              33333333
	              333A3A3A
	              3A3A3320
	              0001
  73:     -	9DAE  20202020	                    .BYTE   "     3:::::::::::3  ",0,1
	              20333A3A
	              3A3A3A3A
	              3A3A3A3A
	              3A332020
	              0001
  74:     -	9DC4  20202020	                    .BYTE   "     33333333:::::3 ",0,1
	              20333333
	              33333333
	              333A3A3A
	              3A3A3320
	              0001
  75:     -	9DDA  20202020	                    .BYTE   "             3:::::3",0,1
	              20202020
	              20202020
	              20333A3A
	              3A3A3A33
	              0001
  76:     -	9DF0  20202020	                    .BYTE   "             3:::::3",0,1
	              20202020
	              20202020
	              20333A3A
	              3A3A3A33
	              0001
  77:     -	9E06  20202020	                    .BYTE   "             3:::::3",0,1
	              20202020
	              20202020
	              20333A3A
	              3A3A3A33
	              0001
  78:     -	9E1C  20333333	                    .BYTE   " 3333333     3:::::3",0,1
	              33333333
	              20202020
	              20333A3A
	              3A3A3A33
	              0001
  79:     -	9E32  20333A3A	                    .BYTE   " 3::::::33333::::::3",0,1
	              3A3A3A3A
	              33333333
	              333A3A3A
	              3A3A3A33
	              0001
  80:     -	9E48  20333A3A	                    .BYTE   " 3:::::::::::::::33 ",0,1
	              3A3A3A3A
	              3A3A3A3A
	              3A3A3A3A
	              3A333320
	              0001
**** main.asm ****
  86:     -	9E5E  20203333	                    .BYTE   "  333333333333333   ",0,0
	              33333333
	              33333333
	              33333333
	              33202020
	              0000
  87:				include titlescreen.asm
**** titlescreen.asm ****
   1:     -	9E74          	displayTitleScreen:
   2:12307+10	9E74  010603  	                LD      BC ,0306H
   3:12317+10	9E77  111416  				    LD		DE ,1614H 
   4:12327+17	9E7A  CDC3A0  				    CALL	DrawBox
   5:12344+10	9E7D  010804  	                LD      BC ,0408H
   6:12354+10	9E80  21B89E  	                LD      HL,logo
   7:12364+17	9E83  CDB3A0  	                CALL    printAtPos
   8:12381+10	9E86  010809  	                LD      BC ,0908H
   9:12391+10	9E89  21489F  	                LD      HL,info
  10:12401+17	9E8C  CDB3A0  	                CALL    printAtPos
  11:12418+10	9E8F  01080D  	                LD      BC ,0D08H
  12:12428+10	9E92  215C9F  	                LD      HL,message
  13:12438+17	9E95  CDB3A0  	                CALL    printAtPos
  14:12455+10	9E98  010A0F  	                LD      BC ,0F0AH
  15:12465+10	9E9B  21709F  	                LD      HL,startGameMessage
  16:12475+17	9E9E  CDB3A0  	                CALL    printAtPos
  17:12492+10	9EA1  010810  	                LD      BC ,1008H
  18:12502+10	9EA4  21809F  	                LD      HL,exitMessage
  19:12512+17	9EA7  CDB3A0  	                CALL    printAtPos
  20:     -	9EAA          	titleScreenWaitForInput:
  21:12529+11	9EAA  D7      	                RST		10H
  22:12540+7	9EAB  FE31    	                CP      '1'
  23:12547+10	9EAD  CA1C90  	                JP      Z,startGame
  24:12557+7	9EB0  FE32    	                CP      '2'
  25:12564+10	9EB2  CA7C90  	                JP      Z,quit                     
  26:12574+10	9EB5  C3AA9E  	                JP      titleScreenWaitForInput
  27:				
  28:				;font graceful
  29:     -	9EB8          	logo:
  30:     -	9EB8  1B5B3931	                    .BYTE   1BH,"[91m ____ ",1BH,"[96m _  _   ",1BH,"[33m___ ",0,1
	              6D205F5F
	              5F5F201B
	              5B39366D
	              205F2020
	              5F202020
	              1B5B3333
	              6D5F5F5F
	              200001
  31:     -	9EDB  1B5B3931	                    .BYTE   1BH,"[91m(  _ \",1BH,"[96m/ )( \ ",1BH,"[33m/ __)",0,1
	              6D282020
	              5F205C1B
	              5B39366D
	              2F202928
	              205C201B
	              5B33336D
	              2F205F5F
	              290001
  32:     -	9EFE  1B5B3931	                    .BYTE   1BH,"[91m ) __/",1BH,"[96m) \/ (",1BH,"[33m( (__ ",0,1
	              6D202920
	              5F5F2F1B
	              5B39366D
	              29205C2F
	              20281B5B
	              33336D28
	              20285F5F
	              200001
  33:     -	9F21  1B5B3931	                    .BYTE   1BH,"[91m(__)  ",1BH,"[96m\____/ ",1BH,"[33m\___)", 1BH,"[0m",0,0
	              6D285F5F
	              2920201B
	              5B39366D
	              5C5F5F5F
	              5F2F201B
	              5B33336D
	              5C5F5F5F
	              291B5B30
	              6D0000
  34:				
  35:     -	9F48  6279204A	info:               .BYTE  "by James Bray 2020",0,0
	              616D6573
	              20427261
	              79203230
	              32300000
  36:				
  37:     -	9F5C  50726573	message:           .BYTE   "Press key to start",0,0
	              73206B65
	              7920746F
	              20737461
	              72740000
  38:     -	9F70  28312920	startGameMessage:  .BYTE   "(1) Start Game",0,0
	              53746172
	              74204761
	              6D650000
**** main.asm ****
  88:     -	9F80  28322920	exitMessage:       .BYTE   "(2) Exit to Prompt",0,0
	              45786974
	              20746F20
	              50726F6D
	              70740000
  89:				include gameOver.asm
**** gameOver.asm ****
   1:     -	9F94          	displayGameOver:
   2:12584+10	9F94  010406  	                LD      BC ,0604H
   3:12594+10	9F97  110A1A  				    LD		DE ,1A0AH 
   4:12604+17	9F9A  CDC3A0  				    CALL	DrawBox
   5:12621+10	9F9D  010507  	                LD      BC ,0705H
   6:12631+10	9FA0  21B89F  	                LD      HL,deathMessage1
   7:12641+17	9FA3  CDB3A0  	                CALL    printAtPos
   8:12658+10	9FA6  01050D  	                LD      BC ,0D05H
   9:12668+10	9FA9  210FA0  	                LD      HL,deathMessage2
  10:12678+17	9FAC  CDB3A0  	                CALL    printAtPos
  11:     -	9FAF          	gameOverwaitForInput:
  12:12695+11	9FAF  D7      	                RST		10H
  13:12706+7	9FB0  FE20    	                CP      ' '
  14:12713+10	9FB2  CA0790  	                JP      Z,gameTop                    
  15:12723+10	9FB5  C3AF9F  	                JP      gameOverwaitForInput
  16:				
  17:     -	9FB8          	deathMessage1:
  18:     -	9FB8  1B5B3931	                    .BYTE    1BH,"[91m __          _          ",0,1
	              6D205F5F
	              20202020
	              20202020
	              20205F20
	              20202020
	              20202020
	              200001
  19:     -	9FD7  2F5F5F20	                    .BYTE            "/__ _ __  _ / \    _  __",0,1
	              5F205F5F
	              20205F20
	              2F205C20
	              2020205F
	              20205F5F
	              0001
  20:     -	9FF1  5C5F7C28	                    .BYTE            "\_|(_||||(/_\_/\_/(/_ | ",1BH,"[0m",0,0
	              5F7C7C7C
	              7C282F5F
	              5C5F2F5C
	              5F2F282F
	              5F207C20
	              1B5B306D
	              0000
  21:				
**** main.asm ****
  90:     -	A00F  50726573	deathMessage2:      .BYTE    "Press Space to continue!",0,0
	              73205370
	              61636520
	              746F2063
	              6F6E7469
	              6E756521
	              0000
  91:				
  92:				;------- Libs ------------;
  93:				include libs.asm
**** libs.asm ****
   1:     -	8888          	seed			.EQU	8888H		;Random seed
   2:				
   3:     -	A029          	newline:			
   4:12733+11	A029  F5      					push 	af
   5:12744+7	A02A  3E0D    					ld		a, CR
   6:12751+11	A02C  CF      					rst 	08H
   7:12762+7	A02D  3E0A    					ld		a, LF
   8:12769+11	A02F  CF      					rst 	08H
   9:12780+10	A030  F1      					pop 	af
  10:12790+10	A031  C9      					ret
  11:							
  12:				;move cursor to (C,B)				
  13:     -	A032          	moveCursor:		
  14:12800+11	A032  E5      					PUSH	HL
  15:12811+7	A033  3E1B    					LD		A,$1B
  16:12818+11	A035  CF      					RST     08H
  17:12829+7	A036  3E5B    					LD		A,'['
  18:12836+11	A038  CF      					RST     08H
  19:12847+4	A039  68      					LD		L,B
  20:12851+7	A03A  2600    					LD		H,0
  21:12858+17	A03C  CD4DA0  					CALL	HLToDec
  22:12875+7	A03F  3E3B    					LD		A,$3B
  23:12882+11	A041  CF      					RST     08H
  24:12893+4	A042  69      					LD		L,C
  25:12897+7	A043  2600    					LD		H,0
  26:12904+17	A045  CD4DA0  					CALL	HLToDec
  27:12921+7	A048  3E66    					LD		A,'f'
  28:12928+11	A04A  CF      					RST     08H
  29:12939+10	A04B  E1      					POP		HL
  30:12949+10	A04C  C9      					RET
  31:				
  32:				;Prints	hl as decimal			
  33:     -	A04D          	HLToDec:
  34:12959+11	A04D  F5      					PUSH	AF
  35:12970+11	A04E  C5      					PUSH	BC
  36:12981+17	A04F  CD55A0  					CALL	DispHL
  37:12998+10	A052  C1      					POP		BC
  38:13008+10	A053  F1      					POP		AF
  39:13018+10	A054  C9      					RET
  40:     -	A055          	DispHL:
  41:13028+10	A055  01F0D8  					ld		bc,-10000
  42:13038+17	A058  CD6EA0  					call	Num1
  43:13055+10	A05B  0118FC  					ld		bc,-1000
  44:13065+17	A05E  CD6EA0  					call	Num1
  45:13082+10	A061  019CFF  					ld		bc,-100
  46:13092+17	A064  CD6EA0  					call	Num1
  47:13109+7	A067  0EF6    					ld		c,-10
  48:13116+17	A069  CD6EA0  					call	Num1
  49:13133+7	A06C  0EFF    					ld		c,-1
  50:13140+7	A06E  3E2F    	Num1:			ld		a,'0'-1
  51:13147+4	A070  3C      	Num2:			inc		a
  52:13151+11	A071  09      					add		hl,bc
  53:13162+7+5	A072  38FC    					jr		c,Num2
  54:13169+15	A074  ED42    					sbc		hl,bc
  55:13184+11	A076  CF      					RST     08H
  56:13195+10	A077  C9      					ret
  57:				;Print A as HEX				
  58:     -	A078          	NumToHex:    	
  59:13205+11	A078  C5      					push	bc
  60:13216+11	A079  F5      	                push    af
  61:13227+4	A07A  4F      					ld 		c, a   		; a = number to convert
  62:13231+17	A07B  CD87A0  	            	call 	Num1H
  63:13248+11	A07E  CF      	            	RST     08H
  64:13259+4	A07F  79      	            	ld 		a, c
  65:13263+17	A080  CD8BA0  	            	call 	Num2H
  66:13280+11	A083  CF      	            	RST     08H
  67:13291+10	A084  F1      	                pop     af
  68:13301+10	A085  C1      					pop		bc
  69:13311+10	A086  C9      	            	ret
  70:				
  71:13321+4	A087  1F      	Num1H:        	rra
  72:13325+4	A088  1F      	            	rra
  73:13329+4	A089  1F      	            	rra
  74:13333+4	A08A  1F      	           		rra
  75:13337+7	A08B  F6F0    	Num2H:        	or 		$F0
  76:13344+4	A08D  27      	            	daa
  77:13348+7	A08E  C6A0    	            	add 	a, $A0
  78:13355+7	A090  CE40    	            	adc 	a, $40 		; Ascii hex at this point (0 to F)   
  79:13362+10	A092  C9      	            	ret
  80:				
  81:				;Get ABS of A
  82:     -	A093          	absA:
  83:13372+4	A093  B7      	     or a
  84:13376+5+6	A094  F0      	     ret p
  85:13381+8	A095  ED44    	     neg
  86:13389+10	A097  C9      	     ret
  87:				
  88:				;getArAndomA	 
  89:     -	A098          	randomA:				
  90:13399+13	A098  3A8888  					ld a, 	(seed)
  91:13412+4	A09B  47      					ld b, 	a 
  92:				
  93:13416+4	A09C  0F      					rrca ; multiply by 32
  94:13420+4	A09D  0F      					rrca
  95:13424+4	A09E  0F      					rrca
  96:13428+7	A09F  EE1F    					xor $1f
  97:				
  98:13435+4	A0A1  80      					add 	a, b
  99:13439+7	A0A2  DEFF    					sbc a, 255 ; carry
 100:				
 101:13446+13	A0A4  328888  					ld (seed), a
 102:13459+10	A0A7  C9      					ret
 103:				
 104:				;------- Print string
 105:13469+11	A0A8  F5      	print:			PUSH 	AF				; Preserve AF				
 106:13480+7	A0A9  7E      	printLoop:      LD      A,(HL)          ; Get character
 107:13487+4	A0AA  B7      	                OR      A               ; Is it $00 ?
 108:13491+7+5	A0AB  2804    	                JR     	Z,printRet      ; Then RETurn on terminator
 109:13498+11	A0AD  CF      	                RST     08H             ; Print it
 110:13509+6	A0AE  23      	                INC     HL              ; Next Character
 111:13515+12	A0AF  18F8    	                JR      printLoop       ; Continue until $00
 112:				
 113:13527+10	A0B1  F1      	printRet:		POP		AF
 114:13537+10	A0B2  C9      					RET
 115:				
 116:				;--------Print textBlockAtPos
 117:				;HL Start of sprite
 118:				;C  Sprite X
 119:				;B  Sprite Y
 120:				
 121:13547+11	A0B3  F5      	printAtPos:		PUSH 	AF					; Preserve AF				
 122:13558+17	A0B4  CD32A0  	printAtPosLoop: CALL	moveCursor			; Move cursor to start of line
 123:13575+17	A0B7  CDA8A0  					CALL	print				; Print Line
 124:13592+4	A0BA  04      					INC		B
 125:13596+6	A0BB  23      					INC		HL
 126:13602+7	A0BC  7E      					LD      A,(HL)          	; Get character
 127:13609+4	A0BD  B7      	                OR      A               	; Is it $00 ?
 128:13613+6	A0BE  23      					INC		HL
 129:13619+7+5	A0BF  20F3    	                JR      NZ,printAtPosLoop   ; Continue until $00		
 130:13626+10	A0C1  F1      					POP		AF
 131:13636+10	A0C2  C9      					RET
 132:				
 133:				;------------Draw Box
 134:				;C Start X
 135:				;B Start Y
 136:				
 137:				;D Width
 138:				;E Height
 139:     -	A0C3          	drawBox:
 140:13646+4	A0C3  1D      					DEC		E
 141:13650+4	A0C4  1D      					DEC		E
 142:13654+17	A0C5  CD32A0  					CALL	moveCursor			; Move cursor to start of line
 143:13671+11	A0C8  C5      					PUSH	BC
 144:13682+4	A0C9  42      					LD		B,D
 145:13686+7	A0CA  3E23    	topLineLoop:	LD		A,'#'
 146:13693+11	A0CC  CF      					RST		08H
 147:13704+8+5	A0CD  10FB    					DJNZ	topLineLoop			;Print Top line
 148:13712+4	A0CF  15      					DEC		D					;Remove padding for left and right bars
 149:13716+4	A0D0  15      					DEC		D
 150:13720+4	A0D1  43      					LD		B,E
 151:13724+4	A0D2  58      	boxBodyLoop:	LD		E,B
 152:13728+10	A0D3  C1      					POP		BC
 153:13738+4	A0D4  04      					INC		B
 154:13742+17	A0D5  CD32A0  					CALL	moveCursor
 155:13759+11	A0D8  C5      					PUSH	BC
 156:13770+7	A0D9  3E23    					LD		A,'#'
 157:13777+11	A0DB  CF      					RST		08H
 158:13788+4	A0DC  42      					LD		B,D
 159:13792+7	A0DD  3E20    	boxContentLoop:	LD		A,' '
 160:13799+11	A0DF  CF      					RST		08H
 161:13810+8+5	A0E0  10FB    					DJNZ	boxContentLoop
 162:13818+7	A0E2  3E23    					LD		A,'#'
 163:13825+11	A0E4  CF      					RST		08H
 164:13836+4	A0E5  43      					LD		B,E
 165:13840+8+5	A0E6  10EA    					DJNZ	boxBodyLoop
 166:13848+10	A0E8  C1      					POP		BC
 167:13858+4	A0E9  04      					INC		B
 168:13862+17	A0EA  CD32A0  					CALL	moveCursor			; Move cursor to start of line
 169:13879+4	A0ED  14      					INC		D
 170:13883+4	A0EE  14      					INC		D
 171:13887+4	A0EF  42      					LD		B,D
 172:13891+7	A0F0  3E23    	bottomLineLoop:	LD		A,'#'
 173:13898+11	A0F2  CF      					RST		08H
 174:13909+8+5	A0F3  10FB    					DJNZ	bottomLineLoop			;Print Top line
 175:13917+10	A0F5  C9      					RET		
 176:				;--------Delay
 177:     -	A0F6          	delay:
 178:13927+11	A0F6  C5      					PUSH	BC
 179:     -	A0F7          	delayLoop:
 180:13938+4	A0F7  00      					NOP
 181:13942+6	A0F8  0B      					DEC 	BC
 182:13948+4	A0F9  78      					LD 		A,B
 183:13952+4	A0FA  B1      					OR 		C
 184:13956+7+5	A0FB  20FA    					JR 		NZ,delayLoop
 185:13963+10	A0FD  C1      					POP		BC
**** main.asm ****
  94:13973+10	A0FE  C9      					RET
  95:				
  96:				;Strings
  97:     -	A0FF  1B5B3334	wall:			.BYTE	1BH,"[34m#",1BH,"[0m",0
	              6D231B5B
	              306D00
  98:     -	A10A  1B5B3937	powerPellet:	.BYTE	1BH,"[97mo",1BH,"[0m",0
	              6D6F1B5B
	              306D00
  99:     -	A115  1B5B3337	pellet:			.BYTE	1BH,"[37m*",1BH,"[0m",0
	              6D2A1B5B
	              306D00
 100:     -	A120  1B5B3331	superFruit:		.BYTE	1BH,"[31m@",1BH,"[0m",0
	              6D401B5B
	              306D00
 101:     -	A12B  2000    	void:			.BYTE	" ",0
 102:				
 103:     -	A12D  1B5B4800	home:			.BYTE 1BH,"[H",0
 104:     -	A131  1B5B481B	cls:      	  	.BYTE 1BH,"[H",1BH,"[2J",0
	              5B324A00
 105:     -	A139  1B5B3F32	hideCursor:	  	.BYTE	1BH,"[?25l",0
	              356C00
 106:     -	A140  1B5B3F32	showCursor:	  	.BYTE	1BH,"[?25h",0
	              356800
 107:				
 108:				;----- Map ------
 109:				include map.asm
**** map.asm ****
   1:				;----- Map data bit positions
   2:     -	0000          	upBit			.EQU	0
   3:     -	0001          	downBit			.EQU	1
   4:     -	0002          	leftBit			.EQU	2
   5:     -	0003          	rightBit		.EQU	3
   6:     -	0004          	powerpBit		.EQU	4
   7:     -	0005          	pelletBit		.EQU	5
   8:     -	0006          	wallBit			.EQU	6
   9:     -	0007          	sfBit			.EQU	7
  10:				
  11:				;----Pellet
  12:     -	0040          	ww 		.EQU	40H
  13:				
  14:     -	002C          	hp 		.EQU	2CH		;left 	right	pellet
  15:     -	0023          	gp		.EQU	23H		;up		down	pellet
  16:				
  17:     -	0026          	lp		.EQU	26H		;down 	left 	pellet
  18:     -	002A          	rp		.EQU	2AH		;down 	right	pellet
  19:     -	0025          	up		.EQU	25H		;up 	left	pellet
  20:     -	0029          	dp		.EQU	29H		;up 	right	pellet
  21:				
  22:     -	002B          	bp		.EQU	2BH		;up		down	right	pellet
  23:     -	0027          	cp		.EQU	27H		;up		down	left	pellet
  24:     -	002E          	vp		.EQU	2EH		;down	left	right	pellet
  25:     -	002D          	kp		.EQU	2DH		;up		left	right	pellet
  26:				
  27:     -	002F          	xp		.EQU	2FH		;all	pellet
  28:				;------- No pellet
  29:     -	000C          	hn 		.EQU	0CH		;left 	right	pellet
  30:     -	0003          	gn		.EQU	03H		;up		down	pellet
  31:				
  32:     -	0006          	ln		.EQU	06H		;down 	left 	pellet
  33:     -	000A          	rn		.EQU	0AH		;down 	right	pellet
  34:     -	0005          	un		.EQU	05H		;up 	left	pellet
  35:     -	0009          	dn		.EQU	09H		;up 	right	pellet
  36:				
  37:     -	000B          	bn		.EQU	0BH		;up		down	right	pellet
  38:     -	0007          	cn		.EQU	07H		;up		down	left	pellet
  39:     -	000E          	vn		.EQU	0EH		;down	left	right	pellet
  40:     -	000D          	kn		.EQU	0DH		;up		left	right	pellet
  41:				
  42:     -	000F          	xn		.EQU	0FH		;all	pellet
  43:				;--------Power Pellet
  44:     -	001C          	hs 		.EQU	1CH		;left 	right	pellet
  45:     -	0013          	gs		.EQU	13H		;up		down	pellet
  46:				
  47:     -	0016          	ls		.EQU	16H		;down 	left 	pellet
  48:     -	001A          	rs		.EQU	1AH		;down 	right	pellet
  49:     -	0015          	us		.EQU	15H		;up 	left	pellet
  50:     -	0019          	ds		.EQU	19H		;up 	right	pellet
  51:				
  52:     -	001B          	bs		.EQU	1BH		;up		down	right	pellet
  53:     -	0017          	cs		.EQU	17H		;up		down	left	pellet
  54:     -	001E          	vs		.EQU	1EH		;down	left	right	pellet
  55:     -	001D          	ks		.EQU	1DH		;up		left	right	pellet
  56:				
  57:     -	001F          	xs		.EQU	1FH		;all	pellet
  58:				
  59:     -	A147  00004040	map1:	.BYTE	00,00,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,00,00
	              40404040
	              40404040
	              40404040
	              40404040
	              40404040
	              40404040
	              40400000
  60:     -	A167  0000402A			.BYTE	00,00,ww,rp,hp,hp,hp,hp,vp,hp,hp,hp,hp,hp,lp,ww,ww,rp,hp,hp,hp,hp,hp,vp,hp,hp,hp,hp,lp,ww,00,00
	              2C2C2C2C
	              2E2C2C2C
	              2C2C2640
	              402A2C2C
	              2C2C2C2E
	              2C2C2C2C
	              26400000
  61:     -	A187  00004013			.BYTE	00,00,ww,gs,ww,ww,ww,ww,gp,ww,ww,ww,ww,ww,gp,ww,ww,gp,ww,ww,ww,ww,ww,gp,ww,ww,ww,ww,gs,ww,00,00
	              40404040
	              23404040
	              40402340
	              40234040
	              40404023
	              40404040
	              13400000
  62:     -	A1A7  00004023			.BYTE	00,00,ww,gp,ww,ww,ww,ww,gp,ww,ww,ww,ww,ww,gp,ww,ww,gp,ww,ww,ww,ww,ww,gp,ww,ww,ww,ww,gp,ww,00,00
	              40404040
	              23404040
	              40402340
	              40234040
	              40404023
	              40404040
	              23400000
  63:     -	A1C7  0000402B			.BYTE	00,00,ww,bp,hp,hp,hp,hp,xp,hp,hp,vp,hp,hp,kp,hp,hp,kp,hp,hp,vp,hp,hp,xp,hp,hp,hp,hp,cp,ww,00,00
	              2C2C2C2C
	              2F2C2C2E
	              2C2C2D2C
	              2C2D2C2C
	              2E2C2C2F
	              2C2C2C2C
	              27400000
  64:     -	A1E7  00004023			.BYTE	00,00,ww,gp,ww,ww,ww,ww,gp,ww,ww,gp,ww,ww,ww,ww,ww,ww,ww,ww,gp,ww,ww,gp,ww,ww,ww,ww,gp,ww,00,00
	              40404040
	              23404023
	              40404040
	              40404040
	              23404023
	              40404040
	              23400000
  65:     -	A207  00004029			.BYTE	00,00,ww,dp,hp,hp,hp,hp,cp,ww,ww,dp,hp,hp,lp,ww,ww,rp,hp,hp,up,ww,ww,bp,hp,hp,hp,hp,up,ww,00,00
	              2C2C2C2C
	              27404029
	              2C2C2640
	              402A2C2C
	              2540402B
	              2C2C2C2C
	              25400000
  66:     -	A227  00004040			.BYTE	00,00,ww,ww,ww,ww,ww,ww,gp,ww,ww,ww,ww,ww,gn,ww,ww,gn,ww,ww,ww,ww,ww,gp,ww,ww,ww,ww,ww,ww,00,00
	              40404040
	              23404040
	              40400340
	              40034040
	              40404023
	              40404040
	              40400000
  67:     -	A247  00000000			.BYTE	00,00,00,00,00,00,00,ww,gp,ww,ww,rn,hn,hn,kn,hn,hn,kn,hn,hn,ln,ww,ww,gp,ww,00,00,00,00,00,00,00
	              00000040
	              2340400A
	              0C0C0D0C
	              0C0D0C0C
	              06404023
	              40000000
	              00000000
  68:     -	A267  00000000			.BYTE	00,00,00,00,00,00,00,ww,gp,ww,ww,gn,ww,ww,ww,00,00,ww,ww,ww,gn,ww,ww,gp,ww,00,00,00,00,00,00,00
	              00000040
	              23404003
	              40404000
	              00404040
	              03404023
	              40000000
	              00000000
  69:     -	A287  40404040			.BYTE	ww,ww,ww,ww,ww,ww,ww,ww,gp,ww,ww,gn,ww,00,00,00,00,00,00,ww,gn,ww,ww,gp,ww,ww,ww,ww,ww,ww,ww,ww
	              40404040
	              23404003
	              40000000
	              00000040
	              03404023
	              40404040
	              40404040
  70:     -	A2A7  0C0C0C0C			.BYTE	hn,hn,hn,hn,hn,hn,hn,hn,xp,hn,hn,cn,ww,00,00,00,00,00,00,ww,bn,hn,hn,xp,hn,hn,hn,hn,hn,hn,hn,hn
	              0C0C0C0C
	              2F0C0C07
	              40000000
	              00000040
	              0B0C0C2F
	              0C0C0C0C
	              0C0C0C0C
  71:     -	A2C7  40404040			.BYTE	ww,ww,ww,ww,ww,ww,ww,ww,gp,ww,ww,gn,ww,00,00,00,00,00,00,ww,gn,ww,ww,gp,ww,ww,ww,ww,ww,ww,ww,ww
	              40404040
	              23404003
	              40000000
	              00000040
	              03404023
	              40404040
	              40404040
  72:     -	A2E7  00000000			.BYTE	00,00,00,00,00,00,00,ww,gp,ww,ww,gn,ww,ww,ww,ww,ww,ww,ww,ww,gn,ww,ww,gp,ww,00,00,00,00,00,00,00
	              00000040
	              23404003
	              40404040
	              40404040
	              03404023
	              40000000
	              00000000
  73:     -	A307  00000000			.BYTE	00,00,00,00,00,00,00,ww,gp,ww,ww,bn,hn,hn,hn,hn,hn,hn,hn,hn,cn,ww,ww,gp,ww,00,00,00,00,00,00,00
	              00000040
	              2340400B
	              0C0C0C0C
	              0C0C0C0C
	              07404023
	              40000000
	              00000000
  74:     -	A327  00004040			.BYTE	00,00,ww,ww,ww,ww,ww,ww,gp,ww,ww,gn,ww,ww,ww,ww,ww,ww,ww,ww,gn,ww,ww,gp,ww,ww,ww,ww,ww,ww,00,00
	              40404040
	              23404003
	              40404040
	              40404040
	              03404023
	              40404040
	              40400000
  75:     -	A347  0000402A			.BYTE	00,00,ww,rp,hp,hp,hp,hp,xp,hp,hp,kp,hp,hp,lp,ww,ww,rp,hp,hp,kp,hp,hp,xp,hp,hp,hp,hp,lp,ww,00,00
	              2C2C2C2C
	              2F2C2C2D
	              2C2C2640
	              402A2C2C
	              2D2C2C2F
	              2C2C2C2C
	              26400000
  76:     -	A367  00004023			.BYTE	00,00,ww,gp,ww,ww,ww,ww,gp,ww,ww,ww,ww,ww,gp,ww,ww,gp,ww,ww,ww,ww,ww,gp,ww,ww,ww,ww,gp,ww,00,00
	              40404040
	              23404040
	              40402340
	              40234040
	              40404023
	              40404040
	              23400000
  77:     -	A387  00004019			.BYTE	00,00,ww,ds,hp,lp,ww,ww,bp,hp,hp,vp,hp,hp,kp,hp,hp,kp,hp,hp,vp,hp,hp,cp,ww,ww,rp,hp,us,ww,00,00
	              2C264040
	              2B2C2C2E
	              2C2C2D2C
	              2C2D2C2C
	              2E2C2C27
	              40402A2C
	              15400000
  78:     -	A3A7  00004040			.BYTE	00,00,ww,ww,ww,gp,ww,ww,gp,ww,ww,gp,ww,ww,ww,ww,ww,ww,ww,ww,gp,ww,ww,gp,ww,ww,gp,ww,ww,ww,00,00
	              40234040
	              23404023
	              40404040
	              40404040
	              23404023
	              40402340
	              40400000
  79:     -	A3C7  0000402A			.BYTE	00,00,ww,rp,hp,kp,hp,hp,up,ww,ww,dp,hp,hp,lp,ww,ww,rp,hp,hp,up,ww,ww,dp,hp,hp,kp,hp,lp,ww,00,00
	              2C2D2C2C
	              25404029
	              2C2C2640
	              402A2C2C
	              25404029
	              2C2C2D2C
	              26400000
  80:     -	A3E7  00004023			.BYTE	00,00,ww,gp,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,gp,ww,ww,gp,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,gp,ww,00,00
	              40404040
	              40404040
	              40402340
	              40234040
	              40404040
	              40404040
	              23400000
  81:     -	A407  00004029			.BYTE	00,00,ww,dp,hp,hp,hp,hp,hp,hp,hp,hp,hp,hp,kp,hp,hp,kp,hp,hp,hp,hp,hp,hp,hp,hp,hp,hp,up,ww,00,00
	              2C2C2C2C
	              2C2C2C2C
	              2C2C2D2C
	              2C2D2C2C
	              2C2C2C2C
	              2C2C2C2C
	              25400000
  82:     -	A427  00004040			.BYTE	00,00,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,00,00
	              40404040
	              40404040
	              40404040
	              40404040
	              40404040
	              40404040
	              40400000
  83:     -	A447  00000000			.BYTE	00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
	              00000000
	              00000000
	              00000000
	              00000000
	              00000000
	              00000000
	              00000000
  84:     -	A467  00000000			.BYTE	00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
	              00000000
	              00000000
	              00000000
	              00000000
	              00000000
	              00000000
	              00000000
  85:     -	A487  00000000			.BYTE	00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
	              00000000
	              00000000
	              00000000
	              00000000
	              00000000
	              00000000
	              00000000
  86:     -	A4A7  00000000			.BYTE	00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
	              00000000
	              00000000
	              00000000
	              00000000
	              00000000
	              00000000
	              00000000
  87:     -	A4C7  00000000			.BYTE	00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
	              00000000
	              00000000
	              00000000
	              00000000
	              00000000
	              00000000
	              00000000
  88:     -	A4E7  00000000			.BYTE	00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
	              00000000
	              00000000
	              00000000
	              00000000
	              00000000
	              00000000
	              00000000
  89:     -	A507  00000000			.BYTE	00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
	              00000000
	              00000000
	              00000000
	              00000000
	              00000000
	              00000000
	              00000000
  90:     -	A527  00000000			.BYTE	00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
	              00000000
	              00000000
	              00000000
	              00000000
	              00000000
	              00000000
	              00000000
  91:				
  92:     -	A547  00004040	map:	.BYTE	00,00,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,00,00
	              40404040
	              40404040
	              40404040
	              40404040
	              40404040
	              40404040
	              40400000
  93:     -	A567  0000400A			.BYTE	00,00,ww,rn,hn,hn,hn,hn,vn,hn,hn,hn,hn,hn,ln,ww,ww,rn,hn,hn,hn,hn,hn,vn,hn,hn,hn,hn,ln,ww,00,00
	              0C0C0C0C
	              0E0C0C0C
	              0C0C0640
	              400A0C0C
	              0C0C0C0E
	              0C0C0C0C
	              06400000
  94:     -	A587  00004003			.BYTE	00,00,ww,gn,ww,ww,ww,ww,gn,ww,ww,ww,ww,ww,gn,ww,ww,gn,ww,ww,ww,ww,ww,gn,ww,ww,ww,ww,gn,ww,00,00
	              40404040
	              03404040
	              40400340
	              40034040
	              40404003
	              40404040
	              03400000
  95:     -	A5A7  00004003			.BYTE	00,00,ww,gn,ww,ww,ww,ww,gn,ww,ww,ww,ww,ww,gn,ww,ww,gn,ww,ww,ww,ww,ww,gn,ww,ww,ww,ww,gn,ww,00,00
	              40404040
	              03404040
	              40400340
	              40034040
	              40404003
	              40404040
	              03400000
  96:     -	A5C7  0000400B			.BYTE	00,00,ww,bn,hn,hn,hn,hn,xn,hn,hn,vn,hn,hn,kn,hn,hn,kn,hn,hn,vn,hn,hn,xn,hn,hn,hn,hn,cn,ww,00,00
	              0C0C0C0C
	              0F0C0C0E
	              0C0C0D0C
	              0C0D0C0C
	              0E0C0C0F
	              0C0C0C0C
	              07400000
  97:     -	A5E7  00004003			.BYTE	00,00,ww,gn,ww,ww,ww,ww,gn,ww,ww,gn,ww,ww,ww,ww,ww,ww,ww,ww,gn,ww,ww,gn,ww,ww,ww,ww,gn,ww,00,00
	              40404040
	              03404003
	              40404040
	              40404040
	              03404003
	              40404040
	              03400000
  98:     -	A607  00004009			.BYTE	00,00,ww,dn,hn,hn,hn,hn,cn,ww,ww,dn,hn,hn,ln,ww,ww,rn,hn,hn,un,ww,ww,bn,hn,hn,hn,hn,un,ww,00,00
	              0C0C0C0C
	              07404009
	              0C0C0640
	              400A0C0C
	              0540400B
	              0C0C0C0C
	              05400000
  99:     -	A627  00004040			.BYTE	00,00,ww,ww,ww,ww,ww,ww,gn,ww,ww,ww,ww,ww,gn,ww,ww,gn,ww,ww,ww,ww,ww,gn,ww,ww,ww,ww,ww,ww,00,00
	              40404040
	              03404040
	              40400340
	              40034040
	              40404003
	              40404040
	              40400000
 100:     -	A647  00000000			.BYTE	00,00,00,00,00,00,00,ww,gn,ww,ww,rn,hn,hn,kn,hn,hn,kn,hn,hn,ln,ww,ww,gn,ww,00,00,00,00,00,00,00
	              00000040
	              0340400A
	              0C0C0D0C
	              0C0D0C0C
	              06404003
	              40000000
	              00000000
 101:     -	A667  00000000			.BYTE	00,00,00,00,00,00,00,ww,gn,ww,ww,gn,ww,ww,ww,00,00,ww,ww,ww,gn,ww,ww,gn,ww,00,00,00,00,00,00,00
	              00000040
	              03404003
	              40404000
	              00404040
	              03404003
	              40000000
	              00000000
 102:     -	A687  40404040			.BYTE	ww,ww,ww,ww,ww,ww,ww,ww,gn,ww,ww,gn,ww,00,00,00,00,00,00,ww,gn,ww,ww,gn,ww,ww,ww,ww,ww,ww,ww,ww
	              40404040
	              03404003
	              40000000
	              00000040
	              03404003
	              40404040
	              40404040
 103:     -	A6A7  0C0C0C0C			.BYTE	hn,hn,hn,hn,hn,hn,hn,hn,xn,hn,hn,cp,ww,00,00,00,00,00,00,ww,bn,hn,hn,xn,hn,hn,hn,hn,hn,hn,hn,hn
	              0C0C0C0C
	              0F0C0C27
	              40000000
	              00000040
	              0B0C0C0F
	              0C0C0C0C
	              0C0C0C0C
 104:     -	A6C7  40404040			.BYTE	ww,ww,ww,ww,ww,ww,ww,ww,gn,ww,ww,gn,ww,00,00,00,00,00,00,ww,gn,ww,ww,gn,ww,ww,ww,ww,ww,ww,ww,ww
	              40404040
	              03404003
	              40000000
	              00000040
	              03404003
	              40404040
	              40404040
 105:     -	A6E7  00000000			.BYTE	00,00,00,00,00,00,00,ww,gn,ww,ww,gn,ww,ww,ww,ww,ww,ww,ww,ww,gn,ww,ww,gn,ww,00,00,00,00,00,00,00
	              00000040
	              03404003
	              40404040
	              40404040
	              03404003
	              40000000
	              00000000
 106:     -	A707  00000000			.BYTE	00,00,00,00,00,00,00,ww,gn,ww,ww,bn,hn,hn,hn,hn,hn,hn,hn,hn,cn,ww,ww,gn,ww,00,00,00,00,00,00,00
	              00000040
	              0340400B
	              0C0C0C0C
	              0C0C0C0C
	              07404003
	              40000000
	              00000000
 107:     -	A727  00004040			.BYTE	00,00,ww,ww,ww,ww,ww,ww,gn,ww,ww,gn,ww,ww,ww,ww,ww,ww,ww,ww,gn,ww,ww,gn,ww,ww,ww,ww,ww,ww,00,00
	              40404040
	              03404003
	              40404040
	              40404040
	              03404003
	              40404040
	              40400000
 108:     -	A747  0000400A			.BYTE	00,00,ww,rn,hn,hn,hn,hn,xn,hn,hn,kn,hn,hn,ln,ww,ww,rn,hn,hn,kn,hn,hn,xn,hn,hn,hn,hn,ln,ww,00,00
	              0C0C0C0C
	              0F0C0C0D
	              0C0C0640
	              400A0C0C
	              0D0C0C0F
	              0C0C0C0C
	              06400000
 109:     -	A767  00004003			.BYTE	00,00,ww,gn,ww,ww,ww,ww,gn,ww,ww,ww,ww,ww,gn,ww,ww,gn,ww,ww,ww,ww,ww,gn,ww,ww,ww,ww,gn,ww,00,00
	              40404040
	              03404040
	              40400340
	              40034040
	              40404003
	              40404040
	              03400000
 110:     -	A787  00004009			.BYTE	00,00,ww,dn,hn,ln,ww,ww,bn,hn,hn,vn,hn,hn,kn,hn,hn,kn,hn,hn,vn,hn,hn,cn,ww,ww,rn,hn,un,ww,00,00
	              0C064040
	              0B0C0C0E
	              0C0C0D0C
	              0C0D0C0C
	              0E0C0C07
	              40400A0C
	              05400000
 111:     -	A7A7  00004040			.BYTE	00,00,ww,ww,ww,gn,ww,ww,gn,ww,ww,gn,ww,ww,ww,ww,ww,ww,ww,ww,gn,ww,ww,gn,ww,ww,gn,ww,ww,ww,00,00
	              40034040
	              03404003
	              40404040
	              40404040
	              03404003
	              40400340
	              40400000
 112:     -	A7C7  0000400A			.BYTE	00,00,ww,rn,hn,kn,hn,hn,un,ww,ww,dn,hn,hn,ln,ww,ww,rn,hn,hn,un,ww,ww,dn,hn,hn,kn,hn,ln,ww,00,00
	              0C0D0C0C
	              05404009
	              0C0C0640
	              400A0C0C
	              05404009
	              0C0C0D0C
	              06400000
 113:     -	A7E7  00004003			.BYTE	00,00,ww,gn,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,gn,ww,ww,gn,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,gn,ww,00,00
	              40404040
	              40404040
	              40400340
	              40034040
	              40404040
	              40404040
	              03400000
 114:     -	A807  00004009			.BYTE	00,00,ww,dn,hn,hn,hn,hn,hn,hn,hn,hn,hn,hn,kn,hn,hn,kn,hn,hn,hn,hn,hn,hn,hn,hn,hn,hn,un,ww,00,00
	              0C0C0C0C
	              0C0C0C0C
	              0C0C0D0C
	              0C0D0C0C
	              0C0C0C0C
	              0C0C0C0C
	              05400000
 115:     -	A827  00004040			.BYTE	00,00,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,00,00
	              40404040
	              40404040
	              40404040
	              40404040
	              40404040
	              40404040
	              40400000
 116:     -	A847  00000000			.BYTE	00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
	              00000000
	              00000000
	              00000000
	              00000000
	              00000000
	              00000000
	              00000000
 117:     -	A867  00000000			.BYTE	00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
	              00000000
	              00000000
	              00000000
	              00000000
	              00000000
	              00000000
	              00000000
 118:     -	A887  00000000			.BYTE	00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
	              00000000
	              00000000
	              00000000
	              00000000
	              00000000
	              00000000
	              00000000
 119:     -	A8A7  00000000			.BYTE	00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
	              00000000
	              00000000
	              00000000
	              00000000
	              00000000
	              00000000
	              00000000
 120:     -	A8C7  00000000			.BYTE	00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
	              00000000
	              00000000
	              00000000
	              00000000
	              00000000
	              00000000
	              00000000
 121:     -	A8E7  00000000			.BYTE	00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
	              00000000
	              00000000
	              00000000
	              00000000
	              00000000
	              00000000
	              00000000
 122:     -	A907  00000000			.BYTE	00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
	              00000000
	              00000000
	              00000000
	              00000000
	              00000000
	              00000000
	              00000000
**** main.asm ****
 110:     -	A927  00000000			.BYTE	00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
	              00000000
	              00000000
	              00000000
	              00000000
	              00000000
	              00000000
	              00000000
 111:				
 112:				;-----Path find map
 113:     -	D000          	pathFindMap	.EQU	0D000H
 114:				
**** main.asm ****
 115:     -	E000          	liveMap		.EQU	0E000H



Statistics:

     4	passes
     0	jr promotions
   313	symbols
  6471	bytes



Symbol Table:

absa            a093     
bn             =   b     
bottomlineloop  a0f0     
boxbodyloop     a0d2     
boxcontentloop  a0dd     
bp             =  2b     
bs             =  1b     
calcnextmove    9133     
calculatemapcell 994e     
calculatemapd   992a     
calculatemapl   9936     
calculatemapr   9942     
calculatemapu   991e     
calculatepathmap 98d0     
calculatepathmaploop 98e2     
caughtjaletime =  20     
checkh          913d     
checkmap        9811     
checkmapchar    982c     
checkmaploop    981b     
checkmapnextline 9826     
checknextlevel  97eb     
checkv          914b     
clearghost      91ac     
clearpm         90ca     
cls             a131     
cn             =   7     
colideghost     91c6     
countdown       9a02     
cp             =  27     
cr             =   d     
cs             =  17     
deathmessage1   9fb8     
deathmessage2   a00f     
delay           a0f6     
delayloop       a0f7     
disphl          a055     
displaygameover 9f94     
displaytitlescreen 9e74     
dn             =   9     
downbit        =   1     
dp             =  29     
drawbox         a0c3     
ds             =  19     
eatghost        9262     
eatpellet       90f7     
eatppellet      910f     
eatspellet      9103     
exitmessage     9f80     
gameloop        903a     
gameoverwaitforinput 9faf     
gametop         9007     
getaddresspf    9839     
getmapaddress   97d3     
getmove         9117     
getpmmapdata    90ea     
ghostcheckstack 923e     
ghostdis       =8113     
ghostdostack    925d     
ghostmove       9200     
ghostmoved      921a     
ghostmovel      9226     
ghostmover      9232     
ghostmoveu      920e     
ghostnextmove   919f     
gn             =   3     
gp             =  23     
gs             =  13     
hidecursor      a139     
hltodec         a04d     
hn             =   c     
home            a12d     
hp             =  2c     
hs             =  1c     
incrementde     9837     
info            9f48     
initghost       91d3     
initlives      =   4     
initmap         97c7     
initpacman      90a1     
initpacx       =   e     
initpacy       =   e     
initpathfind    98b8     
initppfloop     98bf     
input           9087     
ismovevalid     97ad     
killpacman      9172     
kn             =   d     
kp             =  2d     
ks             =  1d     
leftbit        =   2     
level          =8902     
levelhud        99ee     
lf             =   a     
liveblanking    99fe     
livemap        =e000     
liveshud        99f6     
ln             =   6     
logo            9eb8     
lp             =  26     
ls             =  16     
map             a547     
map1            a147     
message         9f5c     
move            9787     
movecursor      a032     
moved           979b     
movedvalid      97be     
moveghost       91e0     
movel           97a1     
movelvalid      97c1     
movepm          915b     
movepma         9166     
mover           97a7     
movervalid      97c4     
moveu           9795     
moveuvalid      97bb     
newline         a029     
nextmovevalid   912c     
num1            a06e     
num1h           a087     
num2            a070     
num2h           a08b     
number1         9a54     
number2         9bb4     
number3         9d14     
numtohex        a078     
oghost          94e4     
oghostcheckd    9454     
oghostcheckl    9462     
oghostcheckr    9470     
oghostchecku    9446     
oghostclear     93ae     
oghostcolide    94aa     
oghostdectimer  940b     
oghostdir      =8122     
oghostinit      93e2     
oghostinittimer=  20     
oghostinitx    =   f     
oghostinity    =   8     
oghostmapdata   93d5     
oghostmove      93f2     
oghostnextmove  941c     
oghostpathfind  947e     
oghostpfpp      9495     
oghostprint     93ba     
oghostsetnewdir 94a1     
oghoststack     94d6     
oghoststorex   =   f     
oghoststorey   =   b     
oghosttimer    =8125     
oghostx        =8120     
oghosty        =8121     
oldstackpointer=89f0     
originalbc     =89f2     
paccdir        =8102     
paclives       =8105     
pacman          9194     
pacndir        =8103     
pacx           =8100     
pacy           =8101     
pathfinddepth  =  30     
pathfindmap    =d000     
pellet          a115     
pelletbit      =   5     
pfnextrow       98c9     
pghost          9625     
pghostcheckd    9595     
pghostcheckl    95a3     
pghostcheckr    95b1     
pghostchecku    9587     
pghostclear     94ef     
pghostcolide    95eb     
pghostdectimer  954c     
pghostdir      =8132     
pghostinit      9523     
pghostinittimer=  30     
pghostinitx    =   f     
pghostinity    =   8     
pghostmapdata   9516     
pghostmove      9533     
pghostnextmove  955d     
pghostpathfind  95bf     
pghostpfpp      95d6     
pghostprint     94fb     
pghostsetnewdir 95e2     
pghoststack     9617     
pghoststorex   =  10     
pghoststorey   =   b     
pghosttimer    =8135     
pghostx        =8130     
pghosty        =8131     
pmchar          987b     
pmcharret       98b6     
pmloop          9867     
pmnextline      9875     
pmpfafterskip   9973     
pmpfloop        996a     
pmpfnextline    9980     
pmpfskip        9986     
powerpbit      =   4     
powerpellet     a10a     
ppactive       =8104     
ppellettics    =  20     
print           a0a8     
printatpos      a0b3     
printatposloop  a0b4     
printghost      91b9     
printhud        998f     
printlevel      99ad     
printlives      99c1     
printlivesloop  99d7     
printloop       a0a9     
printmap        9860     
printmapat      9851     
printp          9896     
printpfmap      995a     
printpm         90d6     
printpp         988e     
printret        a0b1     
printscore      9999     
printsf         98a6     
printsghost     91ed     
printvoid       98ae     
printwall       989e     
quit            907c     
randoma         a098     
removeoldlives  99df     
resetpacman     90b2     
rghost          93a3     
rghostcheckd    9313     
rghostcheckl    9321     
rghostcheckr    932f     
rghostchecku    9305     
rghostclear     926d     
rghostcolide    9369     
rghostdectimer  92ca     
rghostdir      =8112     
rghostinit      92a1     
rghostinittimer=  10     
rghostinitx    =   f     
rghostinity    =   8     
rghostmapdata   9294     
rghostmove      92b1     
rghostnextmove  92db     
rghostpathfind  933d     
rghostpfpp      9354     
rghostprint     9279     
rghostsetnewdir 9360     
rghoststack     9395     
rghoststorex   =   e     
rghoststorey   =   b     
rghosttimer    =8115     
rghostx        =8110     
rghosty        =8111     
rightbit       =   3     
rn             =   a     
rp             =  2a     
rs             =  1a     
score          =8900     
scorehud        99e6     
seed           =8888     
sfbit          =   7     
sghost0         9771     
sghost1         977c     
sghost1print    91f9     
showcursor      a140     
startgame       901c     
startgamemessage 9f70     
superfruit      a120     
tghost          9766     
tghostcheckd    96d6     
tghostcheckl    96e4     
tghostcheckr    96f2     
tghostchecku    96c8     
tghostclear     9630     
tghostcolide    972c     
tghostdectimer  968d     
tghostdir      =8142     
tghostinit      9664     
tghostinittimer=  40     
tghostinitx    =   f     
tghostinity    =   8     
tghostmapdata   9657     
tghostmove      9674     
tghostnextmove  969e     
tghostpathfind  9700     
tghostpfpp      9717     
tghostprint     963c     
tghostsetnewdir 9723     
tghoststack     9758     
tghoststorex   =  11     
tghoststorey   =   b     
tghosttimer    =8145     
tghostx        =8140     
tghosty        =8141     
titlescreenwaitforinput 9eaa     
toplineloop     a0ca     
un             =   5     
up             =  25     
upbit          =   0     
us             =  15     
validinput      909d     
vn             =   e     
void            a12b     
vp             =  2e     
vs             =  1e     
wall            a0ff     
wallbit        =   6     
ww             =  40     
xn             =   f     
xp             =  2f     
xs             =  1f     
