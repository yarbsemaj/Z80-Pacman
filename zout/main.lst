   1:     -	000D          	CR              .EQU     0DH
   2:     -	000A          	LF              .EQU     0AH
   3:				
   4:				;----- Map data bit positions
   5:     -	0000          	upBit			.EQU	0
   6:     -	0001          	downBit			.EQU	1
   7:     -	0002          	leftBit			.EQU	2
   8:     -	0003          	rightBit		.EQU	3
   9:     -	0004          	powerpBit		.EQU	4
  10:     -	0005          	pelletBit		.EQU	5
  11:     -	0006          	wallBit			.EQU	6
  12:     -	0007          	sfBit			.EQU	7
  13:				;--------Initial Stats
  14:     -	000E          	initPacx		.EQU	14
  15:     -	000E          	initPacy		.EQU	14
  16:				
  17:     -	0014          	initRedGhostX	.EQU	20
  18:     -	0001          	initRedGhostY	.EQU	1
  19:				
  20:				;-----Varr
  21:				;Packman
  22:     -	8100          	pacx			.EQU	8100H
  23:     -	8101          	pacy			.EQU	8101H
  24:     -	8102          	pacCDir			.EQU	8102H		;Pacmans current direction
  25:     -	8103          	pacNDir			.EQU	8103H		;Pacman next direction (from key press)
  26:				
  27:				;RedGhost
  28:     -	8110          	redGhostX		.EQU	8110H		
  29:     -	8111          	redGhostY		.EQU	8111H
  30:     -	8112          	redGhostDir		.EQU	8112H
  31:     -	8113          	redGhostDis		.EQU	8113H		;Red ghost move distance from pacman
  32:				
  33:     -	8888          	seed			.EQU	8888H		;Random seed
  34:				
  35:				
  36:				
  37:     -	8900          	score			.EQU	8900H		;Score
  38:				
  39:				
  40:				
  41:				
  42:     -	9000          		.ORG 9000H
  43:    0+7	9000  3E0E    				ld		a, initPacx		;set Pacman Pos
  44:    7+13	9002  320081  				ld		(pacx),a
  45:   20+7	9005  3E0E    				ld		a, initPacy
  46:   27+13	9007  320181  				ld		(pacy),a
  47:   40+7	900A  3E44    				ld		a, 'D'			;Set start direction
  48:   47+13	900C  320281  				ld		(pacCDir),A
  49:   60+13	900F  320381  				ld		(pacNDir),A
  50:   73+10	9012  210000  				ld		HL, 0H
  51:   83+16	9015  220089  				LD		(score), HL
  52:   99+7	9018  3E14    				ld		a, initRedGhostX	;set RedGhost Pos
  53:  106+13	901A  321081  				ld		(redGhostX),a
  54:  119+7	901D  3E01    				ld		a, initRedGhostY
  55:  126+13	901F  321181  				ld		(redGhostY),a
  56:  139+10	9022  21BE93  				LD		HL, cls			;Clear screen
  57:  149+17	9025  CD3F93  				CALL	print
  58:  166+17	9028  CD5292  				call 	printMap
  59:     -	902B          	gameLoop:		
  60:  183+17	902B  CD5790  				call	input
  61:  200+17	902E  CDB890  				call 	getMove
  62:  217+17	9031  CD7190  				call 	clearPM
  63:  234+17	9034  CDFC90  				call	movePM
  64:  251+17	9037  CD7D90  				call 	printPM
  65:  268+17	903A  CDA390  				call	eatPellet
  66:							
  67:  285+17	903D  CD4691  				call	getRedGhostNextMove
  68:  302+17	9040  CD0891  				call	clearRedGhost
  69:  319+17	9043  CD3A91  				call	moveRedGhost
  70:  336+17	9046  CD1491  				call	printRedGhost
  71:							
  72:  353+17	9049  CDAA92  				call 	printScore
  73:  370+7	904C  06FF    				LD 		B,0FFH   ;delay
  74:  377+7	904E  0EFF    				LD		C,0FFH
  75:  384+17	9050  CD4A93  				CALL 	DELAY
  76:  401+10	9053  C32B90  				JP		gameLoop
  77:  411+10	9056  C9      				ret
  78:						
  79:				;-------------- Input --------------------------					
  80:     -	9057          	input:
  81:  421+11	9057  DF      					RST		18H
  82:  432+5+6	9058  C8      					RET		Z
  83:  437+11	9059  D7      					RST		10H
  84:  448+7	905A  E6DF    					AND     11011111b       ; lower to uppercase
  85:  455+7	905C  FE57    					CP		'W'
  86:  462+7+5	905E  280D    					JR		Z,validInput
  87:  469+7	9060  FE41    					CP		'A'
  88:  476+7+5	9062  2809    					JR		Z,validInput
  89:  483+7	9064  FE53    					CP		'S'
  90:  490+7+5	9066  2805    					JR		Z,validInput
  91:  497+7	9068  FE44    					CP		'D'
  92:  504+7+5	906A  2801    					JR		Z,validInput
  93:  511+10	906C  C9      					RET
  94:     -	906D          	validInput:		
  95:  521+13	906D  320381  					LD		(pacNDir), A
  96:  534+10	9070  C9      					RET
  97:						
  98:				;----------Pacman------;
  99:     -	9071          	clearPM:
 100:  544+13	9071  3A0081  					LD		A, (pacx)		;Push X to stack
 101:  557+4	9074  4F      					LD		C,A
 102:  561+13	9075  3A0181  					LD		A, (pacy)		;Push Y to stack
 103:  574+4	9078  47      					LD		B,A
 104:  578+17	9079  CD3C92  					CALL 	printMapAt
 105:  595+10	907C  C9      					RET
 106:								
 107:     -	907D          	printPM:
 108:  605+13	907D  3A0081  					LD		A, (pacx)		;Push X to stack
 109:  618+4	9080  3C      					INC		A
 110:  622+4	9081  6F      					LD		L,A
 111:  626+7	9082  2600    					LD		H, $00			;We dont care about msb
 112:  633+11	9084  E5      					PUSH	HL
 113:  644+13	9085  3A0181  					LD		A, (pacy)		;Push Y to stack
 114:  657+4	9088  3C      					INC		A
 115:  661+4	9089  6F      					LD		L,A
 116:  665+7	908A  2600    					LD		H, $00			;Again we dont care
 117:  672+11	908C  E5      					PUSH	HL
 118:  683+17	908D  CDD192  					CALL	moveCursor
 119:  700+10	9090  218593  					LD		HL, pacman
 120:  710+17	9093  CD3F93  					CALL 	print
 121:  727+10	9096  C9      					RET
 122:     -	9097          	getPMMapData:	
 123:  737+13	9097  3A0081  					LD		A, (pacx)
 124:  750+4	909A  4F      					LD		C,A
 125:  754+13	909B  3A0181  					LD		A, (pacy)
 126:  767+4	909E  47      					LD		B,A
 127:  771+17	909F  CD2592  					CALL	getDataAtPos
 128:  788+10	90A2  C9      					ret
 129:     -	90A3          	eatPellet:		;Eat pellet at packman location
 130:  798+17	90A3  CD9790  					CALL 	getPMMapData
 131:  815+8	90A6  CB6F    					BIT		pelletBit,A
 132:  823+7+5	90A8  2001    					JR		NZ,eatSPellet
 133:  830+10	90AA  C9      					RET
 134:								
 135:     -	90AB          	eatSPellet:		
 136:  840+11	90AB  E5      					PUSH	HL		
 137:  851+16	90AC  2A0089  					LD		HL,(score)
 138:  867+6	90AF  23      					INC		HL
 139:  873+6	90B0  23      					INC		HL
 140:  879+16	90B1  220089  					LD		(score),HL
 141:  895+10	90B4  E1      					POP		HL
 142:  905+15	90B5  CBAE    					RES		pelletBit,(HL)
 143:  920+10	90B7  C9      					RET
 144:								
 145:     -	90B8          	getMove:		;Sets the current move var
 146:  930+17	90B8  CD9790  					CALL	getPMMapData
 147:  947+4	90BB  57      					LD		D,A
 148:  951+13	90BC  3A0381  					LD		A,(pacNDir)			;Is the next move valid
 149:  964+17	90BF  CD0B92  					CALL	isMoveValid
 150:  981+7+5	90C2  2009    					JR		NZ,nextMoveValid
 151:  988+13	90C4  3A0281  					LD		A,(pacCDir)			;Is the current move valid
 152: 1001+17	90C7  CD0B92  					CALL	isMoveValid
 153: 1018+5+6	90CA  C0      					RET		NZ
 154: 1023+12	90CB  1807    					JR		calcNextMove
 155:								
 156:     -	90CD          	nextMoveValid:
 157: 1035+13	90CD  320281  					LD		(pacCDir),A
 158: 1048+13	90D0  320381  					LD		(pacNDir),A
 159: 1061+10	90D3  C9      					RET
 160:								
 161:     -	90D4          	calcNextMove:	
 162: 1071+7	90D4  FE41    					CP		'A'
 163: 1078+7+5	90D6  2814    					JR		Z,checkV
 164: 1085+7	90D8  FE44    					CP		'D'
 165: 1092+7+5	90DA  2810    					JR		Z,checkV
 166: 1099+12	90DC  1800    					JR		checkH
 167:     -	90DE          	checkH:
 168: 1111+7	90DE  3E41    					LD		A,'A'
 169: 1118+17	90E0  CD0B92  					CALL	isMoveValid
 170: 1135+7+5	90E3  20E8    					JR		NZ,nextMoveValid
 171: 1142+7	90E5  3E44    					LD		A,'D'
 172: 1149+17	90E7  CD0B92  					CALL	isMoveValid
 173: 1166+7+5	90EA  20E1    					JR		NZ,nextMoveValid
 174:     -	90EC          	checkV:
 175: 1173+7	90EC  3E57    					LD		A,'W'
 176: 1180+17	90EE  CD0B92  					CALL	isMoveValid
 177: 1197+7+5	90F1  20DA    					JR		NZ,nextMoveValid
 178: 1204+7	90F3  3E53    					LD		A,'S'
 179: 1211+17	90F5  CD0B92  					CALL	isMoveValid
 180: 1228+7+5	90F8  20D3    					JR		NZ,nextMoveValid
 181: 1235+12	90FA  18E2    					JR		checkH
 182:				;Move
 183:     -	90FC          	movePM:
 184: 1247+13	90FC  3A0281  					LD		A,(pacCDir)
 185: 1260+10	90FF  110081  					LD		DE,pacx
 186: 1270+10	9102  010181  					LD		BC,pacy
 187: 1280+10	9105  C3E591  					JP		move
 188:				;------------Ghost
 189:				;Red
 190:     -	9108          	clearRedGhost:
 191: 1290+13	9108  3A1081  					LD		A, (redGhostX)		;Push X to stack
 192: 1303+4	910B  4F      					LD		C,A
 193: 1307+13	910C  3A1181  					LD		A, (redGhostY)		;Push Y to stack
 194: 1320+4	910F  47      					LD		B,A
 195: 1324+17	9110  CD3C92  					CALL 	printMapAt
 196: 1341+10	9113  C9      					RET
 197:								
 198:     -	9114          	printRedGhost:
 199: 1351+13	9114  3A1081  					LD		A, (redGhostX)		;Push X to stack
 200: 1364+4	9117  3C      					INC		A
 201: 1368+4	9118  6F      					LD		L,A
 202: 1372+7	9119  2600    					LD		H, $00			;We dont care about msb
 203: 1379+11	911B  E5      					PUSH	HL
 204: 1390+13	911C  3A1181  					LD		A, (redGhostY)		;Push Y to stack
 205: 1403+4	911F  3C      					INC		A
 206: 1407+4	9120  6F      					LD		L,A
 207: 1411+7	9121  2600    					LD		H, $00			;Again we dont care
 208: 1418+11	9123  E5      					PUSH	HL
 209: 1429+17	9124  CDD192  					CALL	moveCursor
 210: 1446+10	9127  219093  					LD		HL, redGhost
 211: 1456+17	912A  CD3F93  					CALL 	print
 212: 1473+10	912D  C9      					RET
 213:     -	912E          	getRedGhostMapData:	
 214: 1483+13	912E  3A1081  					LD		A, (redGhostX)
 215: 1496+4	9131  4F      					LD		C,A
 216: 1500+13	9132  3A1181  					LD		A, (redGhostY)
 217: 1513+4	9135  47      					LD		B,A
 218: 1517+17	9136  CD2592  					CALL	getDataAtPos
 219: 1534+10	9139  C9      					ret
 220:				;Move
 221:     -	913A          	moveRedGhost:
 222: 1544+13	913A  3A1281  					LD		A,(redGhostDir)
 223: 1557+10	913D  111081  					LD		DE,redGhostX
 224: 1567+10	9140  011181  					LD		BC,redGhostY
 225: 1577+10	9143  C3E591  					JP		move
 226:     -	9146          	getRedGhostNextMove:
 227: 1587+7	9146  3E41    					LD		A, 41H
 228: 1594+13	9148  321381  					LD		(redGhostDis),A
 229: 1607+17	914B  CD2E91  					CALL	getRedGhostMapData
 230: 1624+4	914E  57      					LD		D,A
 231: 1628+7	914F  3E57    					LD		A,	'W'			;check up
 232: 1635+17	9151  CD0B92  					CALL	isMoveValid
 233: 1652+10+7	9154  C47091  					CALL	NZ,redGhostSetMove
 234: 1662+7	9157  3E53    					LD		A,	'S'			;down
 235: 1669+17	9159  CD0B92  					CALL	isMoveValid
 236: 1686+10+7	915C  C47091  					CALL	NZ,redGhostSetMove
 237: 1696+7	915F  3E41    					LD		A,	'A'			;left
 238: 1703+17	9161  CD0B92  					CALL	isMoveValid
 239: 1720+10+7	9164  C47091  					CALL	NZ,redGhostSetMove
 240: 1730+7	9167  3E44    					LD		A,	'D'			;right
 241: 1737+17	9169  CD0B92  					CALL	isMoveValid
 242: 1754+10+7	916C  C47091  					CALL	NZ,redGhostSetMove
 243: 1764+10	916F  C9      					RET
 244:								
 245:     -	9170          	redGhostSetMove:
 246: 1774+11	9170  F5      					PUSH	AF
 247: 1785+7	9171  FE57    					CP		'W'
 248: 1792+7+5	9173  280A    					JR		Z,redGhostCheckU
 249: 1799+7	9175  FE41    					CP		'A'
 250: 1806+7+5	9177  2820    					JR		Z,redGhostCheckL
 251: 1813+7	9179  FE53    					CP		'S'
 252: 1820+7+5	917B  280F    					JR		Z,redGhostCheckD
 253: 1827+12	917D  1827    					JR		redGhostCheckR
 254:								
 255:     -	917F          	redGhostCheckU:			
 256: 1839+13	917F  3A1181  					LD		A, (redGhostY)
 257: 1852+4	9182  3D      					DEC		A
 258: 1856+7	9183  E61F    					AND		00011111B
 259: 1863+4	9185  4F      					LD		C,A
 260: 1867+13	9186  3A1081  					LD		A,(redGhostX)
 261: 1880+4	9189  47      					LD		B,A
 262: 1884+12	918A  1827    					JR		redGhostPathFind
 263:     -	918C          	redGhostCheckD:			
 264: 1896+13	918C  3A1181  					LD		A, (redGhostY)
 265: 1909+4	918F  3C      					INC		A
 266: 1913+7	9190  E61F    					AND		00011111B
 267: 1920+4	9192  4F      					LD		C,A
 268: 1924+13	9193  3A1081  					LD		A,(redGhostX)
 269: 1937+4	9196  47      					LD		B,A
 270: 1941+12	9197  181A    					JR		redGhostPathFind
 271:     -	9199          	redGhostCheckL:			
 272: 1953+13	9199  3A1081  					LD		A, (redGhostX)
 273: 1966+4	919C  3D      					DEC		A
 274: 1970+7	919D  E61F    					AND		00011111B
 275: 1977+4	919F  47      					LD		B,A
 276: 1981+13	91A0  3A1181  					LD		A,(redGhostY)
 277: 1994+4	91A3  4F      					LD		C,A
 278: 1998+12	91A4  180D    					JR		redGhostPathFind
 279:     -	91A6          	redGhostCheckR:			
 280: 2010+13	91A6  3A1081  					LD		A, (redGhostX)
 281: 2023+4	91A9  3C      					INC		A
 282: 2027+7	91AA  E61F    					AND		00011111B
 283: 2034+4	91AC  47      					LD		B,A
 284: 2038+13	91AD  3A1181  					LD		A,(redGhostY)
 285: 2051+4	91B0  4F      					LD		C,A
 286: 2055+12	91B1  1800    					JR		redGhostPathFind
 287:				
 288:     -	91B3          	redGhostPathFind:
 289: 2067+13	91B3  3A1381  					LD		A,(redGhostDis)
 290: 2080+4	91B6  5F      					LD		E,A
 291: 2084+13	91B7  3A0081  					LD		A,(pacx)
 292: 2097+4	91BA  90      					SUB		B
 293: 2101+17	91BB  CD2A93  					CALL	absA
 294: 2118+4	91BE  67      					LD		H,A
 295: 2122+13	91BF  3A0181  					LD		A,(pacy)
 296: 2135+4	91C2  91      					SUB		C
 297: 2139+17	91C3  CD2A93  					CALL	absA
 298: 2156+4	91C6  84      					ADD		H
 299: 2160+4	91C7  BB      					CP		E
 300: 2164+10	91C8  CAD891  					JP		Z,redGhostSetEqual		;If 2 options are equidistant, chose a random one to prevent a loop
 301: 2174+10	91CB  FAD091  					JP		M,redGhostSetNewDir
 302:								;CALL	NumToHex
 303: 2184+10	91CE  F1      					POP		AF
 304:								;RST		08H
 305: 2194+10	91CF  C9      					RET
 306:     -	91D0          	redGhostSetNewDir:
 307: 2204+13	91D0  321381  					LD		(redGhostDis),A
 308:								;CALL	NumToHex
 309: 2217+10	91D3  F1      					POP		AF
 310:								;RST		08H
 311: 2227+13	91D4  321281  					LD		(redGhostDir),A
 312: 2240+10	91D7  C9      					RET
 313:     -	91D8          	redGhostSetEqual:
 314: 2250+4	91D8  47      					LD		B,A
 315: 2254+17	91D9  CD2F93  					CALL	randomA
 316: 2271+8	91DC  CB4F    					BIT		1,A
 317: 2279+7+5	91DE  2802    					JR		Z,redGhostRandomSet
 318: 2286+10	91E0  F1      					POP		AF
 319: 2296+10	91E1  C9      					RET
 320:     -	91E2          	redGhostRandomSet:
 321: 2306+4	91E2  78      					LD		A,B
 322: 2310+12	91E3  18EB    					JR		redGhostSetNewDir
 323:				;-----------Generic Move Libs -----;
 324:     -	91E5          	move:
 325: 2322+7	91E5  FE57    					CP		'W'
 326: 2329+7+5	91E7  280A    					JR		Z,moveU
 327: 2336+7	91E9  FE41    					CP		'A'
 328: 2343+7+5	91EB  2812    					JR		Z,moveL
 329: 2350+7	91ED  FE53    					CP		'S'
 330: 2357+7+5	91EF  2808    					JR		Z,moveD
 331: 2364+12	91F1  1812    					JR		moveR
 332:				
 333:     -	91F3          	moveU:			
 334: 2376+7	91F3  0A      					LD		A, (BC)
 335: 2383+4	91F4  3D      					DEC		A
 336: 2387+7	91F5  E61F    					AND		00011111B
 337: 2394+7	91F7  02      					LD		(BC),A
 338: 2401+10	91F8  C9      					RET
 339:     -	91F9          	moveD:			
 340: 2411+7	91F9  0A      					LD		A, (BC)
 341: 2418+4	91FA  3C      					INC		A
 342: 2422+7	91FB  E61F    					AND		00011111B
 343: 2429+7	91FD  02      					LD		(BC),A
 344: 2436+10	91FE  C9      					RET
 345:     -	91FF          	moveL:			
 346: 2446+7	91FF  1A      					LD		A, (DE)
 347: 2453+4	9200  3D      					DEC		A
 348: 2457+7	9201  E61F    					AND		00011111B
 349: 2464+7	9203  12      					LD		(DE),A
 350: 2471+10	9204  C9      					RET
 351:     -	9205          	moveR:			
 352: 2481+7	9205  1A      					LD		A, (DE)
 353: 2488+4	9206  3C      					INC		A
 354: 2492+7	9207  E61F    					AND		00011111B
 355: 2499+7	9209  12      					LD		(DE),A
 356: 2506+10	920A  C9      					RET
 357:     -	920B          	isMoveValid:
 358: 2516+7	920B  FE57    					CP		'W'
 359: 2523+7+5	920D  280A    					JR		Z,moveUValid
 360: 2530+7	920F  FE41    					CP		'A'
 361: 2537+7+5	9211  280C    					JR		Z,moveLValid
 362: 2544+7	9213  FE53    					CP		'S'
 363: 2551+7+5	9215  2805    					JR		Z,moveDValid
 364: 2558+12	9217  1809    					JR		moveRValid
 365:     -	9219          	moveUValid:			
 366: 2570+8	9219  CB42    					BIT		upBit,D
 367: 2578+10	921B  C9      					RET
 368:     -	921C          	moveDValid:			
 369: 2588+8	921C  CB4A    					BIT		downBit,D
 370: 2596+10	921E  C9      					RET
 371:     -	921F          	moveLValid:			
 372: 2606+8	921F  CB52    					BIT		leftBit,D
 373: 2614+10	9221  C9      					RET
 374:     -	9222          	moveRValid:			
 375: 2624+8	9222  CB5A    					BIT		rightBit,D
 376: 2632+10	9224  C9      					RET
 377:								
 378:				;------- Get Map Data ----;
 379:				; C - X
 380:				; B	- Y
 381:     -	9225          	getDataAtPos:
 382: 2642+8	9225  CB00    					rlc		b			;Shift b left 5
 383: 2650+8	9227  CB00    					rlc		b			;Shift b left 5
 384: 2658+8	9229  CB00    					rlc		b			;Shift b left 5
 385: 2666+8	922B  CB00    					rlc		b			;Shift b left 5
 386: 2674+8	922D  CB00    					rlc		b			;Shift b left 5
 387: 2682+4	922F  78      					ld		a,b
 388: 2686+7	9230  E6E0    					and		11100000b	;Mask lower adress
 389: 2693+4	9232  B1      					or		c			;Combine with C
 390: 2697+4	9233  6F      					ld		l,a			;A is now low byte of adress
 391: 2701+4	9234  78      					ld		a,b
 392: 2705+7	9235  E61F    					and		00011111b	;Mask upper adress
 393: 2712+7	9237  F6E0    					or		0E0H		;Start of map
 394: 2719+4	9239  67      					ld		h,a
 395: 2723+7	923A  7E      					ld		a,(HL)
 396: 2730+10	923B  C9      					ret
 397:				
 398:				;--------- Map print -------- ;
 399:				; C - X
 400:				; B	- Y
 401:     -	923C          	printMapAt:	
 402: 2740+11	923C  C5      				PUSH	BC
 403: 2751+4	923D  0C      				INC		C
 404: 2755+4	923E  69      				LD		L,C
 405: 2759+7	923F  2600    				LD		H, $00			;We dont care about msb
 406: 2766+11	9241  E5      				PUSH	HL
 407: 2777+4	9242  04      				INC		B
 408: 2781+4	9243  68      				LD		L,B
 409: 2785+7	9244  2600    				LD		H, $00			;Again we dont care
 410: 2792+11	9246  E5      				PUSH	HL
 411: 2803+17	9247  CDD192  				CALL	moveCursor
 412: 2820+10	924A  C1      				POP 	BC
 413: 2830+17	924B  CD2592  				CALL	getDataAtPos
 414: 2847+17	924E  CD6D92  				CALL	pmChar
 415: 2864+10	9251  C9      				RET
 416:				
 417:     -	9252          	printMap:
 418: 2874+7	9252  3E20    					ld		a,32
 419: 2881+4	9254  47      					ld		b,a			; 32 chars per line
 420: 2885+4	9255  4F      					ld		c,a			; 32 lines per map
 421: 2889+10	9256  2100E0  					ld		hl,map
 422: 2899+7	9259  7E      	pmLoop:			ld		a,(hl)		; get char
 423: 2906+17	925A  CD6D92  					call	pmChar		; decode what to print
 424: 2923+6	925D  23      					inc		hl			; next char
 425: 2929+8+5	925E  10F9    					djnz	pmLoop		; if were not at the end of a line, print next char
 426: 2937+17	9260  CDC892  					call	newline		; if we are, print a new line
 427: 2954+4	9263  41      					ld		b,c			;are we at the end of a block
 428: 2958+8+5	9264  1001    					djnz	pmNextLine
 429: 2966+10	9266  C9      					ret
 430:     -	9267          	pmNextLine:	
 431: 2976+4	9267  48      					ld		c,b			;copy decremented b back to c
 432: 2980+7	9268  3E20    					ld 		a,32		;refill b withj 32
 433: 2987+4	926A  47      					ld		b,a
 434: 2991+12	926B  18EC    					jr		pmLoop		;draw next char
 435:				
 436:				
 437:     -	926D          	pmChar:		;-- Print map char a
 438: 3003+11	926D  E5      					push	hl
 439: 3014+8	926E  CB67    					bit		powerpBit,a
 440: 3022+7+5	9270  200E    					jr		nz,printPP
 441: 3029+8	9272  CB6F    					bit		pelletBit,a
 442: 3037+7+5	9274  2012    					jr		nz,printP
 443: 3044+8	9276  CB77    					bit		wallBit,a
 444: 3052+7+5	9278  2016    					jr		nz,printWall
 445: 3059+8	927A  CB7F    					bit		sfBit,a
 446: 3067+7+5	927C  201A    					jr		nz,printSF
 447: 3074+12	927E  1820    					jr	 	printVoid
 448:							
 449:     -	9280          	printPP:
 450: 3086+10	9280  215C93  					ld		hl,powerPellet
 451: 3096+17	9283  CD3F93  					call	print
 452: 3113+12	9286  1820    					jr		pmCharRet
 453:     -	9288          	printP:
 454: 3125+10	9288  216793  					ld		hl,pellet
 455: 3135+17	928B  CD3F93  					call	print
 456: 3152+12	928E  1818    					jr		pmCharRet
 457:     -	9290          	printWall:
 458: 3164+10	9290  215193  					ld		hl,wall
 459: 3174+17	9293  CD3F93  					call	print
 460: 3191+12	9296  1810    					jr		pmCharRet
 461:     -	9298          	printSF:
 462: 3203+10	9298  217293  					ld		hl,superFruit
 463: 3213+17	929B  CD3F93  					call	print
 464: 3230+12	929E  1808    					jr		pmCharRet
 465:     -	92A0          	printVoid:
 466: 3242+10	92A0  21BC93  					ld		hl,void
 467: 3252+17	92A3  CD3F93  					call	print
 468: 3269+12	92A6  1800    					jr		pmCharRet
 469:     -	92A8          	pmCharRet:	
 470: 3281+10	92A8  E1      					pop 	hl
 471: 3291+10	92A9  C9      					ret
 472:								
 473:     -	92AA          	printScore:					
 474: 3301+10	92AA  210200  					LD		HL, $02
 475: 3311+11	92AD  E5      					PUSH	HL
 476: 3322+10	92AE  212300  					LD		HL, $23
 477: 3332+11	92B1  E5      					PUSH	HL
 478: 3343+17	92B2  CDD192  					CALL	moveCursor
 479: 3360+10	92B5  217D93  					LD		HL, scoreHUD
 480: 3370+17	92B8  CD3F93  					CALL 	print
 481: 3387+16	92BB  2A0089  					LD		HL, (score)
 482: 3403+17	92BE  CDE892  					CALL	HLToDec
 483: 3420+7	92C1  3E0A    					LD		A,LF
 484: 3427+11	92C3  CF      					RST     08H
 485: 3438+7	92C4  3E0D    					LD		A,CR
 486: 3445+11	92C6  CF      					RST     08H
 487: 3456+10	92C7  C9      					RET
 488:							
 489:				;------- Libs ------------;
 490:     -	92C8          	newline:			
 491: 3466+11	92C8  F5      					push 	af
 492: 3477+7	92C9  3E0D    					ld		a, CR
 493: 3484+11	92CB  CF      					rst 	08H
 494: 3495+7	92CC  3E0A    					ld		a, LF
 495: 3502+11	92CE  CF      					rst 	08H
 496: 3513+10	92CF  F1      					pop 	af
 497: 3523+10	92D0  C9      					ret
 498:							
 499:				;move cursor to (sp,sp-2)				
 500:     -	92D1          	moveCursor:		
 501: 3533+10	92D1  D1      					POP		DE
 502: 3543+7	92D2  3E1B    					LD		A,$1B
 503: 3550+11	92D4  CF      					RST     08H
 504: 3561+7	92D5  3E5B    					LD		A,'['
 505: 3568+11	92D7  CF      					RST     08H
 506: 3579+10	92D8  E1      					POP		HL
 507: 3589+17	92D9  CDE892  					CALL	HLToDec
 508: 3606+7	92DC  3E3B    					LD		A,$3B
 509: 3613+11	92DE  CF      					RST     08H
 510: 3624+10	92DF  E1      					POP		HL
 511: 3634+17	92E0  CDE892  					CALL	HLToDec
 512: 3651+7	92E3  3E66    					LD		A,'f'
 513: 3658+11	92E5  CF      					RST     08H
 514: 3669+11	92E6  D5      					PUSH	DE
 515: 3680+10	92E7  C9      					RET
 516:				
 517:				;Prints	hl as decimal			
 518:     -	92E8          	HLToDec:
 519: 3690+11	92E8  F5      					PUSH	AF
 520: 3701+11	92E9  C5      					PUSH	BC
 521: 3712+17	92EA  CDF092  					CALL	DispHL
 522: 3729+10	92ED  C1      					POP		BC
 523: 3739+10	92EE  F1      					POP		AF
 524: 3749+10	92EF  C9      					RET
 525:     -	92F0          	DispHL:
 526: 3759+10	92F0  01F0D8  					ld		bc,-10000
 527: 3769+17	92F3  CD0993  					call	Num1
 528: 3786+10	92F6  0118FC  					ld		bc,-1000
 529: 3796+17	92F9  CD0993  					call	Num1
 530: 3813+10	92FC  019CFF  					ld		bc,-100
 531: 3823+17	92FF  CD0993  					call	Num1
 532: 3840+7	9302  0EF6    					ld		c,-10
 533: 3847+17	9304  CD0993  					call	Num1
 534: 3864+7	9307  0EFF    					ld		c,-1
 535: 3871+7	9309  3E2F    	Num1:			ld		a,'0'-1
 536: 3878+4	930B  3C      	Num2:			inc		a
 537: 3882+11	930C  09      					add		hl,bc
 538: 3893+7+5	930D  38FC    					jr		c,Num2
 539: 3900+15	930F  ED42    					sbc		hl,bc
 540: 3915+11	9311  CF      					RST     08H
 541: 3926+10	9312  C9      					ret
 542:				;Print A as HEX				
 543: 3936+4	9313  4F      	NumToHex:    	ld 		c, a   		; a = number to convert
 544: 3940+17	9314  CD1E93  	            	call 	Num1H
 545: 3957+11	9317  CF      	            	RST     08H
 546: 3968+4	9318  79      	            	ld 		a, c
 547: 3972+17	9319  CD2293  	            	call 	Num2H
 548: 3989+11	931C  CF      	            	RST     08H
 549: 4000+10	931D  C9      	            	ret
 550:				
 551: 4010+4	931E  1F      	Num1H:        	rra
 552: 4014+4	931F  1F      	            	rra
 553: 4018+4	9320  1F      	            	rra
 554: 4022+4	9321  1F      	           		rra
 555: 4026+7	9322  F6F0    	Num2H:        	or 		$F0
 556: 4033+4	9324  27      	            	daa
 557: 4037+7	9325  C6A0    	            	add 	a, $A0
 558: 4044+7	9327  CE40    	            	adc 	a, $40 		; Ascii hex at this point (0 to F)   
 559: 4051+10	9329  C9      	            	ret
 560:				
 561:				;Get ABS of A
 562:     -	932A          	absA:
 563: 4061+4	932A  B7      	     or a
 564: 4065+5+6	932B  F0      	     ret p
 565: 4070+8	932C  ED44    	     neg
 566: 4078+10	932E  C9      	     ret
 567:				
 568:				;getArAndomA	 
 569:     -	932F          	randomA:				
 570: 4088+13	932F  3A8888  					ld a, 	(seed)
 571: 4101+4	9332  47      					ld b, 	a 
 572:				
 573: 4105+4	9333  0F      					rrca ; multiply by 32
 574: 4109+4	9334  0F      					rrca
 575: 4113+4	9335  0F      					rrca
 576: 4117+7	9336  EE1F    					xor $1f
 577:				
 578: 4124+4	9338  80      					add 	a, b
 579: 4128+7	9339  DEFF    					sbc a, 255 ; carry
 580:				
 581: 4135+13	933B  328888  					ld (seed), a
 582: 4148+10	933E  C9      					ret
 583:				
 584:				;------- Print string
 585: 4158+11	933F  F5      	print:			PUSH 	AF				; Preserve AF				
 586: 4169+7	9340  7E      	printLoop:      LD      A,(HL)          ; Get character
 587: 4176+4	9341  B7      	                OR      A               ; Is it $00 ?
 588: 4180+7+5	9342  2804    	                JR     	Z,printRet      ; Then RETurn on terminator
 589: 4187+11	9344  CF      	                RST     08H             ; Print it
 590: 4198+6	9345  23      	                INC     HL              ; Next Character
 591: 4204+12	9346  18F8    	                JR      printLoop       ; Continue until $00
 592:								
 593:				;delay loop
 594:     -	9348          	printRet:		
 595: 4216+10	9348  F1      					POP		AF
 596: 4226+10	9349  C9      					RET
 597:     -	934A          	delay:
 598: 4236+4	934A  00      					NOP
 599: 4240+6	934B  0B      					DEC 	BC
 600: 4246+4	934C  78      					LD 		A,B
 601: 4250+4	934D  B1      					OR 		C
 602: 4254+5+6	934E  C8      					RET 	Z
 603: 4259+12	934F  18F9    					JR 		delay
 604:				
 605:				;Strings
 606:     -	9351  1B5B3334	wall:			.BYTE	1BH,"[34m#",1BH,"[0m",0
	              6D231B5B
	              306D00
 607:     -	935C  1B5B3937	powerPellet:	.BYTE	1BH,"[97mo",1BH,"[0m",0
	              6D6F1B5B
	              306D00
 608:     -	9367  1B5B3337	pellet:			.BYTE	1BH,"[37m*",1BH,"[0m",0
	              6D2A1B5B
	              306D00
 609:     -	9372  1B5B3331	superFruit:		.BYTE	1BH,"[31m@",1BH,"[0m",0
	              6D401B5B
	              306D00
 610:				
 611:     -	937D  53636F72	scoreHUD:     	.BYTE "Score: ",0
	              653A2000
 612:				
 613:     -	9385  1B5B3933	pacman:			.BYTE	1BH,"[93mC",1BH,"[0m",0
	              6D431B5B
	              306D00
 614:				
 615:     -	9390  1B5B3931	redGhost:		.BYTE	1BH,"[91mM",1BH,"[0m",0
	              6D4D1B5B
	              306D00
 616:     -	939B  1B5B3932	greenGhost:		.BYTE	1BH,"[92mM",1BH,"[0m",0
	              6D4D1B5B
	              306D00
 617:     -	93A6  1B5B3336	blueGhost:		.BYTE	1BH,"[36mM",1BH,"[0m",0
	              6D4D1B5B
	              306D00
 618:     -	93B1  1B5B3935	pinkGhost:		.BYTE	1BH,"[95mM",1BH,"[0m",0
	              6D4D1B5B
	              306D00
 619:				
 620:				
 621:     -	93BC  2000    	void:			.BYTE	" ",0
 622:				
 623:     -	93BE  1B5B481B	cls:      	  	.BYTE 1BH,"[H",1BH,"[2J",0
	              5B324A00
 624:				;----- Map ------		
 625:     -	E000          		.ORG 0E000H
 626:				;----Pellet
 627:     -	0040          	ww 		.EQU	40H
 628:				
 629:     -	002C          	hp 		.EQU	2CH		;left 	right	pellet
 630:     -	0023          	gp		.EQU	23H		;up		down	pellet
 631:				
 632:     -	0026          	lp		.EQU	26H		;down 	left 	pellet
 633:     -	002A          	rp		.EQU	2AH		;down 	right	pellet
 634:     -	0025          	up		.EQU	25H		;up 	left	pellet
 635:     -	0029          	dp		.EQU	29H		;up 	right	pellet
 636:				
 637:     -	002B          	bp		.EQU	2BH		;up		down	right	pellet
 638:     -	0027          	cp		.EQU	27H		;up		down	left	pellet
 639:     -	002E          	vp		.EQU	2EH		;down	left	right	pellet
 640:     -	002D          	kp		.EQU	2DH		;up		left	right	pellet
 641:				
 642:     -	002F          	xp		.EQU	2FH		;all	pellet
 643:				;------- No pellet
 644:     -	000C          	hn 		.EQU	0CH		;left 	right	pellet
 645:     -	0003          	gn		.EQU	03H		;up		down	pellet
 646:				
 647:     -	0006          	ln		.EQU	06H		;down 	left 	pellet
 648:     -	000A          	rn		.EQU	0AH		;down 	right	pellet
 649:     -	0005          	un		.EQU	05H		;up 	left	pellet
 650:     -	0009          	dn		.EQU	09H		;up 	right	pellet
 651:				
 652:     -	000B          	bn		.EQU	0BH		;up		down	right	pellet
 653:     -	0007          	cn		.EQU	07H		;up		down	left	pellet
 654:     -	000E          	vn		.EQU	0EH		;down	left	right	pellet
 655:     -	000D          	kn		.EQU	0DH		;up		left	right	pellet
 656:				
 657:     -	000F          	xn		.EQU	0FH		;all	pellet
 658:				;--------Power Pellet
 659:     -	001C          	hs 		.EQU	1CH		;left 	right	pellet
 660:     -	0013          	gs		.EQU	13H		;up		down	pellet
 661:				
 662:     -	0016          	ls		.EQU	16H		;down 	left 	pellet
 663:     -	001A          	rs		.EQU	1AH		;down 	right	pellet
 664:     -	0015          	us		.EQU	15H		;up 	left	pellet
 665:     -	0019          	ds		.EQU	19H		;up 	right	pellet
 666:				
 667:     -	001B          	bs		.EQU	1BH		;up		down	right	pellet
 668:     -	0017          	cs		.EQU	17H		;up		down	left	pellet
 669:     -	001E          	vs		.EQU	1EH		;down	left	right	pellet
 670:     -	001D          	ks		.EQU	1DH		;up		left	right	pellet
 671:				
 672:     -	001F          	xs		.EQU	1FH		;all	pellet
 673:				
 674:				
 675:     -	E000  00004040	map:	.BYTE	00,00,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,00,00
	              40404040
	              40404040
	              40404040
	              40404040
	              40404040
	              40404040
	              40400000
 676:     -	E020  0000402A			.BYTE	00,00,ww,rp,hp,hp,hp,hp,vp,hp,hp,hp,hp,hp,lp,ww,ww,rp,hp,hp,hp,hp,hp,vp,hp,hp,hp,hp,lp,ww,00,00
	              2C2C2C2C
	              2E2C2C2C
	              2C2C2640
	              402A2C2C
	              2C2C2C2E
	              2C2C2C2C
	              26400000
 677:     -	E040  00004013			.BYTE	00,00,ww,gs,ww,ww,ww,ww,gp,ww,ww,ww,ww,ww,gp,ww,ww,gp,ww,ww,ww,ww,ww,gp,ww,ww,ww,ww,gs,ww,00,00
	              40404040
	              23404040
	              40402340
	              40234040
	              40404023
	              40404040
	              13400000
 678:     -	E060  00004023			.BYTE	00,00,ww,gp,ww,ww,ww,ww,gp,ww,ww,ww,ww,ww,gp,ww,ww,gp,ww,ww,ww,ww,ww,gp,ww,ww,ww,ww,gp,ww,00,00
	              40404040
	              23404040
	              40402340
	              40234040
	              40404023
	              40404040
	              23400000
 679:     -	E080  0000402B			.BYTE	00,00,ww,bp,hp,hp,hp,hp,xp,hp,hp,vp,hp,hp,kp,hp,hp,kp,hp,hp,vp,hp,hp,xp,hp,hp,hp,hp,cp,ww,00,00
	              2C2C2C2C
	              2F2C2C2E
	              2C2C2D2C
	              2C2D2C2C
	              2E2C2C2F
	              2C2C2C2C
	              27400000
 680:     -	E0A0  00004023			.BYTE	00,00,ww,gp,ww,ww,ww,ww,gp,ww,ww,gp,ww,ww,ww,ww,ww,ww,ww,ww,gp,ww,ww,gp,ww,ww,ww,ww,gp,ww,00,00
	              40404040
	              23404023
	              40404040
	              40404040
	              23404023
	              40404040
	              23400000
 681:     -	E0C0  00004029			.BYTE	00,00,ww,dp,hp,hp,hp,hp,cp,ww,ww,dp,hp,hp,lp,ww,ww,rp,hp,hp,up,ww,ww,bp,hp,hp,hp,hp,up,ww,00,00
	              2C2C2C2C
	              27404029
	              2C2C2640
	              402A2C2C
	              2540402B
	              2C2C2C2C
	              25400000
 682:     -	E0E0  00004040			.BYTE	00,00,ww,ww,ww,ww,ww,ww,gp,ww,ww,ww,ww,ww,gn,ww,ww,gn,ww,ww,ww,ww,ww,gp,ww,ww,ww,ww,ww,ww,00,00
	              40404040
	              23404040
	              40400340
	              40034040
	              40404023
	              40404040
	              40400000
 683:     -	E100  00000000			.BYTE	00,00,00,00,00,00,00,ww,gp,ww,ww,rn,hn,hn,kn,hn,hn,kn,hn,hn,ln,ww,ww,gp,ww,00,00,00,00,00,00,00
	              00000040
	              2340400A
	              0C0C0D0C
	              0C0D0C0C
	              06404023
	              40000000
	              00000000
 684:     -	E120  00000000			.BYTE	00,00,00,00,00,00,00,ww,gp,ww,ww,gn,ww,ww,ww,00,00,ww,ww,ww,gn,ww,ww,gp,ww,00,00,00,00,00,00,00
	              00000040
	              23404003
	              40404000
	              00404040
	              03404023
	              40000000
	              00000000
 685:     -	E140  40404040			.BYTE	ww,ww,ww,ww,ww,ww,ww,ww,gp,ww,ww,gn,ww,00,00,00,00,00,00,ww,gn,ww,ww,gp,ww,ww,ww,ww,ww,ww,ww,ww
	              40404040
	              23404003
	              40000000
	              00000040
	              03404023
	              40404040
	              40404040
 686:     -	E160  0C0C0C0C			.BYTE	hn,hn,hn,hn,hn,hn,hn,hn,xp,hn,hn,cn,ww,00,00,00,00,00,00,ww,bn,hn,hn,xp,hn,hn,hn,hn,hn,hn,hn,hn
	              0C0C0C0C
	              2F0C0C07
	              40000000
	              00000040
	              0B0C0C2F
	              0C0C0C0C
	              0C0C0C0C
 687:     -	E180  40404040			.BYTE	ww,ww,ww,ww,ww,ww,ww,ww,gp,ww,ww,gn,ww,00,00,00,00,00,00,ww,gn,ww,ww,gp,ww,ww,ww,ww,ww,ww,ww,ww
	              40404040
	              23404003
	              40000000
	              00000040
	              03404023
	              40404040
	              40404040
 688:     -	E1A0  00000000			.BYTE	00,00,00,00,00,00,00,ww,gp,ww,ww,gn,ww,ww,ww,ww,ww,ww,ww,ww,gn,ww,ww,gp,ww,00,00,00,00,00,00,00
	              00000040
	              23404003
	              40404040
	              40404040
	              03404023
	              40000000
	              00000000
 689:     -	E1C0  00000000			.BYTE	00,00,00,00,00,00,00,ww,gp,ww,ww,bn,hn,hn,hn,hn,hn,hn,hn,hn,cn,ww,ww,gp,ww,00,00,00,00,00,00,00
	              00000040
	              2340400B
	              0C0C0C0C
	              0C0C0C0C
	              07404023
	              40000000
	              00000000
 690:     -	E1E0  00004040			.BYTE	00,00,ww,ww,ww,ww,ww,ww,gp,ww,ww,gn,ww,ww,ww,ww,ww,ww,ww,ww,gn,ww,ww,gp,ww,ww,ww,ww,ww,ww,00,00
	              40404040
	              23404003
	              40404040
	              40404040
	              03404023
	              40404040
	              40400000
 691:     -	E200  0000402A			.BYTE	00,00,ww,rp,hp,hp,hp,hp,xp,hp,hp,kp,hp,hp,lp,ww,ww,rp,hp,hp,kp,hp,hp,xp,hp,hp,hp,hp,lp,ww,00,00
	              2C2C2C2C
	              2F2C2C2D
	              2C2C2640
	              402A2C2C
	              2D2C2C2F
	              2C2C2C2C
	              26400000
 692:     -	E220  00004023			.BYTE	00,00,ww,gp,ww,ww,ww,ww,gp,ww,ww,ww,ww,ww,gp,ww,ww,gp,ww,ww,ww,ww,ww,gp,ww,ww,ww,ww,gp,ww,00,00
	              40404040
	              23404040
	              40402340
	              40234040
	              40404023
	              40404040
	              23400000
 693:     -	E240  00004019			.BYTE	00,00,ww,ds,hp,lp,ww,ww,bp,hp,hp,vp,hp,hp,kp,hp,hp,kp,hp,hp,vp,hp,hp,cp,ww,ww,rp,hp,us,ww,00,00
	              2C264040
	              2B2C2C2E
	              2C2C2D2C
	              2C2D2C2C
	              2E2C2C27
	              40402A2C
	              15400000
 694:     -	E260  00004040			.BYTE	00,00,ww,ww,ww,gp,ww,ww,gp,ww,ww,gp,ww,ww,ww,ww,ww,ww,ww,ww,gp,ww,ww,gp,ww,ww,gp,ww,ww,ww,00,00
	              40234040
	              23404023
	              40404040
	              40404040
	              23404023
	              40402340
	              40400000
 695:     -	E280  0000402A			.BYTE	00,00,ww,rp,hp,kp,hp,hp,up,ww,ww,dp,hp,hp,lp,ww,ww,rp,hp,hp,up,ww,ww,dp,hp,hp,kp,hp,lp,ww,00,00
	              2C2D2C2C
	              25404029
	              2C2C2640
	              402A2C2C
	              25404029
	              2C2C2D2C
	              26400000
 696:     -	E2A0  00004023			.BYTE	00,00,ww,gp,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,gp,ww,ww,gp,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,gp,ww,00,00
	              40404040
	              40404040
	              40402340
	              40234040
	              40404040
	              40404040
	              23400000
 697:     -	E2C0  00004029			.BYTE	00,00,ww,dp,hp,hp,hp,hp,hp,hp,hp,hp,hp,hp,kp,hp,hp,kp,hp,hp,hp,hp,hp,hp,hp,hp,hp,hp,up,ww,00,00
	              2C2C2C2C
	              2C2C2C2C
	              2C2C2D2C
	              2C2D2C2C
	              2C2C2C2C
	              2C2C2C2C
	              25400000
 698:     -	E2E0  00004040			.BYTE	00,00,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,00,00
	              40404040
	              40404040
	              40404040
	              40404040
	              40404040
	              40404040
	              40400000
 699:     -	E300  00000000			.BYTE	00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
	              00000000
	              00000000
	              00000000
	              00000000
	              00000000
	              00000000
	              00000000
 700:     -	E320  00000000			.BYTE	00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
	              00000000
	              00000000
	              00000000
	              00000000
	              00000000
	              00000000
	              00000000
 701:     -	E340  00000000			.BYTE	00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
	              00000000
	              00000000
	              00000000
	              00000000
	              00000000
	              00000000
	              00000000
 702:     -	E360  00000000			.BYTE	00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
	              00000000
	              00000000
	              00000000
	              00000000
	              00000000
	              00000000
	              00000000
 703:     -	E380  00000000			.BYTE	00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
	              00000000
	              00000000
	              00000000
	              00000000
	              00000000
	              00000000
	              00000000
 704:     -	E3A0  00000000			.BYTE	00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
	              00000000
	              00000000
	              00000000
	              00000000
	              00000000
	              00000000
	              00000000
 705:     -	E3C0  00000000			.BYTE	00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
	              00000000
	              00000000
	              00000000
	              00000000
	              00000000
	              00000000
	              00000000
**** main.asm ****
 706:     -	E3E0  00000000			.BYTE	00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
	              00000000
	              00000000
	              00000000
	              00000000
	              00000000
	              00000000
	              00000000



Statistics:

     4	passes
     0	jr promotions
   137	symbols
  1990	bytes



Symbol Table:

absa            932a     
blueghost       93a6     
bn             =   b     
bp             =  2b     
bs             =  1b     
calcnextmove    90d4     
checkh          90de     
checkv          90ec     
clearpm         9071     
clearredghost   9108     
cls             93be     
cn             =   7     
cp             =  27     
cr             =   d     
cs             =  17     
delay           934a     
disphl          92f0     
dn             =   9     
downbit        =   1     
dp             =  29     
ds             =  19     
eatpellet       90a3     
eatspellet      90ab     
gameloop        902b     
getdataatpos    9225     
getmove         90b8     
getpmmapdata    9097     
getredghostmapdata 912e     
getredghostnextmove 9146     
gn             =   3     
gp             =  23     
greenghost      939b     
gs             =  13     
hltodec         92e8     
hn             =   c     
hp             =  2c     
hs             =  1c     
initpacx       =   e     
initpacy       =   e     
initredghostx  =  14     
initredghosty  =   1     
input           9057     
ismovevalid     920b     
kn             =   d     
kp             =  2d     
ks             =  1d     
leftbit        =   2     
lf             =   a     
ln             =   6     
lp             =  26     
ls             =  16     
map             e000     
move            91e5     
movecursor      92d1     
moved           91f9     
movedvalid      921c     
movel           91ff     
movelvalid      921f     
movepm          90fc     
mover           9205     
moveredghost    913a     
movervalid      9222     
moveu           91f3     
moveuvalid      9219     
newline         92c8     
nextmovevalid   90cd     
num1            9309     
num1h           931e     
num2            930b     
num2h           9322     
numtohex        9313     
paccdir        =8102     
pacman          9385     
pacndir        =8103     
pacx           =8100     
pacy           =8101     
pellet          9367     
pelletbit      =   5     
pinkghost       93b1     
pmchar          926d     
pmcharret       92a8     
pmloop          9259     
pmnextline      9267     
powerpbit      =   4     
powerpellet     935c     
print           933f     
printloop       9340     
printmap        9252     
printmapat      923c     
printp          9288     
printpm         907d     
printpp         9280     
printredghost   9114     
printret        9348     
printscore      92aa     
printsf         9298     
printvoid       92a0     
printwall       9290     
randoma         932f     
redghost        9390     
redghostcheckd  918c     
redghostcheckl  9199     
redghostcheckr  91a6     
redghostchecku  917f     
redghostdir    =8112     
redghostdis    =8113     
redghostpathfind 91b3     
redghostrandomset 91e2     
redghostsetequal 91d8     
redghostsetmove 9170     
redghostsetnewdir 91d0     
redghostx      =8110     
redghosty      =8111     
rightbit       =   3     
rn             =   a     
rp             =  2a     
rs             =  1a     
score          =8900     
scorehud        937d     
seed           =8888     
sfbit          =   7     
superfruit      9372     
un             =   5     
up             =  25     
upbit          =   0     
us             =  15     
validinput      906d     
vn             =   e     
void            93bc     
vp             =  2e     
vs             =  1e     
wall            9351     
wallbit        =   6     
ww             =  40     
xn             =   f     
xp             =  2f     
xs             =  1f     
