   1:     -	000D          	CR              .EQU     0DH
   2:     -	000A          	LF              .EQU     0AH
   3:				
   4:     -	89F0          	oldStackPointer	.EQU	89F0H		;Old Stack Location 	
   5:     -	89F2          	originalBC		.EQU	89F2H		;BC before manipulation, used for calculating board position
   6:				
   7:     -	9000          		.ORG 9000H
   8:    0+20	9000  ED73F089				ld		(oldStackPointer), SP
   9:   20+10	9004  31FFFF  				ld		sp,0FFFFH
  10:     -	9007          	gameTop:
  11:   30+17	9007  CDC197  				CALL	initMap
  12:   47+10	900A  21FDA0  				LD		HL, cls			;Clear screen
  13:   57+17	900D  CD74A0  				CALL	print
  14:   74+10	9010  2105A1  				LD		HL, hideCursor	;Hide Cursor
  15:   84+17	9013  CD74A0  				CALL	print
  16:  101+17	9016  CD5398  				CALL 	printMap
  17:  118+10	9019  C3409E  				JP		displayTitleScreen
  18:     -	901C          	startGame:
  19:  128+17	901C  CDA190  				CALL	initPacman
  20:  145+17	901F  CDCD91  				CALL	initGhost
  21:  162+17	9022  CDC197  				CALL	initMap
  22:  179+10	9025  21FDA0  				LD		HL, cls			;Clear screen
  23:  189+17	9028  CD74A0  				CALL	print
  24:  206+17	902B  CD5398  				CALL 	printMap
  25:  223+17	902E  CDCE99  				CALL	countdown
  26:  240+10	9031  21F9A0  				LD		HL, home		;Go home
  27:  250+17	9034  CD74A0  				CALL	print
  28:  267+17	9037  CD5398  				CALL 	printMap
  29:     -	903A          	gameLoop:		
  30:  284+17	903A  CD8790  				call	input
  31:  301+17	903D  CD1191  				call 	getMove
  32:  318+17	9040  CDC490  				call 	clearPM
  33:  335+17	9043  CD5591  				call	movePM
  34:  352+17	9046  CDD090  				call 	printPM
  35:  369+17	9049  CDF190  				call	eatPellet
  36:							
  37:  386+17	904C  CDAB98  				call	initPathFind
  38:  403+17	904F  CDC398  				call	calculatePathMap
  39:				
  40:  420+17	9052  CD9991  				call	ghostNextMove
  41:  437+17	9055  CDA691  				call	clearGhost
  42:  454+17	9058  CDC091  				call	colideGhost
  43:  471+17	905B  CDDA91  				call	moveGhost
  44:  488+17	905E  CDB391  				call	printGhost
  45:				
  46:  505+17	9061  CDC091  				call	colideGhost
  47:				
  48:				
  49:							;call 	printPFMap
  50:							
  51:  522+17	9064  CD8299  				call 	printHUD
  52:  539+17	9067  CDF59F  				call	newline
  53:  556+17	906A  CDE597  				call	checkNextLevel
  54:  573+7	906D  060F    				LD 		B,0FH   ;delay
  55:  580+7	906F  0EFF    				LD		C,0FFH
  56:  587+17	9071  CDC2A0  				CALL 	DELAY
  57:  604+10	9074  C33A90  				JP		gameLoop
  58:  614+20	9077  ED7BF089				LD		SP,(oldStackPointer)
  59:  634+10	907B  C9      				ret
  60:				
  61:  644+10	907C  210CA1  	quit:       LD		HL, showCursor	;Hide Cursor
  62:  654+17	907F  CD74A0  				CALL	print
  63:  671+20	9082  ED7BF089	            LD		SP,(oldStackPointer)
  64:  691+10	9086  C9      				RET	
  65:						
  66:				;-------------- Input --------------------------					
  67:				include input.asm	
**** input.asm ****
   1:     -	9087          	input:
   2:  701+11	9087  DF      					RST		18H
   3:  712+5+6	9088  C8      					RET		Z
   4:  717+11	9089  D7      					RST		10H
   5:  728+7	908A  E6DF    					AND     11011111b       ; lower to uppercase
   6:  735+7	908C  FE57    					CP		'W'
   7:  742+7+5	908E  280D    					JR		Z,validInput
   8:  749+7	9090  FE41    					CP		'A'
   9:  756+7+5	9092  2809    					JR		Z,validInput
  10:  763+7	9094  FE53    					CP		'S'
  11:  770+7+5	9096  2805    					JR		Z,validInput
  12:  777+7	9098  FE44    					CP		'D'
  13:  784+7+5	909A  2801    					JR		Z,validInput
  14:  791+10	909C  C9      					RET
  15:     -	909D          	validInput:		
  16:  801+13	909D  320381  					LD		(pacNDir), A
**** main.asm ****
  68:  814+10	90A0  C9      					RET
  69:				;----------Pacman------;
  70:				include	pacman.asm
**** pacman.asm ****
   1:				;Packman
   2:     -	8100          	pacx			.EQU	8100H
   3:     -	8101          	pacy			.EQU	8101H
   4:     -	8102          	pacCDir			.EQU	8102H		;Pacmans current direction
   5:     -	8103          	pacNDir			.EQU	8103H		;Pacman next direction (from key press)
   6:     -	8105          	pacLives		.EQU	8105H		;Pacman next direction (from key press)
   7:				
   8:     -	000E          	initPacx		.EQU	14
   9:     -	000E          	initPacy		.EQU	14
  10:     -	0004          	initLives		.EQU	4
  11:				
  12:     -	0020          	pPelletTics     .EQU    20H         ;Power Pellet last time
  13:				
  14:     -	8104          	pPActive        .EQU    8104H       ;Power Pellet Timer
  15:				
  16:     -	90A1          	initPacman:
  17:  824+10	90A1  210000  					LD		HL, 0H
  18:  834+16	90A4  220089  					LD		(score), HL
  19:  850+7	90A7  3E04    					LD		a,initLives
  20:  857+13	90A9  320581  					LD		(pacLives),a
  21:  870+7	90AC  3E0E    	resetPacMan:	LD		a, initPacx		;set Pacman Pos
  22:  877+13	90AE  320081  					LD		(pacx),a
  23:  890+7	90B1  3E0E    					LD		a, initPacy
  24:  897+13	90B3  320181  					LD		(pacy),a
  25:  910+7	90B6  3E44    					LD		a, 'D'			;Set start direction
  26:  917+13	90B8  320281  					LD		(pacCDir),A
  27:  930+13	90BB  320381  					LD		(pacNDir),A
  28:  943+7	90BE  3E00    					LD		a,0
  29:  950+13	90C0  320481  					LD		(pPActive),A
  30:  963+10	90C3  C9      					RET
  31:				
  32:     -	90C4          	clearPM:
  33:  973+13	90C4  3A0081  					LD		A, (pacx)		;Push X to stack
  34:  986+4	90C7  4F      					LD		C,A
  35:  990+13	90C8  3A0181  					LD		A, (pacy)		;Push Y to stack
  36: 1003+4	90CB  47      					LD		B,A
  37: 1007+17	90CC  CD4498  					CALL 	printMapAt
  38: 1024+10	90CF  C9      					RET
  39:								
  40:     -	90D0          	printPM:
  41: 1034+13	90D0  3A0081  					LD		A, (pacx)		;Push X to stack
  42: 1047+4	90D3  3C      					INC		A
  43: 1051+4	90D4  4F      					LD		C,A
  44: 1055+13	90D5  3A0181  					LD		A, (pacy)		;Push Y to stack
  45: 1068+4	90D8  3C      					INC		A
  46: 1072+4	90D9  47      					LD		B,A
  47: 1076+17	90DA  CDFE9F  					CALL	moveCursor
  48: 1093+10	90DD  218E91  					LD		HL, pacman
  49: 1103+17	90E0  CD74A0  					CALL 	print
  50: 1120+10	90E3  C9      					RET
  51:     -	90E4          	getPMMapData:	
  52: 1130+13	90E4  3A0081  					LD		A, (pacx)
  53: 1143+4	90E7  4F      					LD		C,A
  54: 1147+13	90E8  3A0181  					LD		A, (pacy)
  55: 1160+4	90EB  47      					LD		B,A
  56: 1164+17	90EC  CDCD97  					CALL	getMapAddress
  57: 1181+7	90EF  7E      	                LD      A,(HL)
  58: 1188+10	90F0  C9      					ret
  59:     -	90F1          	eatPellet:		;Eat pellet at packman location
  60: 1198+17	90F1  CDE490  					CALL 	getPMMapData
  61: 1215+8	90F4  CB6F    					BIT		pelletBit,A
  62: 1223+7+5	90F6  2005    					JR		NZ,eatSPellet
  63: 1230+8	90F8  CB67    	                BIT		powerPBit,A
  64: 1238+7+5	90FA  200D    					JR		NZ,eatPPellet
  65: 1245+10	90FC  C9      					RET
  66:								
  67:     -	90FD          	eatSPellet:		
  68: 1255+11	90FD  E5      					PUSH	HL		
  69: 1266+16	90FE  2A0089  					LD		HL,(score)
  70: 1282+6	9101  23      					INC		HL
  71: 1288+16	9102  220089  					LD		(score),HL
  72: 1304+10	9105  E1      					POP		HL
  73: 1314+15	9106  CBAE    					RES		pelletBit,(HL)
  74: 1329+10	9108  C9      					RET
  75:				
  76:     -	9109          	eatPPellet:		
  77: 1339+7	9109  3E20    					LD      A,pPelletTics
  78: 1346+13	910B  320481  	                LD      (pPActive),A
  79: 1359+15	910E  CBA6    	                RES		powerPBit,(HL)
  80: 1374+10	9110  C9      					RET
  81:								
  82:     -	9111          	getMove:		;Sets the current move var
  83: 1384+17	9111  CDE490  					CALL	getPMMapData
  84: 1401+4	9114  57      					LD		D,A
  85: 1405+13	9115  3A0381  					LD		A,(pacNDir)			;Is the next move valid
  86: 1418+17	9118  CDA797  					CALL	isMoveValid
  87: 1435+7+5	911B  2009    					JR		NZ,nextMoveValid
  88: 1442+13	911D  3A0281  					LD		A,(pacCDir)			;Is the current move valid
  89: 1455+17	9120  CDA797  					CALL	isMoveValid
  90: 1472+5+6	9123  C0      					RET		NZ
  91: 1477+12	9124  1807    					JR		calcNextMove
  92:								
  93:     -	9126          	nextMoveValid:
  94: 1489+13	9126  320281  					LD		(pacCDir),A
  95: 1502+13	9129  320381  					LD		(pacNDir),A
  96: 1515+10	912C  C9      					RET
  97:								
  98:     -	912D          	calcNextMove:	
  99: 1525+7	912D  FE41    					CP		'A'
 100: 1532+7+5	912F  2814    					JR		Z,checkV
 101: 1539+7	9131  FE44    					CP		'D'
 102: 1546+7+5	9133  2810    					JR		Z,checkV
 103: 1553+12	9135  1800    					JR		checkH
 104:     -	9137          	checkH:
 105: 1565+7	9137  3E41    					LD		A,'A'
 106: 1572+17	9139  CDA797  					CALL	isMoveValid
 107: 1589+7+5	913C  20E8    					JR		NZ,nextMoveValid
 108: 1596+7	913E  3E44    					LD		A,'D'
 109: 1603+17	9140  CDA797  					CALL	isMoveValid
 110: 1620+7+5	9143  20E1    					JR		NZ,nextMoveValid
 111:     -	9145          	checkV:
 112: 1627+7	9145  3E57    					LD		A,'W'
 113: 1634+17	9147  CDA797  					CALL	isMoveValid
 114: 1651+7+5	914A  20DA    					JR		NZ,nextMoveValid
 115: 1658+7	914C  3E53    					LD		A,'S'
 116: 1665+17	914E  CDA797  					CALL	isMoveValid
 117: 1682+7+5	9151  20D3    					JR		NZ,nextMoveValid
 118: 1689+12	9153  18E2    					JR		checkH
 119:				;Move
 120:     -	9155          	movePM:
 121: 1701+13	9155  3A0481  					LD      A,(pPActive)
 122: 1714+4	9158  B7      	                OR      A
 123: 1718+10	9159  CA6091  	                JP      Z,movePMA
 124: 1728+4	915C  3D      	                DEC     A
 125: 1732+13	915D  320481  	                LD      (pPActive),A
 126: 1745+13	9160  3A0281  	movePMA:        LD		A,(pacCDir)
 127: 1758+10	9163  110081  					LD		DE,pacx
 128: 1768+10	9166  010181  					LD		BC,pacy
 129: 1778+10	9169  C38197  					JP		move
 130:				
 131:     -	916C          	killPacman:
 132: 1788+10	916C  E1      					POP		HL
 133: 1798+10	916D  E1      					POP		HL
 134: 1808+13	916E  3A0581  					LD		A,(pacLives)
 135: 1821+4	9171  3D      					DEC		A
 136: 1825+4	9172  B7      					OR		A
 137: 1829+10	9173  CA609F  					JP		Z,displayGameOver
 138: 1839+13	9176  320581  					LD		(pacLives),A
 139: 1852+17	9179  CDAC90  					CALL	resetPacMan
 140: 1869+17	917C  CDCD91  					CALL	initGhost
 141: 1886+17	917F  CDCE99  					CALL	countdown
 142: 1903+10	9182  21F9A0  					LD		HL, home		;Go home
 143: 1913+17	9185  CD74A0  					CALL	print
 144: 1930+17	9188  CD5398  					CALL 	printMap
 145: 1947+10	918B  C33A90  					JP		gameLoop
 146:				
**** main.asm ****
  71:     -	918E  1B5B3933	pacman:			.BYTE	1BH,"[93mC",1BH,"[0m",0
	              6D431B5B
	              306D00
  72:				;------------Ghost
  73:				include ghosts.asm
**** ghosts.asm ****
   1:     -	8113          	ghostDis		.EQU	8113H		;ghost move distance from pacman
   2:     -	0020          	caughtJaleTime  .EQU    20H
   3:				
   4:     -	9199          	ghostNextMove:
   5: 1957+17	9199  CDD592  	                CALL    rGhostNextMove
   6: 1974+17	919C  CD1694  	                CALL    oGhostNextMove
   7: 1991+17	919F  CD5795  	                CALL    pGhostNextMove
   8: 2008+17	91A2  CD9896  	                CALL    tGhostNextMove
   9: 2025+10	91A5  C9      	                RET
  10:     -	91A6          	clearGhost:
  11: 2035+17	91A6  CD6792  	                CALL    rGhostClear
  12: 2052+17	91A9  CDA893  	                CALL    oGhostClear
  13: 2069+17	91AC  CDE994  	                CALL    pGhostClear
  14: 2086+17	91AF  CD2A96  	                CALL    tGhostClear
  15: 2103+10	91B2  C9      	                RET
  16:     -	91B3          	printGhost:
  17: 2113+17	91B3  CD7392  	                CALL    rGhostPrint
  18: 2130+17	91B6  CDB493  	                CALL    oGhostPrint
  19: 2147+17	91B9  CDF594  	                CALL    pGhostPrint
  20: 2164+17	91BC  CD3696  	                CALL    tGhostPrint
  21: 2181+10	91BF  C9      	                RET
  22:     -	91C0          	colideGhost:
  23: 2191+17	91C0  CD6393  	                CALL    rGhostColide
  24: 2208+17	91C3  CDA494  	                CALL    oGhostColide
  25: 2225+17	91C6  CDE595  	                CALL    pGhostColide
  26: 2242+17	91C9  CD2697  	                CALL    tGhostColide
  27: 2259+10	91CC  C9      	                RET
  28:     -	91CD          	initGhost:
  29: 2269+17	91CD  CD9B92  	                CALL    rGhostInit
  30: 2286+17	91D0  CDDC93  	                CALL    oGhostInit
  31: 2303+17	91D3  CD1D95  	                CALL    pGhostInit
  32: 2320+17	91D6  CD5E96  	                CALL    tGhostInit
  33: 2337+10	91D9  C9      	                RET
  34:     -	91DA          	moveGhost:
  35: 2347+17	91DA  CDAB92  	                CALL    rGhostMove
  36: 2364+17	91DD  CDEC93  	                CALL    oGhostMove
  37: 2381+17	91E0  CD2D95  	                CALL    pGhostMove
  38: 2398+17	91E3  CD6E96  	                CALL    tGhostMove
  39: 2415+10	91E6  C9      	                RET
  40:				
  41:     -	91E7          	printSGhost:
  42: 2425+8	91E7  CB47    	                BIT     0,A
  43: 2433+10	91E9  CAF391  	                JP      Z,sGhost1Print
  44: 2443+10	91EC  216B97  	                LD		HL, sGhost0
  45: 2453+17	91EF  CD74A0  					CALL 	print
  46: 2470+10	91F2  C9      					RET
  47:     -	91F3          	sGhost1Print:
  48: 2480+10	91F3  217697  	                LD		HL, sGhost1
  49: 2490+17	91F6  CD74A0  					CALL 	print
  50: 2507+10	91F9  C9      					RET
  51:				
  52:     -	91FA          	ghostMove:
  53: 2517+7	91FA  FE57    					CP		'W'
  54: 2524+7+5	91FC  280A    					JR		Z,ghostMoveU
  55: 2531+7	91FE  FE41    					CP		'A'
  56: 2538+7+5	9200  281E    					JR		Z,ghostMoveL
  57: 2545+7	9202  FE53    					CP		'S'
  58: 2552+7+5	9204  280E    					JR		Z,ghostMoveD
  59: 2559+12	9206  1824    					JR		ghostMoveR
  60:				
  61:     -	9208          	ghostMoveU:			
  62: 2571+7	9208  1A      					LD      A, (DE)
  63: 2578+4	9209  6F      	                LD      L,A         ;ld x
  64: 2582+7	920A  0A      	                LD		A, (BC)
  65: 2589+4	920B  3D      					DEC		A
  66: 2593+7	920C  E61F    					AND		00011111B
  67: 2600+4	920E  67      	                LD      H,A         ;ld y
  68: 2604+17	920F  CD3892  	                CALL    ghostCheckStack
  69: 2621+7	9212  02      					LD		(BC),A
  70: 2628+10	9213  C9      					RET
  71:     -	9214          	ghostMoveD:		
  72: 2638+7	9214  1A      		            LD      A, (DE)
  73: 2645+4	9215  6F      	                LD      L,A         ;ld x
  74: 2649+7	9216  0A      					LD		A, (BC)
  75: 2656+4	9217  3C      					INC		A
  76: 2660+7	9218  E61F    					AND		00011111B
  77: 2667+4	921A  67      	                LD      H,A         ;ld y
  78: 2671+17	921B  CD3892  	                CALL    ghostCheckStack
  79: 2688+7	921E  02      					LD		(BC),A
  80: 2695+10	921F  C9      					RET
  81:     -	9220          	ghostMoveL:		
  82: 2705+7	9220  0A      	                LD      A, (BC)
  83: 2712+4	9221  67      	                LD      H,A         ;ld y
  84: 2716+7	9222  1A      					LD		A, (DE)
  85: 2723+4	9223  3D      					DEC		A
  86: 2727+7	9224  E61F    					AND		00011111B
  87: 2734+4	9226  6F      	                LD      L,A         ;ld x
  88: 2738+17	9227  CD3892  	                CALL    ghostCheckStack
  89: 2755+7	922A  12      					LD		(DE),A
  90: 2762+10	922B  C9      					RET
  91:     -	922C          	ghostMoveR:		
  92: 2772+7	922C  0A      	                LD      A, (BC)
  93: 2779+4	922D  67      	                LD      H,A         ;ld y
  94: 2783+7	922E  1A      					LD		A, (DE)
  95: 2790+4	922F  3C      					INC		A
  96: 2794+7	9230  E61F    					AND		00011111B
  97: 2801+4	9232  6F      	                LD      L,A         ;ld x
  98: 2805+17	9233  CD3892  	                CALL    ghostCheckStack
  99: 2822+7	9236  12      					LD		(DE),A
 100: 2829+10	9237  C9      					RET
 101:     -	9238          	ghostCheckStack:
 102: 2839+11	9238  F5      	                PUSH   AF
 103: 2850+11	9239  C5      	                PUSH   BC
 104: 2861+11	923A  D5      	                PUSH   DE
 105: 2872+17	923B  CD8F93  	                CALL   rGhostStack
 106: 2889+10	923E  CA5792  	                JP     Z,ghostDoStack
 107: 2899+17	9241  CDD094  	                CALL   oGhostStack
 108: 2916+10	9244  CA5792  	                JP     Z,ghostDoStack
 109: 2926+17	9247  CD1196  	                CALL   pGhostStack
 110: 2943+10	924A  CA5792  	                JP     Z,ghostDoStack
 111: 2953+17	924D  CD5297  	                CALL   tGhostStack
 112: 2970+10	9250  CA5792  	                JP     Z,ghostDoStack
 113: 2980+10	9253  D1      	                POP    DE
 114: 2990+10	9254  C1      	                POP    BC
 115: 3000+10	9255  F1      	                POP    AF
 116: 3010+10	9256  C9      	                RET
 117:     -	9257          	ghostDoStack:   
 118: 3020+10	9257  D1      	                POP    DE
 119: 3030+10	9258  C1      	                POP    BC
 120: 3040+10	9259  F1      	                POP    AF
 121: 3050+10	925A  F1      	                POP    AF
 122: 3060+10	925B  C9      	                RET
 123:				
 124:     -	925C          	eatGhost:       
 125: 3070+16	925C  2A0089  	                LD      HL,(score)
 126: 3086+10	925F  010A00  	                LD      BC,10
 127: 3096+11	9262  09      	                ADD     HL,BC
 128: 3107+16	9263  220089  	                LD      (score),HL
 129: 3123+10	9266  C9      	                RET
 130:				                
 131:				include ghosts/red.asm
**** ghosts/red.asm ****
   1:     -	000F          	rGhostInitX	    .EQU	15
   2:     -	0008          	rGhostInitY	    .EQU	8
   3:     -	0010          	rGhostInitTimer .EQU    10H
   4:     -	000E          	rGhostStoreX	.EQU	14
   5:     -	000B          	rGhostStoreY	.EQU	11
   6:				
   7:     -	8110          	rGhostX		    .EQU	8110H		
   8:     -	8111          	rGhostY		    .EQU	8111H
   9:     -	8112          	rGhostDir		.EQU	8112H
  10:     -	8115          	rGhostTimer     .EQU    8115H
  11:				
  12:     -	9267          	rGhostClear:
  13: 3133+13	9267  3A1081  					LD		A, (rGhostX)		;Push X to stack
  14: 3146+4	926A  4F      					LD		C,A
  15: 3150+13	926B  3A1181  					LD		A, (rGhostY)		;Push Y to stack
  16: 3163+4	926E  47      					LD		B,A
  17: 3167+17	926F  CD4498  					CALL 	printMapAt
  18: 3184+10	9272  C9      					RET
  19:								
  20:     -	9273          	rGhostPrint:
  21: 3194+13	9273  3A1081  					LD		A, (rGhostX)		;Push X to stack
  22: 3207+4	9276  3C      					INC		A
  23: 3211+4	9277  4F      					LD		C,A
  24: 3215+13	9278  3A1181  					LD		A, (rGhostY)		;Push Y to stack
  25: 3228+4	927B  3C      					INC		A
  26: 3232+4	927C  47      					LD		B,A
  27: 3236+17	927D  CDFE9F  					CALL	moveCursor
  28: 3253+13	9280  3A0481  	                LD      A,(pPActive)
  29: 3266+4	9283  B7      	                OR      A
  30: 3270+10	9284  C2E791  	                JP      NZ, printSGhost
  31: 3280+10	9287  219D93  					LD		HL, rGhost
  32: 3290+17	928A  CD74A0  					CALL 	print
  33: 3307+10	928D  C9      					RET
  34:     -	928E          	rGhostMapData:	
  35: 3317+13	928E  3A1081  					LD		A, (rGhostX)
  36: 3330+4	9291  4F      					LD		C,A
  37: 3334+13	9292  3A1181  					LD		A, (rGhostY)
  38: 3347+4	9295  47      					LD		B,A
  39: 3351+17	9296  CDCD97  					CALL	getMapAddress
  40: 3368+7	9299  7E      	                LD      A,(HL)
  41: 3375+10	929A  C9      					ret
  42:				
  43:				
  44:     -	929B          	rGhostInit:   
  45: 3385+7	929B  3E0E    	                LD		a, rGhostStoreX	;set rGhost Pos
  46: 3392+13	929D  321081  				    LD		(rGhostX),a
  47: 3405+7	92A0  3E0B    				    LD		a, rGhostStoreY
  48: 3412+13	92A2  321181  				    LD		(rGhostY),a
  49: 3425+7	92A5  3E10    	                LD		a, rGhostInitTimer
  50: 3432+13	92A7  321581  				    LD		(rGhostTimer),a
  51: 3445+10	92AA  C9      	                RET
  52:				
  53:     -	92AB          	rGhostMove:
  54: 3455+13	92AB  3A1581  	                LD      A,(rGhostTimer)     ;Dont move if the ghost is in jale
  55: 3468+4	92AE  B7      	                OR      A                
  56: 3472+10	92AF  C2C492  	                JP      NZ,rGhostDecTimer   ;Decrement the timer if its x
  57: 3482+13	92B2  3A0481  	                LD      A,(pPActive)
  58: 3495+8	92B5  CB47    	                BIT     0,A                 ;Move every other tick, bit 0 will always 0 when the power pellet isnt active
  59: 3503+5+6	92B7  C0      	                RET     NZ
  60: 3508+13	92B8  3A1281  					LD		A,(rGhostDir)
  61: 3521+10	92BB  111081  					LD		DE,rGhostX
  62: 3531+10	92BE  011181  					LD		BC,rGhostY
  63: 3541+10	92C1  C3FA91  					JP		ghostMove
  64:				
  65:				
  66:     -	92C4          	rGhostDecTimer:
  67: 3551+4	92C4  3D      	                DEC     A
  68: 3555+13	92C5  321581  	                LD      (rGhostTimer),A
  69: 3568+4	92C8  B7      	                OR      A
  70: 3572+5+6	92C9  C0      	                RET     NZ              ;IF Zero move ghost out of jale
  71: 3577+7	92CA  3E0F    	                LD		a, rGhostInitX	;set rGhost Pos
  72: 3584+13	92CC  321081  				    LD		(rGhostX),a
  73: 3597+7	92CF  3E08    				    LD		a, rGhostInitY
  74: 3604+13	92D1  321181  				    LD		(rGhostY),a
  75: 3617+10	92D4  C9      	                RET
  76:				
  77:     -	92D5          	rGhostNextMove:
  78: 3627+7	92D5  3EFF    					LD		A, 0FFH
  79: 3634+13	92D7  321381  					LD		(ghostDis),A
  80: 3647+17	92DA  CD8E92  					CALL	rGhostMapData
  81: 3664+4	92DD  57      					LD		D,A
  82: 3668+7	92DE  3E57    					LD		A,	'W'			;check up
  83: 3675+17	92E0  CDA797  					CALL	isMoveValid
  84: 3692+10+7	92E3  C4FF92  					CALL	NZ,rGhostCheckU
  85: 3702+7	92E6  3E53    					LD		A,	'S'			;down
  86: 3709+17	92E8  CDA797  					CALL	isMoveValid
  87: 3726+10+7	92EB  C40D93  					CALL	NZ,rGhostCheckD
  88: 3736+7	92EE  3E41    					LD		A,	'A'			;left
  89: 3743+17	92F0  CDA797  					CALL	isMoveValid
  90: 3760+10+7	92F3  C41B93  					CALL	NZ,rGhostCheckL
  91: 3770+7	92F6  3E44    					LD		A,	'D'			;right
  92: 3777+17	92F8  CDA797  					CALL	isMoveValid
  93: 3794+10+7	92FB  C42993  					CALL	NZ,rGhostCheckR
  94: 3804+10	92FE  C9      					RET
  95:								
  96:     -	92FF          	rGhostCheckU:	
  97: 3814+11	92FF  F5      					PUSH	AF
  98: 3825+13	9300  3A1181  					LD		A, (rGhostY)
  99: 3838+4	9303  3D      					DEC		A
 100: 3842+7	9304  E61F    					AND		00011111B
 101: 3849+4	9306  47      					LD		B,A
 102: 3853+13	9307  3A1081  					LD		A,(rGhostX)
 103: 3866+4	930A  4F      					LD		C,A
 104: 3870+12	930B  182A    					JR		rGhostPathFind
 105:     -	930D          	rGhostCheckD:			
 106: 3882+11	930D  F5      					PUSH	AF
 107: 3893+13	930E  3A1181  					LD		A, (rGhostY)
 108: 3906+4	9311  3C      					INC		A
 109: 3910+7	9312  E61F    					AND		00011111B
 110: 3917+4	9314  47      					LD		B,A
 111: 3921+13	9315  3A1081  					LD		A,(rGhostX)
 112: 3934+4	9318  4F      					LD		C,A
 113: 3938+12	9319  181C    					JR		rGhostPathFind
 114:     -	931B          	rGhostCheckL:		
 115: 3950+11	931B  F5      					PUSH	AF	
 116: 3961+13	931C  3A1081  					LD		A, (rGhostX)
 117: 3974+4	931F  3D      					DEC		A
 118: 3978+7	9320  E61F    					AND		00011111B
 119: 3985+4	9322  4F      					LD		C,A
 120: 3989+13	9323  3A1181  					LD		A,(rGhostY)
 121: 4002+4	9326  47      					LD		B,A
 122: 4006+12	9327  180E    					JR		rGhostPathFind
 123:     -	9329          	rGhostCheckR:
 124: 4018+11	9329  F5      					PUSH	AF	
 125: 4029+13	932A  3A1081  					LD		A, (rGhostX)
 126: 4042+4	932D  3C      					INC		A
 127: 4046+7	932E  E61F    					AND		00011111B
 128: 4053+4	9330  4F      					LD		C,A
 129: 4057+13	9331  3A1181  					LD		A,(rGhostY)
 130: 4070+4	9334  47      					LD		B,A
 131: 4074+12	9335  1800    					JR		rGhostPathFind
 132:				
 133:     -	9337          	rGhostPathFind:
 134: 4086+17	9337  CD2C98  					CALL	getAddressPF
 135: 4103+13	933A  3A1381  					LD		A,(ghostDis)
 136: 4116+7	933D  5E      					LD		E,(HL)
 137: 4123+4	933E  BB      					CP		E
 138: 4127+11	933F  F5      	                PUSH    AF
 139: 4138+13	9340  3A0481  	                LD      A,(pPActive)            ;Check power pellet is not activ, if it is, run away
 140: 4151+4	9343  B7      	                OR      A
 141: 4155+10	9344  C24E93  	                JP      NZ,rGhostPFPP
 142: 4165+10	9347  F1      	                POP     AF
 143: 4175+10	9348  D25A93  					JP		NC,rGhostSetNewDir
 144: 4185+10	934B  F1      	                POP     AF
 145: 4195+10	934C  F1      					POP		AF
 146: 4205+10	934D  C9      					RET
 147:     -	934E          	rGhostPFPP:
 148: 4215+10	934E  F1      	                POP     AF
 149: 4225+10	934F  DA5A93  	                JP		C,rGhostSetNewDir
 150: 4235+7	9352  FEFF    	                CP      0FFH
 151: 4242+10	9354  CA5A93  	                JP      Z,rGhostSetNewDir
 152: 4252+10	9357  F1      	                POP     AF
 153: 4262+10	9358  F1      					POP		AF
 154: 4272+10	9359  C9      	                RET
 155:				
 156:     -	935A          	rGhostSetNewDir:
 157: 4282+4	935A  7B      					LD		A,E
 158: 4286+13	935B  321381  					LD		(ghostDis),A
 159: 4299+10	935E  F1      					POP		AF
 160: 4309+13	935F  321281  					LD		(rGhostDir),A
 161: 4322+10	9362  C9      					RET
 162:				
 163:     -	9363          	rGhostColide:   
 164: 4332+13	9363  3A0081  	                LD      A,(pacx)                ;Compair X
 165: 4345+4	9366  47      	                LD      B,A
 166: 4349+13	9367  3A1081  	                LD      A,(rGhostX)
 167: 4362+4	936A  B8      	                CP      B
 168: 4366+5+6	936B  C0      	                RET     NZ
 169: 4371+13	936C  3A0181  	                LD      A,(pacy)                ;Compair Y
 170: 4384+4	936F  47      	                LD      B,A
 171: 4388+13	9370  3A1181  	                LD      A,(rGhostY)
 172: 4401+4	9373  B8      	                CP      B
 173: 4405+5+6	9374  C0      	                RET     NZ
 174: 4410+13	9375  3A0481  	                LD      A,(pPActive)              ;Colishion Happened
 175: 4423+4	9378  B7      	                OR      A
 176: 4427+10	9379  CA6C91  	                JP      Z,killPacman               ;If power pellet not active, run genric deth lib
 177: 4437+17	937C  CD5C92  					CALL	eatGhost
 178: 4454+7	937F  3E0E    	                LD		a, rGhostStoreX	           ;set rGhost Pos
 179: 4461+13	9381  321081  				    LD		(rGhostX),a
 180: 4474+7	9384  3E0B    				    LD		a, rGhostStoreY
 181: 4481+13	9386  321181  				    LD		(rGhostY),a
 182: 4494+7	9389  3E10    	                LD		a, rGhostInitTimer
 183: 4501+13	938B  321581  				    LD		(rGhostTimer),a
 184: 4514+10	938E  C9      	                RET
 185:				;x = l
 186:				;y = h
 187:     -	938F          	rGhostStack:
 188: 4524+4	938F  7D      					LD      A,L               		;Compair X
 189: 4528+4	9390  47      	                LD      B,A
 190: 4532+13	9391  3A1081  	                LD      A,(rGhostX)
 191: 4545+4	9394  B8      	                CP      B
 192: 4549+5+6	9395  C0      	                RET     NZ
 193: 4554+4	9396  7C      	                LD      A,h                		;Compair Y
 194: 4558+4	9397  47      	                LD      B,A
 195: 4562+13	9398  3A1181  	                LD      A,(rGhostY)
 196: 4575+4	939B  B8      	                CP      B
 197: 4579+10	939C  C9      	                RET
 198:				
**** ghosts.asm ****
 132:     -	939D  1B5B3931	rGhost:		.BYTE	1BH,"[91mM",1BH,"[0m",0
	              6D4D1B5B
	              306D00
 133:				include ghosts/orange.asm
**** ghosts/orange.asm ****
   1:     -	000F          	oGhostInitX	    .EQU	15
   2:     -	0008          	oGhostInitY	    .EQU	8
   3:     -	0020          	oGhostInitTimer .EQU    20H
   4:     -	000F          	oGhostStoreX	.EQU	15
   5:     -	000B          	oGhostStoreY	.EQU	11
   6:				
   7:     -	8120          	oGhostX		    .EQU	8120H		
   8:     -	8121          	oGhostY		    .EQU	8121H
   9:     -	8122          	oGhostDir		.EQU	8122H
  10:     -	8125          	oGhostTimer     .EQU    8125H
  11:				
  12:     -	93A8          	oGhostClear:
  13: 4589+13	93A8  3A2081  					LD		A, (oGhostX)		;Push X to stack
  14: 4602+4	93AB  4F      					LD		C,A
  15: 4606+13	93AC  3A2181  					LD		A, (oGhostY)		;Push Y to stack
  16: 4619+4	93AF  47      					LD		B,A
  17: 4623+17	93B0  CD4498  					CALL 	printMapAt
  18: 4640+10	93B3  C9      					RET
  19:								
  20:     -	93B4          	oGhostPrint:
  21: 4650+13	93B4  3A2081  					LD		A, (oGhostX)		;Push X to stack
  22: 4663+4	93B7  3C      					INC		A
  23: 4667+4	93B8  4F      					LD		C,A
  24: 4671+13	93B9  3A2181  					LD		A, (oGhostY)		;Push Y to stack
  25: 4684+4	93BC  3C      					INC		A
  26: 4688+4	93BD  47      					LD		B,A
  27: 4692+17	93BE  CDFE9F  					CALL	moveCursor
  28: 4709+13	93C1  3A0481  	                LD      A,(pPActive)
  29: 4722+4	93C4  B7      	                OR      A
  30: 4726+10	93C5  C2E791  	                JP      NZ, printSGhost
  31: 4736+10	93C8  21DE94  					LD		HL, oGhost
  32: 4746+17	93CB  CD74A0  					CALL 	print
  33: 4763+10	93CE  C9      					RET
  34:     -	93CF          	oGhostMapData:	
  35: 4773+13	93CF  3A2081  					LD		A, (oGhostX)
  36: 4786+4	93D2  4F      					LD		C,A
  37: 4790+13	93D3  3A2181  					LD		A, (oGhostY)
  38: 4803+4	93D6  47      					LD		B,A
  39: 4807+17	93D7  CDCD97  					CALL	getMapAddress
  40: 4824+7	93DA  7E      	                LD      A,(HL)
  41: 4831+10	93DB  C9      					ret
  42:				
  43:				
  44:     -	93DC          	oGhostInit:   
  45: 4841+7	93DC  3E0F    	                LD		a, oGhostStoreX	;set oGhost Pos
  46: 4848+13	93DE  322081  				    LD		(oGhostX),a
  47: 4861+7	93E1  3E0B    				    LD		a, oGhostStoreY
  48: 4868+13	93E3  322181  				    LD		(oGhostY),a
  49: 4881+7	93E6  3E20    	                LD		a, oGhostInitTimer
  50: 4888+13	93E8  322581  				    LD		(oGhostTimer),a
  51: 4901+10	93EB  C9      	                RET
  52:				
  53:     -	93EC          	oGhostMove:
  54: 4911+13	93EC  3A2581  	                LD      A,(oGhostTimer)     ;Dont move if the ghost is in jale
  55: 4924+4	93EF  B7      	                OR      A                
  56: 4928+10	93F0  C20594  	                JP      NZ,oGhostDecTimer   ;Decrement the timer if its x
  57: 4938+13	93F3  3A0481  	                LD      A,(pPActive)
  58: 4951+8	93F6  CB47    	                BIT     0,A                 ;Move every other tick, bit 0 will always 0 when the power pellet isnt active
  59: 4959+5+6	93F8  C0      	                RET     NZ
  60: 4964+13	93F9  3A2281  					LD		A,(oGhostDir)
  61: 4977+10	93FC  112081  					LD		DE,oGhostX
  62: 4987+10	93FF  012181  					LD		BC,oGhostY
  63: 4997+10	9402  C3FA91  					JP		ghostMove
  64:				
  65:     -	9405          	oGhostDecTimer:
  66: 5007+4	9405  3D      	                DEC     A
  67: 5011+13	9406  322581  	                LD      (oGhostTimer),A
  68: 5024+4	9409  B7      	                OR      A
  69: 5028+5+6	940A  C0      	                RET     NZ              ;IF Zero move ghost out of jale
  70: 5033+7	940B  3E0F    	                LD		a, oGhostInitX	;set oGhost Pos
  71: 5040+13	940D  322081  				    LD		(oGhostX),a
  72: 5053+7	9410  3E08    				    LD		a, oGhostInitY
  73: 5060+13	9412  322181  				    LD		(oGhostY),a
  74: 5073+10	9415  C9      	                RET
  75:				
  76:     -	9416          	oGhostNextMove:
  77: 5083+7	9416  3EFF    					LD		A, 0FFH
  78: 5090+13	9418  321381  					LD		(ghostDis),A
  79: 5103+17	941B  CDCF93  					CALL	oGhostMapData
  80: 5120+4	941E  57      					LD		D,A
  81: 5124+7	941F  3E57    					LD		A,	'W'			;check up
  82: 5131+17	9421  CDA797  					CALL	isMoveValid
  83: 5148+10+7	9424  C44094  					CALL	NZ,oGhostCheckU
  84: 5158+7	9427  3E53    					LD		A,	'S'			;down
  85: 5165+17	9429  CDA797  					CALL	isMoveValid
  86: 5182+10+7	942C  C44E94  					CALL	NZ,oGhostCheckD
  87: 5192+7	942F  3E41    					LD		A,	'A'			;left
  88: 5199+17	9431  CDA797  					CALL	isMoveValid
  89: 5216+10+7	9434  C45C94  					CALL	NZ,oGhostCheckL
  90: 5226+7	9437  3E44    					LD		A,	'D'			;right
  91: 5233+17	9439  CDA797  					CALL	isMoveValid
  92: 5250+10+7	943C  C46A94  					CALL	NZ,oGhostCheckR
  93: 5260+10	943F  C9      					RET
  94:								
  95:     -	9440          	oGhostCheckU:	
  96: 5270+11	9440  F5      					PUSH	AF
  97: 5281+13	9441  3A2181  					LD		A, (oGhostY)
  98: 5294+4	9444  3D      					DEC		A
  99: 5298+7	9445  E61F    					AND		00011111B
 100: 5305+4	9447  47      					LD		B,A
 101: 5309+13	9448  3A2081  					LD		A,(oGhostX)
 102: 5322+4	944B  4F      					LD		C,A
 103: 5326+12	944C  182A    					JR		oGhostPathFind
 104:     -	944E          	oGhostCheckD:			
 105: 5338+11	944E  F5      					PUSH	AF
 106: 5349+13	944F  3A2181  					LD		A, (oGhostY)
 107: 5362+4	9452  3C      					INC		A
 108: 5366+7	9453  E61F    					AND		00011111B
 109: 5373+4	9455  47      					LD		B,A
 110: 5377+13	9456  3A2081  					LD		A,(oGhostX)
 111: 5390+4	9459  4F      					LD		C,A
 112: 5394+12	945A  181C    					JR		oGhostPathFind
 113:     -	945C          	oGhostCheckL:		
 114: 5406+11	945C  F5      					PUSH	AF	
 115: 5417+13	945D  3A2081  					LD		A, (oGhostX)
 116: 5430+4	9460  3D      					DEC		A
 117: 5434+7	9461  E61F    					AND		00011111B
 118: 5441+4	9463  4F      					LD		C,A
 119: 5445+13	9464  3A2181  					LD		A,(oGhostY)
 120: 5458+4	9467  47      					LD		B,A
 121: 5462+12	9468  180E    					JR		oGhostPathFind
 122:     -	946A          	oGhostCheckR:
 123: 5474+11	946A  F5      					PUSH	AF	
 124: 5485+13	946B  3A2081  					LD		A, (oGhostX)
 125: 5498+4	946E  3C      					INC		A
 126: 5502+7	946F  E61F    					AND		00011111B
 127: 5509+4	9471  4F      					LD		C,A
 128: 5513+13	9472  3A2181  					LD		A,(oGhostY)
 129: 5526+4	9475  47      					LD		B,A
 130: 5530+12	9476  1800    					JR		oGhostPathFind
 131:				
 132:     -	9478          	oGhostPathFind:
 133: 5542+17	9478  CD2C98  					CALL	getAddressPF
 134: 5559+13	947B  3A1381  					LD		A,(ghostDis)
 135: 5572+7	947E  5E      					LD		E,(HL)
 136: 5579+4	947F  BB      					CP		E
 137: 5583+11	9480  F5      	                PUSH    AF
 138: 5594+13	9481  3A0481  	                LD      A,(pPActive)            ;Check power pellet is not activ, if it is, run away
 139: 5607+4	9484  B7      	                OR      A
 140: 5611+10	9485  C28F94  	                JP      NZ,oGhostPFPP
 141: 5621+10	9488  F1      	                POP     AF
 142: 5631+10	9489  D29B94  					JP		NC,oGhostSetNewDir
 143: 5641+10	948C  F1      	                POP     AF
 144: 5651+10	948D  F1      					POP		AF
 145: 5661+10	948E  C9      					RET
 146:     -	948F          	oGhostPFPP:
 147: 5671+10	948F  F1      	                POP     AF
 148: 5681+10	9490  DA9B94  	                JP		C,oGhostSetNewDir
 149: 5691+7	9493  FEFF    	                CP      0FFH
 150: 5698+10	9495  CA9B94  	                JP      Z,oGhostSetNewDir
 151: 5708+10	9498  F1      	                POP     AF
 152: 5718+10	9499  F1      					POP		AF
 153: 5728+10	949A  C9      	                RET
 154:				
 155:     -	949B          	oGhostSetNewDir:
 156: 5738+4	949B  7B      					LD		A,E
 157: 5742+13	949C  321381  					LD		(ghostDis),A
 158: 5755+10	949F  F1      					POP		AF
 159: 5765+13	94A0  322281  					LD		(oGhostDir),A
 160: 5778+10	94A3  C9      					RET
 161:				
 162:     -	94A4          	oGhostColide:   
 163: 5788+13	94A4  3A0081  	                LD      A,(pacx)                ;Compair X
 164: 5801+4	94A7  47      	                LD      B,A
 165: 5805+13	94A8  3A2081  	                LD      A,(oGhostX)
 166: 5818+4	94AB  B8      	                CP      B
 167: 5822+5+6	94AC  C0      	                RET     NZ
 168: 5827+13	94AD  3A0181  	                LD      A,(pacy)                ;Compair Y
 169: 5840+4	94B0  47      	                LD      B,A
 170: 5844+13	94B1  3A2181  	                LD      A,(oGhostY)
 171: 5857+4	94B4  B8      	                CP      B
 172: 5861+5+6	94B5  C0      	                RET     NZ
 173: 5866+13	94B6  3A0481  	                LD      A,(pPActive)              ;Colishion Happened
 174: 5879+4	94B9  B7      	                OR      A
 175: 5883+10	94BA  CA6C91  	                JP      Z,killPacman               ;If power pellet not active, run genric deth lib
 176: 5893+17	94BD  CD5C92  					CALL	eatGhost
 177: 5910+7	94C0  3E0F    	                LD		a, oGhostStoreX	           ;set oGhost Pos
 178: 5917+13	94C2  322081  				    LD		(oGhostX),a
 179: 5930+7	94C5  3E0B    				    LD		a, oGhostStoreY
 180: 5937+13	94C7  322181  				    LD		(oGhostY),a
 181: 5950+7	94CA  3E20    	                LD		a, oGhostInitTimer
 182: 5957+13	94CC  322581  				    LD		(oGhostTimer),a
 183: 5970+10	94CF  C9      	                RET
 184:				;x = l
 185:				;y = h
 186:     -	94D0          	oGhostStack:
 187: 5980+4	94D0  7D      					LD      A,L               		;Compair X
 188: 5984+4	94D1  47      	                LD      B,A
 189: 5988+13	94D2  3A2081  	                LD      A,(oGhostX)
 190: 6001+4	94D5  B8      	                CP      B
 191: 6005+5+6	94D6  C0      	                RET     NZ
 192: 6010+4	94D7  7C      	                LD      A,h                		;Compair Y
 193: 6014+4	94D8  47      	                LD      B,A
 194: 6018+13	94D9  3A2181  	                LD      A,(oGhostY)
 195: 6031+4	94DC  B8      	                CP      B
 196: 6035+10	94DD  C9      	                RET
 197:				
**** ghosts.asm ****
 134:     -	94DE  1B5B3333	oGhost:		.BYTE	1BH,"[33mM",1BH,"[0m",0
	              6D4D1B5B
	              306D00
 135:				include ghosts/pink.asm
**** ghosts/pink.asm ****
   1:     -	000F          	pGhostInitX	    .EQU	15
   2:     -	0008          	pGhostInitY	    .EQU	8
   3:     -	0030          	pGhostInitTimer .EQU    30H
   4:     -	0010          	pGhostStoreX	.EQU	16
   5:     -	000B          	pGhostStoreY	.EQU	11
   6:				
   7:     -	8130          	pGhostX		    .EQU	8130H		
   8:     -	8131          	pGhostY		    .EQU	8131H
   9:     -	8132          	pGhostDir		.EQU	8132H
  10:     -	8135          	pGhostTimer     .EQU    8135H
  11:				
  12:     -	94E9          	pGhostClear:
  13: 6045+13	94E9  3A3081  					LD		A, (pGhostX)		;Push X to stack
  14: 6058+4	94EC  4F      					LD		C,A
  15: 6062+13	94ED  3A3181  					LD		A, (pGhostY)		;Push Y to stack
  16: 6075+4	94F0  47      					LD		B,A
  17: 6079+17	94F1  CD4498  					CALL 	printMapAt
  18: 6096+10	94F4  C9      					RET
  19:								
  20:     -	94F5          	pGhostPrint:
  21: 6106+13	94F5  3A3081  					LD		A, (pGhostX)		;Push X to stack
  22: 6119+4	94F8  3C      					INC		A
  23: 6123+4	94F9  4F      					LD		C,A
  24: 6127+13	94FA  3A3181  					LD		A, (pGhostY)		;Push Y to stack
  25: 6140+4	94FD  3C      					INC		A
  26: 6144+4	94FE  47      					LD		B,A
  27: 6148+17	94FF  CDFE9F  					CALL	moveCursor
  28: 6165+13	9502  3A0481  	                LD      A,(pPActive)
  29: 6178+4	9505  B7      	                OR      A
  30: 6182+10	9506  C2E791  	                JP      NZ, printSGhost
  31: 6192+10	9509  211F96  					LD		HL, pGhost
  32: 6202+17	950C  CD74A0  					CALL 	print
  33: 6219+10	950F  C9      					RET
  34:     -	9510          	pGhostMapData:	
  35: 6229+13	9510  3A3081  					LD		A, (pGhostX)
  36: 6242+4	9513  4F      					LD		C,A
  37: 6246+13	9514  3A3181  					LD		A, (pGhostY)
  38: 6259+4	9517  47      					LD		B,A
  39: 6263+17	9518  CDCD97  					CALL	getMapAddress
  40: 6280+7	951B  7E      	                LD      A,(HL)
  41: 6287+10	951C  C9      					ret
  42:				
  43:				
  44:     -	951D          	pGhostInit:   
  45: 6297+7	951D  3E10    	                LD		a, pGhostStoreX	;set pGhost Pos
  46: 6304+13	951F  323081  				    LD		(pGhostX),a
  47: 6317+7	9522  3E0B    				    LD		a, pGhostStoreY
  48: 6324+13	9524  323181  				    LD		(pGhostY),a
  49: 6337+7	9527  3E30    	                LD		a, pGhostInitTimer
  50: 6344+13	9529  323581  				    LD		(pGhostTimer),a
  51: 6357+10	952C  C9      	                RET
  52:				
  53:     -	952D          	pGhostMove:
  54: 6367+13	952D  3A3581  	                LD      A,(pGhostTimer)     ;Dont move if the ghost is in jale
  55: 6380+4	9530  B7      	                OR      A                
  56: 6384+10	9531  C24695  	                JP      NZ,pGhostDecTimer   ;Decrement the timer if its x
  57: 6394+13	9534  3A0481  	                LD      A,(pPActive)
  58: 6407+8	9537  CB47    	                BIT     0,A                 ;Move every other tick, bit 0 will always 0 when the power pellet isnt active
  59: 6415+5+6	9539  C0      	                RET     NZ
  60: 6420+13	953A  3A3281  					LD		A,(pGhostDir)
  61: 6433+10	953D  113081  					LD		DE,pGhostX
  62: 6443+10	9540  013181  					LD		BC,pGhostY
  63: 6453+10	9543  C3FA91  					JP		ghostMove
  64:				
  65:				
  66:     -	9546          	pGhostDecTimer:
  67: 6463+4	9546  3D      	                DEC     A
  68: 6467+13	9547  323581  	                LD      (pGhostTimer),A
  69: 6480+4	954A  B7      	                OR      A
  70: 6484+5+6	954B  C0      	                RET     NZ              ;IF Zero move ghost out of jale
  71: 6489+7	954C  3E0F    	                LD		a, pGhostInitX	;set pGhost Pos
  72: 6496+13	954E  323081  				    LD		(pGhostX),a
  73: 6509+7	9551  3E08    				    LD		a, pGhostInitY
  74: 6516+13	9553  323181  				    LD		(pGhostY),a
  75: 6529+10	9556  C9      	                RET
  76:				
  77:     -	9557          	pGhostNextMove:
  78: 6539+7	9557  3EFF    					LD		A, 0FFH
  79: 6546+13	9559  321381  					LD		(ghostDis),A
  80: 6559+17	955C  CD1095  					CALL	pGhostMapData
  81: 6576+4	955F  57      					LD		D,A
  82: 6580+7	9560  3E57    					LD		A,	'W'			;check up
  83: 6587+17	9562  CDA797  					CALL	isMoveValid
  84: 6604+10+7	9565  C48195  					CALL	NZ,pGhostCheckU
  85: 6614+7	9568  3E53    					LD		A,	'S'			;down
  86: 6621+17	956A  CDA797  					CALL	isMoveValid
  87: 6638+10+7	956D  C48F95  					CALL	NZ,pGhostCheckD
  88: 6648+7	9570  3E41    					LD		A,	'A'			;left
  89: 6655+17	9572  CDA797  					CALL	isMoveValid
  90: 6672+10+7	9575  C49D95  					CALL	NZ,pGhostCheckL
  91: 6682+7	9578  3E44    					LD		A,	'D'			;right
  92: 6689+17	957A  CDA797  					CALL	isMoveValid
  93: 6706+10+7	957D  C4AB95  					CALL	NZ,pGhostCheckR
  94: 6716+10	9580  C9      					RET
  95:								
  96:     -	9581          	pGhostCheckU:	
  97: 6726+11	9581  F5      					PUSH	AF
  98: 6737+13	9582  3A3181  					LD		A, (pGhostY)
  99: 6750+4	9585  3D      					DEC		A
 100: 6754+7	9586  E61F    					AND		00011111B
 101: 6761+4	9588  47      					LD		B,A
 102: 6765+13	9589  3A3081  					LD		A,(pGhostX)
 103: 6778+4	958C  4F      					LD		C,A
 104: 6782+12	958D  182A    					JR		pGhostPathFind
 105:     -	958F          	pGhostCheckD:			
 106: 6794+11	958F  F5      					PUSH	AF
 107: 6805+13	9590  3A3181  					LD		A, (pGhostY)
 108: 6818+4	9593  3C      					INC		A
 109: 6822+7	9594  E61F    					AND		00011111B
 110: 6829+4	9596  47      					LD		B,A
 111: 6833+13	9597  3A3081  					LD		A,(pGhostX)
 112: 6846+4	959A  4F      					LD		C,A
 113: 6850+12	959B  181C    					JR		pGhostPathFind
 114:     -	959D          	pGhostCheckL:		
 115: 6862+11	959D  F5      					PUSH	AF	
 116: 6873+13	959E  3A3081  					LD		A, (pGhostX)
 117: 6886+4	95A1  3D      					DEC		A
 118: 6890+7	95A2  E61F    					AND		00011111B
 119: 6897+4	95A4  4F      					LD		C,A
 120: 6901+13	95A5  3A3181  					LD		A,(pGhostY)
 121: 6914+4	95A8  47      					LD		B,A
 122: 6918+12	95A9  180E    					JR		pGhostPathFind
 123:     -	95AB          	pGhostCheckR:
 124: 6930+11	95AB  F5      					PUSH	AF	
 125: 6941+13	95AC  3A3081  					LD		A, (pGhostX)
 126: 6954+4	95AF  3C      					INC		A
 127: 6958+7	95B0  E61F    					AND		00011111B
 128: 6965+4	95B2  4F      					LD		C,A
 129: 6969+13	95B3  3A3181  					LD		A,(pGhostY)
 130: 6982+4	95B6  47      					LD		B,A
 131: 6986+12	95B7  1800    					JR		pGhostPathFind
 132:				
 133:     -	95B9          	pGhostPathFind:
 134: 6998+17	95B9  CD2C98  					CALL	getAddressPF
 135: 7015+13	95BC  3A1381  					LD		A,(ghostDis)
 136: 7028+7	95BF  5E      					LD		E,(HL)
 137: 7035+4	95C0  BB      					CP		E
 138: 7039+11	95C1  F5      	                PUSH    AF
 139: 7050+13	95C2  3A0481  	                LD      A,(pPActive)            ;Check power pellet is not activ, if it is, run away
 140: 7063+4	95C5  B7      	                OR      A
 141: 7067+10	95C6  C2D095  	                JP      NZ,pGhostPFPP
 142: 7077+10	95C9  F1      	                POP     AF
 143: 7087+10	95CA  D2DC95  					JP		NC,pGhostSetNewDir
 144: 7097+10	95CD  F1      	                POP     AF
 145: 7107+10	95CE  F1      					POP		AF
 146: 7117+10	95CF  C9      					RET
 147:     -	95D0          	pGhostPFPP:
 148: 7127+10	95D0  F1      	                POP     AF
 149: 7137+10	95D1  DADC95  	                JP		C,pGhostSetNewDir
 150: 7147+7	95D4  FEFF    	                CP      0FFH
 151: 7154+10	95D6  CADC95  	                JP      Z,pGhostSetNewDir
 152: 7164+10	95D9  F1      	                POP     AF
 153: 7174+10	95DA  F1      					POP		AF
 154: 7184+10	95DB  C9      	                RET
 155:				
 156:     -	95DC          	pGhostSetNewDir:
 157: 7194+4	95DC  7B      					LD		A,E
 158: 7198+13	95DD  321381  					LD		(ghostDis),A
 159: 7211+10	95E0  F1      					POP		AF
 160: 7221+13	95E1  323281  					LD		(pGhostDir),A
 161: 7234+10	95E4  C9      					RET
 162:				
 163:     -	95E5          	pGhostColide:   
 164: 7244+13	95E5  3A0081  	                LD      A,(pacx)                ;Compair X
 165: 7257+4	95E8  47      	                LD      B,A
 166: 7261+13	95E9  3A3081  	                LD      A,(pGhostX)
 167: 7274+4	95EC  B8      	                CP      B
 168: 7278+5+6	95ED  C0      	                RET     NZ
 169: 7283+13	95EE  3A0181  	                LD      A,(pacy)                ;Compair Y
 170: 7296+4	95F1  47      	                LD      B,A
 171: 7300+13	95F2  3A3181  	                LD      A,(pGhostY)
 172: 7313+4	95F5  B8      	                CP      B
 173: 7317+5+6	95F6  C0      	                RET     NZ
 174: 7322+13	95F7  3A0481  	                LD      A,(pPActive)              ;Colishion Happened
 175: 7335+4	95FA  B7      	                OR      A
 176: 7339+10	95FB  CA6C91  	                JP      Z,killPacman               ;If power pellet not active, run genric deth lib
 177: 7349+17	95FE  CD5C92  					CALL	eatGhost
 178: 7366+7	9601  3E10    	                LD		a, pGhostStoreX	           ;set pGhost Pos
 179: 7373+13	9603  323081  				    LD		(pGhostX),a
 180: 7386+7	9606  3E0B    				    LD		a, pGhostStoreY
 181: 7393+13	9608  323181  				    LD		(pGhostY),a
 182: 7406+7	960B  3E30    	                LD		a, pGhostInitTimer
 183: 7413+13	960D  323581  				    LD		(pGhostTimer),a
 184: 7426+10	9610  C9      	                RET
 185:				
 186:				;x = l
 187:				;y = h
 188:     -	9611          	pGhostStack:
 189: 7436+4	9611  7D      					LD      A,L               		;Compair X
 190: 7440+4	9612  47      	                LD      B,A
 191: 7444+13	9613  3A3081  	                LD      A,(pGhostX)
 192: 7457+4	9616  B8      	                CP      B
 193: 7461+5+6	9617  C0      	                RET     NZ
 194: 7466+4	9618  7C      	                LD      A,h                		;Compair Y
 195: 7470+4	9619  47      	                LD      B,A
 196: 7474+13	961A  3A3181  	                LD      A,(pGhostY)
 197: 7487+4	961D  B8      	                CP      B
 198: 7491+10	961E  C9      	                RET
 199:				
**** ghosts.asm ****
 136:     -	961F  1B5B3935	pGhost:		.BYTE	1BH,"[95mM",1BH,"[0m",0
	              6D4D1B5B
	              306D00
 137:				include ghosts/teal.asm
**** ghosts/teal.asm ****
   1:     -	000F          	tGhostInitX	    .EQU	15
   2:     -	0008          	tGhostInitY	    .EQU	8
   3:     -	0040          	tGhostInitTimer .EQU    40H
   4:     -	0011          	tGhostStoreX	.EQU	17 
   5:     -	000B          	tGhostStoreY	.EQU	11
   6:				
   7:     -	8140          	tGhostX		    .EQU	8140H		
   8:     -	8141          	tGhostY		    .EQU	8141H
   9:     -	8142          	tGhostDir		.EQU	8142H
  10:     -	8145          	tGhostTimer     .EQU    8145H
  11:				
  12:     -	962A          	tGhostClear:
  13: 7501+13	962A  3A4081  					LD		A, (tGhostX)		;Push X to stack
  14: 7514+4	962D  4F      					LD		C,A
  15: 7518+13	962E  3A4181  					LD		A, (tGhostY)		;Push Y to stack
  16: 7531+4	9631  47      					LD		B,A
  17: 7535+17	9632  CD4498  					CALL 	printMapAt
  18: 7552+10	9635  C9      					RET
  19:								
  20:     -	9636          	tGhostPrint:
  21: 7562+13	9636  3A4081  					LD		A, (tGhostX)		;Push X to stack
  22: 7575+4	9639  3C      					INC		A
  23: 7579+4	963A  4F      					LD		C,A
  24: 7583+13	963B  3A4181  					LD		A, (tGhostY)		;Push Y to stack
  25: 7596+4	963E  3C      					INC		A
  26: 7600+4	963F  47      					LD		B,A
  27: 7604+17	9640  CDFE9F  					CALL	moveCursor
  28: 7621+13	9643  3A0481  	                LD      A,(pPActive)
  29: 7634+4	9646  B7      	                OR      A
  30: 7638+10	9647  C2E791  	                JP      NZ, printSGhost
  31: 7648+10	964A  216097  					LD		HL, tGhost
  32: 7658+17	964D  CD74A0  					CALL 	print
  33: 7675+10	9650  C9      					RET
  34:     -	9651          	tGhostMapData:	
  35: 7685+13	9651  3A4081  					LD		A, (tGhostX)
  36: 7698+4	9654  4F      					LD		C,A
  37: 7702+13	9655  3A4181  					LD		A, (tGhostY)
  38: 7715+4	9658  47      					LD		B,A
  39: 7719+17	9659  CDCD97  					CALL	getMapAddress
  40: 7736+7	965C  7E      	                LD      A,(HL)
  41: 7743+10	965D  C9      					ret
  42:				
  43:     -	965E          	tGhostInit:   
  44: 7753+7	965E  3E11    	                LD		a, tGhostStoreX	;set tGhost Pos
  45: 7760+13	9660  324081  				    LD		(tGhostX),a
  46: 7773+7	9663  3E0B    				    LD		a, tGhostStoreY
  47: 7780+13	9665  324181  				    LD		(tGhostY),a
  48: 7793+7	9668  3E40    	                LD		a, tGhostInitTimer
  49: 7800+13	966A  324581  				    LD		(tGhostTimer),a
  50: 7813+10	966D  C9      	                RET
  51:				
  52:     -	966E          	tGhostMove:
  53: 7823+13	966E  3A4581  	                LD      A,(tGhostTimer)     ;Dont move if the ghost is in jale
  54: 7836+4	9671  B7      	                OR      A                
  55: 7840+10	9672  C28796  	                JP      NZ,tGhostDecTimer   ;Decrement the timer if its x
  56: 7850+13	9675  3A0481  	                LD      A,(pPActive)
  57: 7863+8	9678  CB47    	                BIT     0,A                 ;Move every other tick, bit 0 will always 0 when the power pellet isnt active
  58: 7871+5+6	967A  C0      	                RET     NZ
  59: 7876+13	967B  3A4281  					LD		A,(tGhostDir)
  60: 7889+10	967E  114081  					LD		DE,tGhostX
  61: 7899+10	9681  014181  					LD		BC,tGhostY
  62: 7909+10	9684  C3FA91  					JP		ghostMove
  63:				
  64:     -	9687          	tGhostDecTimer:
  65: 7919+4	9687  3D      	                DEC     A
  66: 7923+13	9688  324581  	                LD      (tGhostTimer),A
  67: 7936+4	968B  B7      	                OR      A
  68: 7940+5+6	968C  C0      	                RET     NZ              ;IF Zero move ghost out of jale
  69: 7945+7	968D  3E0F    	                LD		a, tGhostInitX	;set tGhost Pos
  70: 7952+13	968F  324081  				    LD		(tGhostX),a
  71: 7965+7	9692  3E08    				    LD		a, tGhostInitY
  72: 7972+13	9694  324181  				    LD		(tGhostY),a
  73: 7985+10	9697  C9      	                RET
  74:				
  75:     -	9698          	tGhostNextMove:
  76: 7995+7	9698  3EFF    					LD		A, 0FFH
  77: 8002+13	969A  321381  					LD		(ghostDis),A
  78: 8015+17	969D  CD5196  					CALL	tGhostMapData
  79: 8032+4	96A0  57      					LD		D,A
  80: 8036+7	96A1  3E57    					LD		A,	'W'			;check up
  81: 8043+17	96A3  CDA797  					CALL	isMoveValid
  82: 8060+10+7	96A6  C4C296  					CALL	NZ,tGhostCheckU
  83: 8070+7	96A9  3E53    					LD		A,	'S'			;down
  84: 8077+17	96AB  CDA797  					CALL	isMoveValid
  85: 8094+10+7	96AE  C4D096  					CALL	NZ,tGhostCheckD
  86: 8104+7	96B1  3E41    					LD		A,	'A'			;left
  87: 8111+17	96B3  CDA797  					CALL	isMoveValid
  88: 8128+10+7	96B6  C4DE96  					CALL	NZ,tGhostCheckL
  89: 8138+7	96B9  3E44    					LD		A,	'D'			;right
  90: 8145+17	96BB  CDA797  					CALL	isMoveValid
  91: 8162+10+7	96BE  C4EC96  					CALL	NZ,tGhostCheckR
  92: 8172+10	96C1  C9      					RET
  93:								
  94:     -	96C2          	tGhostCheckU:	
  95: 8182+11	96C2  F5      					PUSH	AF
  96: 8193+13	96C3  3A4181  					LD		A, (tGhostY)
  97: 8206+4	96C6  3D      					DEC		A
  98: 8210+7	96C7  E61F    					AND		00011111B
  99: 8217+4	96C9  47      					LD		B,A
 100: 8221+13	96CA  3A4081  					LD		A,(tGhostX)
 101: 8234+4	96CD  4F      					LD		C,A
 102: 8238+12	96CE  182A    					JR		tGhostPathFind
 103:     -	96D0          	tGhostCheckD:			
 104: 8250+11	96D0  F5      					PUSH	AF
 105: 8261+13	96D1  3A4181  					LD		A, (tGhostY)
 106: 8274+4	96D4  3C      					INC		A
 107: 8278+7	96D5  E61F    					AND		00011111B
 108: 8285+4	96D7  47      					LD		B,A
 109: 8289+13	96D8  3A4081  					LD		A,(tGhostX)
 110: 8302+4	96DB  4F      					LD		C,A
 111: 8306+12	96DC  181C    					JR		tGhostPathFind
 112:     -	96DE          	tGhostCheckL:		
 113: 8318+11	96DE  F5      					PUSH	AF	
 114: 8329+13	96DF  3A4081  					LD		A, (tGhostX)
 115: 8342+4	96E2  3D      					DEC		A
 116: 8346+7	96E3  E61F    					AND		00011111B
 117: 8353+4	96E5  4F      					LD		C,A
 118: 8357+13	96E6  3A4181  					LD		A,(tGhostY)
 119: 8370+4	96E9  47      					LD		B,A
 120: 8374+12	96EA  180E    					JR		tGhostPathFind
 121:     -	96EC          	tGhostCheckR:
 122: 8386+11	96EC  F5      					PUSH	AF	
 123: 8397+13	96ED  3A4081  					LD		A, (tGhostX)
 124: 8410+4	96F0  3C      					INC		A
 125: 8414+7	96F1  E61F    					AND		00011111B
 126: 8421+4	96F3  4F      					LD		C,A
 127: 8425+13	96F4  3A4181  					LD		A,(tGhostY)
 128: 8438+4	96F7  47      					LD		B,A
 129: 8442+12	96F8  1800    					JR		tGhostPathFind
 130:				
 131:     -	96FA          	tGhostPathFind:
 132: 8454+17	96FA  CD2C98  					CALL	getAddressPF
 133: 8471+13	96FD  3A1381  					LD		A,(ghostDis)
 134: 8484+7	9700  5E      					LD		E,(HL)
 135: 8491+4	9701  BB      					CP		E
 136: 8495+11	9702  F5      	                PUSH    AF
 137: 8506+13	9703  3A0481  	                LD      A,(pPActive)            ;Check power pellet is not activ, if it is, run away
 138: 8519+4	9706  B7      	                OR      A
 139: 8523+10	9707  C21197  	                JP      NZ,tGhostPFPP
 140: 8533+10	970A  F1      	                POP     AF
 141: 8543+10	970B  D21D97  					JP		NC,tGhostSetNewDir
 142: 8553+10	970E  F1      	                POP     AF
 143: 8563+10	970F  F1      					POP		AF
 144: 8573+10	9710  C9      					RET
 145:     -	9711          	tGhostPFPP:
 146: 8583+10	9711  F1      	                POP     AF
 147: 8593+10	9712  DA1D97  	                JP		C,tGhostSetNewDir
 148: 8603+7	9715  FEFF    	                CP      0FFH
 149: 8610+10	9717  CA1D97  	                JP      Z,tGhostSetNewDir
 150: 8620+10	971A  F1      	                POP     AF
 151: 8630+10	971B  F1      					POP		AF
 152: 8640+10	971C  C9      	                RET
 153:				
 154:     -	971D          	tGhostSetNewDir:
 155: 8650+4	971D  7B      					LD		A,E
 156: 8654+13	971E  321381  					LD		(ghostDis),A
 157: 8667+10	9721  F1      					POP		AF
 158: 8677+13	9722  324281  					LD		(tGhostDir),A
 159: 8690+10	9725  C9      					RET
 160:				
 161:     -	9726          	tGhostColide:   
 162: 8700+13	9726  3A0081  	                LD      A,(pacx)                ;Compair X
 163: 8713+4	9729  47      	                LD      B,A
 164: 8717+13	972A  3A4081  	                LD      A,(tGhostX)
 165: 8730+4	972D  B8      	                CP      B
 166: 8734+5+6	972E  C0      	                RET     NZ
 167: 8739+13	972F  3A0181  	                LD      A,(pacy)                ;Compair Y
 168: 8752+4	9732  47      	                LD      B,A
 169: 8756+13	9733  3A4181  	                LD      A,(tGhostY)
 170: 8769+4	9736  B8      	                CP      B
 171: 8773+5+6	9737  C0      	                RET     NZ
 172: 8778+13	9738  3A0481  	                LD      A,(pPActive)              ;Colishion Happened
 173: 8791+4	973B  B7      	                OR      A
 174: 8795+10	973C  CA6C91  	                JP      Z,killPacman               ;If power pellet not active, run genric deth lib
 175: 8805+17	973F  CD5C92  					CALL	eatGhost
 176: 8822+7	9742  3E11    	                LD		a, tGhostStoreX	           ;set tGhost Pos
 177: 8829+13	9744  324081  				    LD		(tGhostX),a
 178: 8842+7	9747  3E0B    				    LD		a, tGhostStoreY
 179: 8849+13	9749  324181  				    LD		(tGhostY),a
 180: 8862+7	974C  3E40    	                LD		a, tGhostInitTimer
 181: 8869+13	974E  324581  				    LD		(tGhostTimer),a
 182: 8882+10	9751  C9      	                RET
 183:				
 184:				;x = l
 185:				;y = h
 186:     -	9752          	tGhostStack:
 187: 8892+4	9752  7D      					LD      A,L               		;Compair X
 188: 8896+4	9753  47      	                LD      B,A
 189: 8900+13	9754  3A4081  	                LD      A,(tGhostX)
 190: 8913+4	9757  B8      	                CP      B
 191: 8917+5+6	9758  C0      	                RET     NZ
 192: 8922+4	9759  7C      	                LD      A,h                		;Compair Y
 193: 8926+4	975A  47      	                LD      B,A
 194: 8930+13	975B  3A4181  	                LD      A,(tGhostY)
 195: 8943+4	975E  B8      	                CP      B
 196: 8947+10	975F  C9      	                RET
 197:				
**** ghosts.asm ****
 138:     -	9760  1B5B3936	tGhost:		.BYTE	1BH,"[96mM",1BH,"[0m",0
	              6D4D1B5B
	              306D00
 139:				
 140:				
 141:     -	976B  1B5B3334	sGhost0:	.BYTE	1BH,"[34mM",1BH,"[0m",0
	              6D4D1B5B
	              306D00
**** main.asm ****
  74:     -	9776  1B5B3937	sGhost1:	.BYTE	1BH,"[97mM",1BH,"[0m",0
	              6D4D1B5B
	              306D00
  75:				;-----------Spesific Libs -----;
  76:				include movelibs.asm	
**** movelibs.asm ****
   1:     -	9781          	move:
   2: 8957+7	9781  FE57    					CP		'W'
   3: 8964+7+5	9783  280A    					JR		Z,moveU
   4: 8971+7	9785  FE41    					CP		'A'
   5: 8978+7+5	9787  2812    					JR		Z,moveL
   6: 8985+7	9789  FE53    					CP		'S'
   7: 8992+7+5	978B  2808    					JR		Z,moveD
   8: 8999+12	978D  1812    					JR		moveR
   9:				
  10:     -	978F          	moveU:			
  11: 9011+7	978F  0A      					LD		A, (BC)
  12: 9018+4	9790  3D      					DEC		A
  13: 9022+7	9791  E61F    					AND		00011111B
  14: 9029+7	9793  02      					LD		(BC),A
  15: 9036+10	9794  C9      					RET
  16:     -	9795          	moveD:			
  17: 9046+7	9795  0A      					LD		A, (BC)
  18: 9053+4	9796  3C      					INC		A
  19: 9057+7	9797  E61F    					AND		00011111B
  20: 9064+7	9799  02      					LD		(BC),A
  21: 9071+10	979A  C9      					RET
  22:     -	979B          	moveL:			
  23: 9081+7	979B  1A      					LD		A, (DE)
  24: 9088+4	979C  3D      					DEC		A
  25: 9092+7	979D  E61F    					AND		00011111B
  26: 9099+7	979F  12      					LD		(DE),A
  27: 9106+10	97A0  C9      					RET
  28:     -	97A1          	moveR:			
  29: 9116+7	97A1  1A      					LD		A, (DE)
  30: 9123+4	97A2  3C      					INC		A
  31: 9127+7	97A3  E61F    					AND		00011111B
  32: 9134+7	97A5  12      					LD		(DE),A
  33: 9141+10	97A6  C9      					RET
  34:     -	97A7          	isMoveValid:
  35: 9151+7	97A7  FE57    					CP		'W'
  36: 9158+7+5	97A9  280A    					JR		Z,moveUValid
  37: 9165+7	97AB  FE41    					CP		'A'
  38: 9172+7+5	97AD  280C    					JR		Z,moveLValid
  39: 9179+7	97AF  FE53    					CP		'S'
  40: 9186+7+5	97B1  2805    					JR		Z,moveDValid
  41: 9193+12	97B3  1809    					JR		moveRValid
  42:     -	97B5          	moveUValid:			
  43: 9205+8	97B5  CB42    					BIT		upBit,D
  44: 9213+10	97B7  C9      					RET
  45:     -	97B8          	moveDValid:			
  46: 9223+8	97B8  CB4A    					BIT		downBit,D
  47: 9231+10	97BA  C9      					RET
  48:     -	97BB          	moveLValid:			
  49: 9241+8	97BB  CB52    					BIT		leftBit,D
  50: 9249+10	97BD  C9      					RET
  51:     -	97BE          	moveRValid:			
  52: 9259+8	97BE  CB5A    					BIT		rightBit,D
**** main.asm ****
  77: 9267+10	97C0  C9      					RET
  78:				include	mapLibs.asm	
**** mapLibs.asm ****
   1:     -	0030          	pathFindDepth   .EQU	30H
   2:				
   3:				;-------- Map -------;
   4:				;InitiMap
   5:     -	97C1          	initMap:
   6: 9277+10	97C1  010004  					LD		BC,400H
   7: 9287+10	97C4  2113A5  					LD		HL,map
   8: 9297+10	97C7  1100E0  					LD		DE,liveMap
   9: 9307+16+5	97CA  EDB0    					LDIR
  10: 9323+10	97CC  C9      					RET
  11:				
  12:				;------- Get Map Data ----;
  13:				; C - X
  14:				; B	- Y
  15:     -	97CD          	getMapAddress:
  16: 9333+11	97CD  C5      					push	bc
  17: 9344+8	97CE  CB00    					rlc		b			;Shift b left 5
  18: 9352+8	97D0  CB00    					rlc		b			;Shift b left 5
  19: 9360+8	97D2  CB00    					rlc		b			;Shift b left 5
  20: 9368+8	97D4  CB00    					rlc		b			;Shift b left 5
  21: 9376+8	97D6  CB00    					rlc		b			;Shift b left 5
  22: 9384+4	97D8  78      					ld		a,b
  23: 9388+7	97D9  E6E0    					and		11100000b	;Mask lower adress
  24: 9395+4	97DB  B1      					or		c			;Combine with C
  25: 9399+4	97DC  6F      					ld		l,a			;A is now low byte of adress
  26: 9403+4	97DD  78      					ld		a,b
  27: 9407+7	97DE  E603    					and		00000011b	;Mask upper adress
  28: 9414+7	97E0  F6E0    					or		0E0H		;Start of map
  29: 9421+4	97E2  67      					ld		h,a
  30: 9425+10	97E3  C1      					pop		bc
  31: 9435+10	97E4  C9      					ret
  32:				
  33:				;--------Check map for pellets ------;
  34:     -	97E5          	checkNextLevel:
  35: 9445+17	97E5  CD0498  					CALL	checkMap
  36: 9462+4	97E8  7B      					LD		A,E
  37: 9466+4	97E9  B7      					OR		A
  38: 9470+5+6	97EA  C0      					RET		NZ
  39: 9475+4	97EB  7A      					LD		A,D
  40: 9479+4	97EC  B7      					OR		A
  41: 9483+5+6	97ED  C0      					RET		NZ
  42:				
  43: 9488+17	97EE  CDCE99  					CALL	countdown
  44: 9505+17	97F1  CDC197  					CALL	initMap
  45: 9522+17	97F4  CDCD91  					CALL	initGhost
  46: 9539+17	97F7  CDAC90  					CALL	resetPacman
  47: 9556+10	97FA  21F9A0  					LD		HL, home		;Go home
  48: 9566+17	97FD  CD74A0  					CALL	print
  49: 9583+17	9800  CD5398  					CALL 	printMap
  50: 9600+10	9803  C9      					ret
  51:				
  52:     -	9804          	checkMap:
  53: 9610+7	9804  3E20    					ld		a,32
  54: 9617+4	9806  47      					ld		b,a			; 32 chars per line
  55: 9621+4	9807  4F      					ld		c,a			; 32 lines per map
  56: 9625+10	9808  2100E0  					ld		hl,liveMap
  57: 9635+10	980B  110000  					ld		de,0
  58: 9645+7	980E  7E      	checkMapLoop:	ld		a,(hl)		; get char
  59: 9652+17	980F  CD1F98  					call	checkMapChar; check the char
  60: 9669+6	9812  23      					inc		hl			; next char
  61: 9675+8+5	9813  10F9    					djnz	checkMapLoop; if were not at the end of a line, print next char
  62: 9683+4	9815  41      					ld		b,c			;are we at the end of a block
  63: 9687+8+5	9816  1001    					djnz	checkMapNextLine
  64: 9695+10	9818  C9      					ret
  65:     -	9819          	checkMapNextLine:	
  66: 9705+4	9819  48      					ld		c,b			;copy decremented b back to c
  67: 9709+7	981A  3E20    					ld 		a,32		;refill b withj 32
  68: 9716+4	981C  47      					ld		b,a
  69: 9720+12	981D  18EF    					jr		checkMapLoop;draw next char
  70:				
  71:     -	981F          	checkMapChar:
  72: 9732+8	981F  CB6F    					bit		pelletBit,a
  73: 9740+10+7	9821  C42A98  					CALL	NZ,incrementDE
  74: 9750+8	9824  CB67    					bit		powerpBit,a
  75: 9758+10+7	9826  C42A98  					CALL	NZ,incrementDE
  76: 9768+10	9829  C9      					RET
  77:     -	982A          	incrementDE:
  78: 9778+6	982A  13      					INC		DE
  79: 9784+10	982B  C9      					RET
  80:				
  81:				;------- Get Path Find Map Address----;
  82:				; C - X
  83:				; B	- Y
  84:     -	982C          	getAddressPF:
  85: 9794+11	982C  C5      					push	bc
  86: 9805+8	982D  CB00    					rlc		b			;Shift b left 5
  87: 9813+8	982F  CB00    					rlc		b			;Shift b left 5
  88: 9821+8	9831  CB00    					rlc		b			;Shift b left 5
  89: 9829+8	9833  CB00    					rlc		b			;Shift b left 5
  90: 9837+8	9835  CB00    					rlc		b			;Shift b left 5
  91: 9845+4	9837  78      					ld		a,b
  92: 9849+7	9838  E6E0    					and		11100000b	;Mask lower adress
  93: 9856+4	983A  B1      					or		c			;Combine with C
  94: 9860+4	983B  6F      					ld		l,a			;A is now low byte of adress
  95: 9864+4	983C  78      					ld		a,b
  96: 9868+7	983D  E603    					and		00000011b	;Mask upper adress
  97: 9875+7	983F  F6D0    					or		0D0H		;Start of map
  98: 9882+4	9841  67      					ld		h,a
  99: 9886+10	9842  C1      					pop		bc
 100: 9896+10	9843  C9      					ret
 101:				
 102:				
 103:				;--------- Map print -------- ;
 104:				; C - X
 105:				; B	- Y
 106:     -	9844          	printMapAt:	
 107: 9906+11	9844  C5      				PUSH	BC
 108: 9917+4	9845  0C      				INC		C
 109: 9921+4	9846  04      				INC		B
 110: 9925+17	9847  CDFE9F  				CALL	moveCursor
 111: 9942+10	984A  C1      				POP 	BC
 112: 9952+17	984B  CDCD97  				CALL	getMapAddress
 113: 9969+7	984E  7E      				LD		A,(HL)
 114: 9976+17	984F  CD6E98  				CALL	pmChar
 115: 9993+10	9852  C9      				RET
 116:				
 117:     -	9853          	printMap:
 118:10003+7	9853  3E20    					ld		a,32
 119:10010+4	9855  47      					ld		b,a			; 32 chars per line
 120:10014+4	9856  4F      					ld		c,a			; 32 lines per map
 121:10018+10	9857  2100E0  					ld		hl,liveMap
 122:10028+7	985A  7E      	pmLoop:			ld		a,(hl)		; get char
 123:10035+17	985B  CD6E98  					call	pmChar		; decode what to print
 124:10052+6	985E  23      					inc		hl			; next char
 125:10058+8+5	985F  10F9    					djnz	pmLoop		; if were not at the end of a line, print next char
 126:10066+17	9861  CDF59F  					call	newline		; if we are, print a new line
 127:10083+4	9864  41      					ld		b,c			;are we at the end of a block
 128:10087+8+5	9865  1001    					djnz	pmNextLine
 129:10095+10	9867  C9      					ret
 130:     -	9868          	pmNextLine:	
 131:10105+4	9868  48      					ld		c,b			;copy decremented b back to c
 132:10109+7	9869  3E20    					ld 		a,32		;refill b withj 32
 133:10116+4	986B  47      					ld		b,a
 134:10120+12	986C  18EC    					jr		pmLoop		;draw next char
 135:				
 136:				
 137:     -	986E          	pmChar:		;-- Print map char a
 138:10132+11	986E  E5      					push	hl
 139:10143+8	986F  CB67    					bit		powerpBit,a
 140:10151+7+5	9871  200E    					jr		nz,printPP
 141:10158+8	9873  CB6F    					bit		pelletBit,a
 142:10166+7+5	9875  2012    					jr		nz,printP
 143:10173+8	9877  CB77    					bit		wallBit,a
 144:10181+7+5	9879  2016    					jr		nz,printWall
 145:10188+8	987B  CB7F    					bit		sfBit,a
 146:10196+7+5	987D  201A    					jr		nz,printSF
 147:10203+12	987F  1820    					jr	 	printVoid
 148:							
 149:     -	9881          	printPP:
 150:10215+10	9881  21D6A0  					ld		hl,powerPellet
 151:10225+17	9884  CD74A0  					call	print
 152:10242+12	9887  1820    					jr		pmCharRet
 153:     -	9889          	printP:
 154:10254+10	9889  21E1A0  					ld		hl,pellet
 155:10264+17	988C  CD74A0  					call	print
 156:10281+12	988F  1818    					jr		pmCharRet
 157:     -	9891          	printWall:
 158:10293+10	9891  21CBA0  					ld		hl,wall
 159:10303+17	9894  CD74A0  					call	print
 160:10320+12	9897  1810    					jr		pmCharRet
 161:     -	9899          	printSF:
 162:10332+10	9899  21ECA0  					ld		hl,superFruit
 163:10342+17	989C  CD74A0  					call	print
 164:10359+12	989F  1808    					jr		pmCharRet
 165:     -	98A1          	printVoid:
 166:10371+10	98A1  21F7A0  					ld		hl,void
 167:10381+17	98A4  CD74A0  					call	print
 168:10398+12	98A7  1800    					jr		pmCharRet
 169:     -	98A9          	pmCharRet:	
 170:10410+10	98A9  E1      					pop 	hl
 171:10420+10	98AA  C9      					ret
 172:								
 173:				;-------- Path Find Map -------;
 174:				;Initi Path Find Map
 175:     -	98AB          	initPathFind:
 176:10430+7	98AB  3E20    					ld		a,32
 177:10437+4	98AD  47      					ld		b,a			; 32 chars per line
 178:10441+4	98AE  4F      					ld		c,a			; 32 lines per map
 179:10445+10	98AF  2100D0  					ld		hl,pathFindMap
 180:10455+7	98B2  16FF    	initpPFLoop:	ld		D,0FFH		; set char
 181:10462+7	98B4  72      					LD		(HL),D
 182:10469+6	98B5  23      					inc		hl			; next char
 183:10475+8+5	98B6  10FA    					djnz	initpPFLoop		; if were not at the end of a line, print next char
 184:10483+4	98B8  41      					ld		b,c			;are we at the end of a block
 185:10487+8+5	98B9  1001    					djnz	pfNextRow
 186:10495+10	98BB  C9      					ret
 187:     -	98BC          	pfNextRow:	
 188:10505+4	98BC  48      					ld		c,b			;copy decremented b back to c
 189:10509+7	98BD  3E20    					ld 		a,32		;refill b withj 32
 190:10516+4	98BF  47      					ld		b,a
 191:10520+10	98C0  C3B298  					jp		initpPFLoop		;draw next char
 192:				
 193:				;Calculate Map
 194:     -	98C3          	calculatePathMap:
 195:10530+10	98C3  01FFFF  					ld		BC,0FFFFH		;Push Stack terminator		
 196:10540+11	98C6  C5      					PUSH	BC
 197:10551+13	98C7  3A0081  					LD		A, (pacx)		;Push X to stack
 198:10564+4	98CA  4F      					LD		C,A
 199:10568+13	98CB  3A0181  					LD		A, (pacy)		;Push Y to stack
 200:10581+4	98CE  47      					LD		B,A
 201:10585+17	98CF  CD2C98  					CALL	getAddressPF
 202:10602+10	98D2  3600    					LD		(HL),00H
 203:10612+11	98D4  C5      					PUSH	BC
 204:     -	98D5          	calculatePathMapLoop:
 205:10623+10	98D5  C1      					POP		BC			;Get node to visit
 206:10633+4	98D6  78      					LD		A,B			;Check Its not FFFF
 207:10637+4	98D7  B7      					OR		A
 208:10641+7	98D8  FEFF    					CP		0FFH
 209:10648+5+6	98DA  C8      					RET		Z			;We only have to check half the byte as its imposable to have a cord more than 20h
 210:10653+20	98DB  ED43F289					LD		(originalBC),BC
 211:10673+17	98DF  CD2C98  					CALL	getAddressPF
 212:10690+7	98E2  7E      					LD		A,(HL)
 213:10697+4	98E3  3C      					INC		A
 214:10701+7	98E4  FE30    	                CP      pathFindDepth
 215:10708+10	98E6  CAD598  					JP 		Z,calculatePathMapLoop	;Skip if wer getting too long
 216:10718+4	98E9  5F      					LD		E,A			;Keep the distance were working with safe
 217:10722+17	98EA  CDCD97  					CALL	getMapAddress
 218:10739+7	98ED  56      					LD		D,(HL)
 219:10746+7	98EE  3E57    					LD		A,	'W'			;check up
 220:10753+17	98F0  CDA797  					CALL	isMoveValid
 221:10770+10+7	98F3  C41199  					CALL	NZ,calculateMapU
 222:10780+7	98F6  3E53    					LD		A,	'S'			;down
 223:10787+17	98F8  CDA797  					CALL	isMoveValid
 224:10804+10+7	98FB  C41D99  					CALL	NZ,calculateMapD
 225:10814+7	98FE  3E41    					LD		A,	'A'			;left
 226:10821+17	9900  CDA797  					CALL	isMoveValid
 227:10838+10+7	9903  C42999  					CALL	NZ,calculateMapL
 228:10848+7	9906  3E44    					LD		A,	'D'			;right
 229:10855+17	9908  CDA797  					CALL	isMoveValid
 230:10872+10+7	990B  C43599  					CALL	NZ,calculateMapR
 231:10882+10	990E  C3D598  					JP		calculatePathMapLoop
 232:								
 233:     -	9911          	calculateMapU:	
 234:10892+20	9911  ED4BF289					LD		BC,(originalBC)			;We want to preserve the OG BC Through this process so it can be used again in sub directions		
 235:10912+4	9915  78      					LD		A, B				;Make modifications to corod
 236:10916+4	9916  3D      					DEC		A
 237:10920+7	9917  E61F    					AND		00011111B			;Mask for looping
 238:10927+4	9919  47      					LD		B,A
 239:10931+10	991A  C34199  					JP		calculateMapCell
 240:     -	991D          	calculateMapD:	
 241:10941+20	991D  ED4BF289					LD		BC,(originalBC)	
 242:10961+4	9921  78      					LD		A, B
 243:10965+4	9922  3C      					INC		A
 244:10969+7	9923  E61F    					AND		00011111B
 245:10976+4	9925  47      					LD		B,A
 246:10980+10	9926  C34199  					JP		calculateMapCell
 247:     -	9929          	calculateMapL:	
 248:10990+20	9929  ED4BF289					LD		BC,(originalBC)
 249:11010+4	992D  79      					LD		A, C
 250:11014+4	992E  3D      					DEC		A
 251:11018+7	992F  E61F    					AND		00011111B
 252:11025+4	9931  4F      					LD		C,A
 253:11029+10	9932  C34199  					JP		calculateMapCell
 254:     -	9935          	calculateMapR:
 255:11039+20	9935  ED4BF289					LD		BC,(originalBC)
 256:11059+4	9939  79      					LD		A, C
 257:11063+4	993A  3C      					INC		A
 258:11067+7	993B  E61F    					AND		00011111B
 259:11074+4	993D  4F      					LD		C,A
 260:11078+10	993E  C34199  					JP		calculateMapCell
 261:				
 262:     -	9941          	calculateMapCell:
 263:11088+17	9941  CD2C98  					CALL	getAddressPF
 264:11105+7	9944  7E      					LD		A,(HL)
 265:				
 266:11112+4	9945  BB      					CP		E			;Compare current data (A) with E (the path were looking at)
 267:11116+5+6	9946  D8      					RET		C			;If carry is set (A < E)(whats there already < our path) then this route is a dud
 268:11121+5+6	9947  C8      					RET		Z			;If its equal we dont want to continue as we alreay have an equally fast route
 269:11126+7	9948  73      					LD		(HL),E
 270:11133+10	9949  E1      					POP		HL			;We need the return adress on the top of the stack
 271:11143+11	994A  C5      					PUSH	BC			;Push Cell so it can be visited
 272:11154+11	994B  E5      					PUSH	HL
 273:11165+10	994C  C9      					RET
 274:				
 275:     -	994D          	printPFMap:
 276:11175+7	994D  0E01    	                LD		C, $01
 277:11182+7	994F  061A    					LD		B, $1A
 278:11189+17	9951  CDFE9F  					CALL	moveCursor
 279:11206+7	9954  3E20    					ld		a,32
 280:11213+4	9956  47      					ld		b,a			; 32 chars per line
 281:11217+7	9957  3E1A    	                ld		a,$1A
 282:11224+4	9959  4F      					ld		c,a			; 32 lines per map
 283:11228+10	995A  2100D0  					ld		hl,pathFindMap
 284:11238+7	995D  7E      	pmPFLoop:		ld		a,(hl)		; get char
 285:11245+7	995E  FEFF    	                cp      0FFH
 286:11252+10	9960  CA7999  	                JP      Z,pmPFSkip
 287:11262+17	9963  CD44A0  					call	NumToHex	; decode what to print
 288:11279+7	9966  3E20    	pmPFAfterSkip:  ld      a,' '
 289:11286+11	9968  CF      	                rst     08H
 290:11297+6	9969  23      					inc		hl			; next char
 291:11303+8+5	996A  10F1    					djnz	pmPFLoop		; if were not at the end of a line, print next char
 292:11311+17	996C  CDF59F  					call	newline		; if we are, print a new line
 293:11328+4	996F  41      					ld		b,c			;are we at the end of a block
 294:11332+8+5	9970  1001    					djnz	pmPFNextLine
 295:11340+10	9972  C9      					ret
 296:     -	9973          	pmPFNextLine:	
 297:11350+4	9973  48      					ld		c,b			;copy decremented b back to c
 298:11354+7	9974  3E20    					ld 		a,32		;refill b withj 32
 299:11361+4	9976  47      					ld		b,a
 300:11365+12	9977  18E4    					jr		pmPFLoop	;draw next char
 301:     -	9979          	pmPFSkip:       
 302:11377+7	9979  3E20    	                ld      a,' '
 303:11384+11	997B  CF      	                rst     08H
 304:11395+7	997C  3E20    	                ld      a,' '
 305:11402+11	997E  CF      	                rst     08H
**** main.asm ****
  79:11413+10	997F  C36699  	                JP      pmPFAfterSkip
  80:				
  81:				;------HUD;
  82:				include hud.asm
**** hud.asm ****
   1:     -	8900          	score			.EQU	8900H		;Score
   2:				
   3:     -	9982          	printHud:
   4:11423+17	9982  CD8999  					CALL	printScore
   5:11440+17	9985  CDA399  					CALL	printLives
   6:11457+10	9988  C9      					RET
   7:				;Hud elements
   8:     -	9989          	printScore:					
   9:11467+7	9989  0E02    					LD		C, $02
  10:11474+7	998B  0623    					LD		B, $23
  11:11481+17	998D  CDFE9F  					CALL	moveCursor
  12:11498+10	9990  21C299  					LD		HL, scoreHUD
  13:11508+17	9993  CD74A0  					CALL 	print
  14:11525+16	9996  2A0089  					LD		HL, (score)
  15:11541+17	9999  CD19A0  					CALL	HLToDec
  16:11558+7	999C  3E0A    					LD		A,LF
  17:11565+11	999E  CF      					RST     08H
  18:11576+7	999F  3E0D    					LD		A,CR
  19:11583+11	99A1  CF      					RST     08H
  20:11594+10	99A2  C9      					RET
  21:				
  22:     -	99A3          	printLives:					
  23:11604+7	99A3  0E02    					LD		C, $02
  24:11611+7	99A5  0624    					LD		B, $24
  25:11618+17	99A7  CDFE9F  					CALL	moveCursor
  26:11635+13	99AA  3A0581  					LD 		A,(pacLives)
  27:11648+4	99AD  3D      					DEC		A
  28:11652+4	99AE  B7      					OR		A
  29:11656+10	99AF  CABB99  					JP		Z,removeOldLives
  30:11666+4	99B2  47      					LD		B,A
  31:11670+10	99B3  218E91  	printLivesLoop:	LD		HL, pacman
  32:11680+17	99B6  CD74A0  					CALL 	print
  33:11697+8+5	99B9  10F8    					DJNZ	printLivesLoop
  34:11705+10	99BB  21CA99  	removeOldLives:	LD		HL, liveBlanking
  35:11715+17	99BE  CD74A0  					CALL 	print
  36:11732+10	99C1  C9      					RET
  37:				
  38:     -	99C2  53636F72	scoreHUD:     	.BYTE "Score: ",0
	              653A2000
**** main.asm ****
  83:     -	99CA  20202000	liveBlanking	.BYTE "   ",0
  84:				
  85:				include countdown.asm
**** countdown.asm ****
   1:     -	99CE          	countdown:
   2:11742+10	99CE  010503  	            LD      BC ,0305H
   3:11752+10	99D1  111218  				LD		DE ,1812H 
   4:11762+17	99D4  CD8FA0  				CALL	DrawBox
   5:11779+10	99D7  010704  	            LD      BC ,0407H
   6:11789+10	99DA  21E09C  	            LD      HL,number3
   7:11799+17	99DD  CD7FA0  	            CALL    printAtPos
   8:11816+10	99E0  01FFFF  	            LD      BC, 0FFFFH
   9:11826+17	99E3  CDC2A0  	            CALL    delay
  10:11843+17	99E6  CDC2A0  	            CALL    delay
  11:11860+17	99E9  CDC2A0  	            CALL    delay
  12:11877+17	99EC  CDC2A0  	            CALL    delay
  13:11894+10	99EF  010704  	            LD      BC ,0407H
  14:11904+10	99F2  21809B  	            LD      HL,number2
  15:11914+17	99F5  CD7FA0  	            CALL    printAtPos
  16:11931+10	99F8  01FFFF  	            LD      BC, 0FFFFH
  17:11941+17	99FB  CDC2A0  	            CALL    delay
  18:11958+17	99FE  CDC2A0  	            CALL    delay
  19:11975+17	9A01  CDC2A0  	            CALL    delay
  20:11992+17	9A04  CDC2A0  	            CALL    delay
  21:12009+10	9A07  21209A  	            LD      HL,number1
  22:12019+10	9A0A  010704  	            LD      BC ,0407H
  23:12029+17	9A0D  CD7FA0  	            CALL    printAtPos
  24:12046+10	9A10  01FFFF  	            LD      BC, 0FFFFH
  25:12056+17	9A13  CDC2A0  	            CALL    delay
  26:12073+17	9A16  CDC2A0  	            CALL    delay
  27:12090+17	9A19  CDC2A0  	            CALL    delay
  28:12107+17	9A1C  CDC2A0  	            CALL    delay
  29:12124+10	9A1F  C9      	            RET
  30:				
  31:				;Font 'doh'
  32:     -	9A20  20202020	number1:            .BYTE   "      1111111       ",0,1
	              20203131
	              31313131
	              31202020
	              20202020
	              0001
  33:     -	9A36  20202020	                    .BYTE   "     1::::::1       ",0,1
	              20313A3A
	              3A3A3A3A
	              31202020
	              20202020
	              0001
  34:     -	9A4C  20202020	                    .BYTE   "    1:::::::1       ",0,1
	              313A3A3A
	              3A3A3A3A
	              31202020
	              20202020
	              0001
  35:     -	9A62  20202020	                    .BYTE   "    111:::::1       ",0,1
	              3131313A
	              3A3A3A3A
	              31202020
	              20202020
	              0001
  36:     -	9A78  20202020	                    .BYTE   "       1::::1       ",0,1
	              20202031
	              3A3A3A3A
	              31202020
	              20202020
	              0001
  37:     -	9A8E  20202020	                    .BYTE   "       1::::1       ",0,1
	              20202031
	              3A3A3A3A
	              31202020
	              20202020
	              0001
  38:     -	9AA4  20202020	                    .BYTE   "       1::::1       ",0,1
	              20202031
	              3A3A3A3A
	              31202020
	              20202020
	              0001
  39:     -	9ABA  20202020	                    .BYTE   "       1::::l       ",0,1
	              20202031
	              3A3A3A3A
	              6C202020
	              20202020
	              0001
  40:     -	9AD0  20202020	                    .BYTE   "       1::::l       ",0,1
	              20202031
	              3A3A3A3A
	              6C202020
	              20202020
	              0001
  41:     -	9AE6  20202020	                    .BYTE   "       1::::l       ",0,1
	              20202031
	              3A3A3A3A
	              6C202020
	              20202020
	              0001
  42:     -	9AFC  20202020	                    .BYTE   "       1::::l       ",0,1
	              20202031
	              3A3A3A3A
	              6C202020
	              20202020
	              0001
  43:     -	9B12  20202020	                    .BYTE   "       1::::l       ",0,1
	              20202031
	              3A3A3A3A
	              6C202020
	              20202020
	              0001
  44:     -	9B28  20202020	                    .BYTE   "    111::::::111    ",0,1
	              3131313A
	              3A3A3A3A
	              3A313131
	              20202020
	              0001
  45:     -	9B3E  20202020	                    .BYTE   "    1::::::::::1    ",0,1
	              313A3A3A
	              3A3A3A3A
	              3A3A3A31
	              20202020
	              0001
  46:     -	9B54  20202020	                    .BYTE   "    1::::::::::1    ",0,1
	              313A3A3A
	              3A3A3A3A
	              3A3A3A31
	              20202020
	              0001
  47:     -	9B6A  20202020	                    .BYTE   "    111111111111    ",0,0
	              31313131
	              31313131
	              31313131
	              20202020
	              0000
  48:				
  49:     -	9B80  20323232	number2:            .BYTE   " 222222222222222    ",0,1
	              32323232
	              32323232
	              32323232
	              20202020
	              0001
  50:     -	9B96  323A3A3A	                    .BYTE   "2:::::::::::::::22  ",0,1
	              3A3A3A3A
	              3A3A3A3A
	              3A3A3A3A
	              32322020
	              0001
  51:     -	9BAC  323A3A3A	                    .BYTE   "2::::::222222:::::2 ",0,1
	              3A3A3A32
	              32323232
	              323A3A3A
	              3A3A3220
	              0001
  52:     -	9BC2  32323232	                    .BYTE   "2222222     2:::::2 ",0,1
	              32323220
	              20202020
	              323A3A3A
	              3A3A3220
	              0001
  53:     -	9BD8  20202020	                    .BYTE   "            2:::::2 ",0,1
	              20202020
	              20202020
	              323A3A3A
	              3A3A3220
	              0001
  54:     -	9BEE  20202020	                    .BYTE   "            2:::::2 ",0,1
	              20202020
	              20202020
	              323A3A3A
	              3A3A3220
	              0001
  55:     -	9C04  20202020	                    .BYTE   "         2222::::2  ",0,1
	              20202020
	              20323232
	              323A3A3A
	              3A322020
	              0001
  56:     -	9C1A  20202020	                    .BYTE   "    22222::::::22   ",0,1
	              32323232
	              323A3A3A
	              3A3A3A32
	              32202020
	              0001
  57:     -	9C30  20203232	                    .BYTE   "  22::::::::222     ",0,1
	              3A3A3A3A
	              3A3A3A3A
	              32323220
	              20202020
	              0001
  58:     -	9C46  20323A3A	                    .BYTE   " 2:::::22222        ",0,1
	              3A3A3A32
	              32323232
	              20202020
	              20202020
	              0001
  59:     -	9C5C  323A3A3A	                    .BYTE   "2:::::2             ",0,1
	              3A3A3220
	              20202020
	              20202020
	              20202020
	              0001
  60:     -	9C72  323A3A3A	                    .BYTE   "2:::::2             ",0,1
	              3A3A3220
	              20202020
	              20202020
	              20202020
	              0001
  61:     -	9C88  323A3A3A	                    .BYTE   "2:::::2       222222",0,1
	              3A3A3220
	              20202020
	              20203232
	              32323232
	              0001
  62:     -	9C9E  323A3A3A	                    .BYTE   "2::::::2222222:::::2",0,1
	              3A3A3A32
	              32323232
	              32323A3A
	              3A3A3A32
	              0001
  63:     -	9CB4  323A3A3A	                    .BYTE   "2::::::::::::::::::2",0,1
	              3A3A3A3A
	              3A3A3A3A
	              3A3A3A3A
	              3A3A3A32
	              0001
  64:     -	9CCA  32323232	                    .BYTE   "22222222222222222222",0,0
	              32323232
	              32323232
	              32323232
	              32323232
	              0000
  65:				
  66:     -	9CE0  20203333	number3:            .BYTE   "  333333333333333   ",0,1
	              33333333
	              33333333
	              33333333
	              33202020
	              0001
  67:     -	9CF6  20333A3A	                    .BYTE   " 3:::::::::::::::33 ",0,1
	              3A3A3A3A
	              3A3A3A3A
	              3A3A3A3A
	              3A333320
	              0001
  68:     -	9D0C  20333A3A	                    .BYTE   " 3::::::33333::::::3",0,1
	              3A3A3A3A
	              33333333
	              333A3A3A
	              3A3A3A33
	              0001
  69:     -	9D22  20333333	                    .BYTE   " 3333333     3:::::3",0,1
	              33333333
	              20202020
	              20333A3A
	              3A3A3A33
	              0001
  70:     -	9D38  20202020	                    .BYTE   "             3:::::3",0,1
	              20202020
	              20202020
	              20333A3A
	              3A3A3A33
	              0001
  71:     -	9D4E  20202020	                    .BYTE   "             3:::::3",0,1
	              20202020
	              20202020
	              20333A3A
	              3A3A3A33
	              0001
  72:     -	9D64  20202020	                    .BYTE   "     33333333:::::3 ",0,1
	              20333333
	              33333333
	              333A3A3A
	              3A3A3320
	              0001
  73:     -	9D7A  20202020	                    .BYTE   "     3:::::::::::3  ",0,1
	              20333A3A
	              3A3A3A3A
	              3A3A3A3A
	              3A332020
	              0001
  74:     -	9D90  20202020	                    .BYTE   "     33333333:::::3 ",0,1
	              20333333
	              33333333
	              333A3A3A
	              3A3A3320
	              0001
  75:     -	9DA6  20202020	                    .BYTE   "             3:::::3",0,1
	              20202020
	              20202020
	              20333A3A
	              3A3A3A33
	              0001
  76:     -	9DBC  20202020	                    .BYTE   "             3:::::3",0,1
	              20202020
	              20202020
	              20333A3A
	              3A3A3A33
	              0001
  77:     -	9DD2  20202020	                    .BYTE   "             3:::::3",0,1
	              20202020
	              20202020
	              20333A3A
	              3A3A3A33
	              0001
  78:     -	9DE8  20333333	                    .BYTE   " 3333333     3:::::3",0,1
	              33333333
	              20202020
	              20333A3A
	              3A3A3A33
	              0001
  79:     -	9DFE  20333A3A	                    .BYTE   " 3::::::33333::::::3",0,1
	              3A3A3A3A
	              33333333
	              333A3A3A
	              3A3A3A33
	              0001
  80:     -	9E14  20333A3A	                    .BYTE   " 3:::::::::::::::33 ",0,1
	              3A3A3A3A
	              3A3A3A3A
	              3A3A3A3A
	              3A333320
	              0001
**** main.asm ****
  86:     -	9E2A  20203333	                    .BYTE   "  333333333333333   ",0,0
	              33333333
	              33333333
	              33333333
	              33202020
	              0000
  87:				include titlescreen.asm
**** titlescreen.asm ****
   1:     -	9E40          	displayTitleScreen:
   2:12134+10	9E40  010603  	                LD      BC ,0306H
   3:12144+10	9E43  111416  				    LD		DE ,1614H 
   4:12154+17	9E46  CD8FA0  				    CALL	DrawBox
   5:12171+10	9E49  010804  	                LD      BC ,0408H
   6:12181+10	9E4C  21849E  	                LD      HL,logo
   7:12191+17	9E4F  CD7FA0  	                CALL    printAtPos
   8:12208+10	9E52  010809  	                LD      BC ,0908H
   9:12218+10	9E55  21149F  	                LD      HL,info
  10:12228+17	9E58  CD7FA0  	                CALL    printAtPos
  11:12245+10	9E5B  01080D  	                LD      BC ,0D08H
  12:12255+10	9E5E  21289F  	                LD      HL,message
  13:12265+17	9E61  CD7FA0  	                CALL    printAtPos
  14:12282+10	9E64  010A0F  	                LD      BC ,0F0AH
  15:12292+10	9E67  213C9F  	                LD      HL,startGameMessage
  16:12302+17	9E6A  CD7FA0  	                CALL    printAtPos
  17:12319+10	9E6D  010810  	                LD      BC ,1008H
  18:12329+10	9E70  214C9F  	                LD      HL,exitMessage
  19:12339+17	9E73  CD7FA0  	                CALL    printAtPos
  20:     -	9E76          	titleScreenWaitForInput:
  21:12356+11	9E76  D7      	                RST		10H
  22:12367+7	9E77  FE31    	                CP      '1'
  23:12374+10	9E79  CA1C90  	                JP      Z,startGame
  24:12384+7	9E7C  FE32    	                CP      '2'
  25:12391+10	9E7E  CA7C90  	                JP      Z,quit                     
  26:12401+10	9E81  C3769E  	                JP      titleScreenWaitForInput
  27:				
  28:				;font graceful
  29:     -	9E84          	logo:
  30:     -	9E84  1B5B3931	                    .BYTE   1BH,"[91m ____ ",1BH,"[96m _  _   ",1BH,"[33m___ ",0,1
	              6D205F5F
	              5F5F201B
	              5B39366D
	              205F2020
	              5F202020
	              1B5B3333
	              6D5F5F5F
	              200001
  31:     -	9EA7  1B5B3931	                    .BYTE   1BH,"[91m(  _ \",1BH,"[96m/ )( \ ",1BH,"[33m/ __)",0,1
	              6D282020
	              5F205C1B
	              5B39366D
	              2F202928
	              205C201B
	              5B33336D
	              2F205F5F
	              290001
  32:     -	9ECA  1B5B3931	                    .BYTE   1BH,"[91m ) __/",1BH,"[96m) \/ (",1BH,"[33m( (__ ",0,1
	              6D202920
	              5F5F2F1B
	              5B39366D
	              29205C2F
	              20281B5B
	              33336D28
	              20285F5F
	              200001
  33:     -	9EED  1B5B3931	                    .BYTE   1BH,"[91m(__)  ",1BH,"[96m\____/ ",1BH,"[33m\___)", 1BH,"[0m",0,0
	              6D285F5F
	              2920201B
	              5B39366D
	              5C5F5F5F
	              5F2F201B
	              5B33336D
	              5C5F5F5F
	              291B5B30
	              6D0000
  34:				
  35:     -	9F14  6279204A	info:               .BYTE  "by James Bray 2020",0,0
	              616D6573
	              20427261
	              79203230
	              32300000
  36:				
  37:     -	9F28  50726573	message:           .BYTE   "Press key to start",0,0
	              73206B65
	              7920746F
	              20737461
	              72740000
  38:     -	9F3C  28312920	startGameMessage:  .BYTE   "(1) Start Game",0,0
	              53746172
	              74204761
	              6D650000
**** main.asm ****
  88:     -	9F4C  28322920	exitMessage:       .BYTE   "(2) Exit to Prompt",0,0
	              45786974
	              20746F20
	              50726F6D
	              70740000
  89:				include gameOver.asm
**** gameOver.asm ****
   1:     -	9F60          	displayGameOver:
   2:12411+10	9F60  010406  	                LD      BC ,0604H
   3:12421+10	9F63  110A1A  				    LD		DE ,1A0AH 
   4:12431+17	9F66  CD8FA0  				    CALL	DrawBox
   5:12448+10	9F69  010507  	                LD      BC ,0705H
   6:12458+10	9F6C  21849F  	                LD      HL,deathMessage1
   7:12468+17	9F6F  CD7FA0  	                CALL    printAtPos
   8:12485+10	9F72  01050D  	                LD      BC ,0D05H
   9:12495+10	9F75  21DB9F  	                LD      HL,deathMessage2
  10:12505+17	9F78  CD7FA0  	                CALL    printAtPos
  11:     -	9F7B          	gameOverwaitForInput:
  12:12522+11	9F7B  D7      	                RST		10H
  13:12533+7	9F7C  FE20    	                CP      ' '
  14:12540+10	9F7E  CA0790  	                JP      Z,gameTop                    
  15:12550+10	9F81  C37B9F  	                JP      gameOverwaitForInput
  16:				
  17:     -	9F84          	deathMessage1:
  18:     -	9F84  1B5B3931	                    .BYTE    1BH,"[91m __          _          ",0,1
	              6D205F5F
	              20202020
	              20202020
	              20205F20
	              20202020
	              20202020
	              200001
  19:     -	9FA3  2F5F5F20	                    .BYTE            "/__ _ __  _ / \    _  __",0,1
	              5F205F5F
	              20205F20
	              2F205C20
	              2020205F
	              20205F5F
	              0001
  20:     -	9FBD  5C5F7C28	                    .BYTE            "\_|(_||||(/_\_/\_/(/_ | ",1BH,"[0m",0,0
	              5F7C7C7C
	              7C282F5F
	              5C5F2F5C
	              5F2F282F
	              5F207C20
	              1B5B306D
	              0000
  21:				
**** main.asm ****
  90:     -	9FDB  50726573	deathMessage2:      .BYTE    "Press Space to continue!",0,0
	              73205370
	              61636520
	              746F2063
	              6F6E7469
	              6E756521
	              0000
  91:				
  92:				;------- Libs ------------;
  93:				include libs.asm
**** libs.asm ****
   1:     -	8888          	seed			.EQU	8888H		;Random seed
   2:				
   3:     -	9FF5          	newline:			
   4:12560+11	9FF5  F5      					push 	af
   5:12571+7	9FF6  3E0D    					ld		a, CR
   6:12578+11	9FF8  CF      					rst 	08H
   7:12589+7	9FF9  3E0A    					ld		a, LF
   8:12596+11	9FFB  CF      					rst 	08H
   9:12607+10	9FFC  F1      					pop 	af
  10:12617+10	9FFD  C9      					ret
  11:							
  12:				;move cursor to (C,B)				
  13:     -	9FFE          	moveCursor:		
  14:12627+11	9FFE  E5      					PUSH	HL
  15:12638+7	9FFF  3E1B    					LD		A,$1B
  16:12645+11	A001  CF      					RST     08H
  17:12656+7	A002  3E5B    					LD		A,'['
  18:12663+11	A004  CF      					RST     08H
  19:12674+4	A005  68      					LD		L,B
  20:12678+7	A006  2600    					LD		H,0
  21:12685+17	A008  CD19A0  					CALL	HLToDec
  22:12702+7	A00B  3E3B    					LD		A,$3B
  23:12709+11	A00D  CF      					RST     08H
  24:12720+4	A00E  69      					LD		L,C
  25:12724+7	A00F  2600    					LD		H,0
  26:12731+17	A011  CD19A0  					CALL	HLToDec
  27:12748+7	A014  3E66    					LD		A,'f'
  28:12755+11	A016  CF      					RST     08H
  29:12766+10	A017  E1      					POP		HL
  30:12776+10	A018  C9      					RET
  31:				
  32:				;Prints	hl as decimal			
  33:     -	A019          	HLToDec:
  34:12786+11	A019  F5      					PUSH	AF
  35:12797+11	A01A  C5      					PUSH	BC
  36:12808+17	A01B  CD21A0  					CALL	DispHL
  37:12825+10	A01E  C1      					POP		BC
  38:12835+10	A01F  F1      					POP		AF
  39:12845+10	A020  C9      					RET
  40:     -	A021          	DispHL:
  41:12855+10	A021  01F0D8  					ld		bc,-10000
  42:12865+17	A024  CD3AA0  					call	Num1
  43:12882+10	A027  0118FC  					ld		bc,-1000
  44:12892+17	A02A  CD3AA0  					call	Num1
  45:12909+10	A02D  019CFF  					ld		bc,-100
  46:12919+17	A030  CD3AA0  					call	Num1
  47:12936+7	A033  0EF6    					ld		c,-10
  48:12943+17	A035  CD3AA0  					call	Num1
  49:12960+7	A038  0EFF    					ld		c,-1
  50:12967+7	A03A  3E2F    	Num1:			ld		a,'0'-1
  51:12974+4	A03C  3C      	Num2:			inc		a
  52:12978+11	A03D  09      					add		hl,bc
  53:12989+7+5	A03E  38FC    					jr		c,Num2
  54:12996+15	A040  ED42    					sbc		hl,bc
  55:13011+11	A042  CF      					RST     08H
  56:13022+10	A043  C9      					ret
  57:				;Print A as HEX				
  58:     -	A044          	NumToHex:    	
  59:13032+11	A044  C5      					push	bc
  60:13043+11	A045  F5      	                push    af
  61:13054+4	A046  4F      					ld 		c, a   		; a = number to convert
  62:13058+17	A047  CD53A0  	            	call 	Num1H
  63:13075+11	A04A  CF      	            	RST     08H
  64:13086+4	A04B  79      	            	ld 		a, c
  65:13090+17	A04C  CD57A0  	            	call 	Num2H
  66:13107+11	A04F  CF      	            	RST     08H
  67:13118+10	A050  F1      	                pop     af
  68:13128+10	A051  C1      					pop		bc
  69:13138+10	A052  C9      	            	ret
  70:				
  71:13148+4	A053  1F      	Num1H:        	rra
  72:13152+4	A054  1F      	            	rra
  73:13156+4	A055  1F      	            	rra
  74:13160+4	A056  1F      	           		rra
  75:13164+7	A057  F6F0    	Num2H:        	or 		$F0
  76:13171+4	A059  27      	            	daa
  77:13175+7	A05A  C6A0    	            	add 	a, $A0
  78:13182+7	A05C  CE40    	            	adc 	a, $40 		; Ascii hex at this point (0 to F)   
  79:13189+10	A05E  C9      	            	ret
  80:				
  81:				;Get ABS of A
  82:     -	A05F          	absA:
  83:13199+4	A05F  B7      	     or a
  84:13203+5+6	A060  F0      	     ret p
  85:13208+8	A061  ED44    	     neg
  86:13216+10	A063  C9      	     ret
  87:				
  88:				;getArAndomA	 
  89:     -	A064          	randomA:				
  90:13226+13	A064  3A8888  					ld a, 	(seed)
  91:13239+4	A067  47      					ld b, 	a 
  92:				
  93:13243+4	A068  0F      					rrca ; multiply by 32
  94:13247+4	A069  0F      					rrca
  95:13251+4	A06A  0F      					rrca
  96:13255+7	A06B  EE1F    					xor $1f
  97:				
  98:13262+4	A06D  80      					add 	a, b
  99:13266+7	A06E  DEFF    					sbc a, 255 ; carry
 100:				
 101:13273+13	A070  328888  					ld (seed), a
 102:13286+10	A073  C9      					ret
 103:				
 104:				;------- Print string
 105:13296+11	A074  F5      	print:			PUSH 	AF				; Preserve AF				
 106:13307+7	A075  7E      	printLoop:      LD      A,(HL)          ; Get character
 107:13314+4	A076  B7      	                OR      A               ; Is it $00 ?
 108:13318+7+5	A077  2804    	                JR     	Z,printRet      ; Then RETurn on terminator
 109:13325+11	A079  CF      	                RST     08H             ; Print it
 110:13336+6	A07A  23      	                INC     HL              ; Next Character
 111:13342+12	A07B  18F8    	                JR      printLoop       ; Continue until $00
 112:				
 113:13354+10	A07D  F1      	printRet:		POP		AF
 114:13364+10	A07E  C9      					RET
 115:				
 116:				;--------Print textBlockAtPos
 117:				;HL Start of sprite
 118:				;C  Sprite X
 119:				;B  Sprite Y
 120:				
 121:13374+11	A07F  F5      	printAtPos:		PUSH 	AF					; Preserve AF				
 122:13385+17	A080  CDFE9F  	printAtPosLoop: CALL	moveCursor			; Move cursor to start of line
 123:13402+17	A083  CD74A0  					CALL	print				; Print Line
 124:13419+4	A086  04      					INC		B
 125:13423+6	A087  23      					INC		HL
 126:13429+7	A088  7E      					LD      A,(HL)          	; Get character
 127:13436+4	A089  B7      	                OR      A               	; Is it $00 ?
 128:13440+6	A08A  23      					INC		HL
 129:13446+7+5	A08B  20F3    	                JR      NZ,printAtPosLoop   ; Continue until $00		
 130:13453+10	A08D  F1      					POP		AF
 131:13463+10	A08E  C9      					RET
 132:				
 133:				;------------Draw Box
 134:				;C Start X
 135:				;B Start Y
 136:				
 137:				;D Width
 138:				;E Height
 139:     -	A08F          	drawBox:
 140:13473+4	A08F  1D      					DEC		E
 141:13477+4	A090  1D      					DEC		E
 142:13481+17	A091  CDFE9F  					CALL	moveCursor			; Move cursor to start of line
 143:13498+11	A094  C5      					PUSH	BC
 144:13509+4	A095  42      					LD		B,D
 145:13513+7	A096  3E23    	topLineLoop:	LD		A,'#'
 146:13520+11	A098  CF      					RST		08H
 147:13531+8+5	A099  10FB    					DJNZ	topLineLoop			;Print Top line
 148:13539+4	A09B  15      					DEC		D					;Remove padding for left and right bars
 149:13543+4	A09C  15      					DEC		D
 150:13547+4	A09D  43      					LD		B,E
 151:13551+4	A09E  58      	boxBodyLoop:	LD		E,B
 152:13555+10	A09F  C1      					POP		BC
 153:13565+4	A0A0  04      					INC		B
 154:13569+17	A0A1  CDFE9F  					CALL	moveCursor
 155:13586+11	A0A4  C5      					PUSH	BC
 156:13597+7	A0A5  3E23    					LD		A,'#'
 157:13604+11	A0A7  CF      					RST		08H
 158:13615+4	A0A8  42      					LD		B,D
 159:13619+7	A0A9  3E20    	boxContentLoop:	LD		A,' '
 160:13626+11	A0AB  CF      					RST		08H
 161:13637+8+5	A0AC  10FB    					DJNZ	boxContentLoop
 162:13645+7	A0AE  3E23    					LD		A,'#'
 163:13652+11	A0B0  CF      					RST		08H
 164:13663+4	A0B1  43      					LD		B,E
 165:13667+8+5	A0B2  10EA    					DJNZ	boxBodyLoop
 166:13675+10	A0B4  C1      					POP		BC
 167:13685+4	A0B5  04      					INC		B
 168:13689+17	A0B6  CDFE9F  					CALL	moveCursor			; Move cursor to start of line
 169:13706+4	A0B9  14      					INC		D
 170:13710+4	A0BA  14      					INC		D
 171:13714+4	A0BB  42      					LD		B,D
 172:13718+7	A0BC  3E23    	bottomLineLoop:	LD		A,'#'
 173:13725+11	A0BE  CF      					RST		08H
 174:13736+8+5	A0BF  10FB    					DJNZ	bottomLineLoop			;Print Top line
 175:13744+10	A0C1  C9      					RET		
 176:				;--------Delay
 177:     -	A0C2          	delay:
 178:13754+11	A0C2  C5      					PUSH	BC
 179:     -	A0C3          	delayLoop:
 180:13765+4	A0C3  00      					NOP
 181:13769+6	A0C4  0B      					DEC 	BC
 182:13775+4	A0C5  78      					LD 		A,B
 183:13779+4	A0C6  B1      					OR 		C
 184:13783+7+5	A0C7  20FA    					JR 		NZ,delayLoop
 185:13790+10	A0C9  C1      					POP		BC
**** main.asm ****
  94:13800+10	A0CA  C9      					RET
  95:				
  96:				;Strings
  97:     -	A0CB  1B5B3334	wall:			.BYTE	1BH,"[34m#",1BH,"[0m",0
	              6D231B5B
	              306D00
  98:     -	A0D6  1B5B3937	powerPellet:	.BYTE	1BH,"[97mo",1BH,"[0m",0
	              6D6F1B5B
	              306D00
  99:     -	A0E1  1B5B3337	pellet:			.BYTE	1BH,"[37m*",1BH,"[0m",0
	              6D2A1B5B
	              306D00
 100:     -	A0EC  1B5B3331	superFruit:		.BYTE	1BH,"[31m@",1BH,"[0m",0
	              6D401B5B
	              306D00
 101:     -	A0F7  2000    	void:			.BYTE	" ",0
 102:				
 103:     -	A0F9  1B5B4800	home:			.BYTE 1BH,"[H",0
 104:     -	A0FD  1B5B481B	cls:      	  	.BYTE 1BH,"[H",1BH,"[2J",0
	              5B324A00
 105:     -	A105  1B5B3F32	hideCursor:	  	.BYTE	1BH,"[?25l",0
	              356C00
 106:     -	A10C  1B5B3F32	showCursor:	  	.BYTE	1BH,"[?25h",0
	              356800
 107:				
 108:				;----- Map ------
 109:				include map.asm
**** map.asm ****
   1:				;----- Map data bit positions
   2:     -	0000          	upBit			.EQU	0
   3:     -	0001          	downBit			.EQU	1
   4:     -	0002          	leftBit			.EQU	2
   5:     -	0003          	rightBit		.EQU	3
   6:     -	0004          	powerpBit		.EQU	4
   7:     -	0005          	pelletBit		.EQU	5
   8:     -	0006          	wallBit			.EQU	6
   9:     -	0007          	sfBit			.EQU	7
  10:				
  11:				;----Pellet
  12:     -	0040          	ww 		.EQU	40H
  13:				
  14:     -	002C          	hp 		.EQU	2CH		;left 	right	pellet
  15:     -	0023          	gp		.EQU	23H		;up		down	pellet
  16:				
  17:     -	0026          	lp		.EQU	26H		;down 	left 	pellet
  18:     -	002A          	rp		.EQU	2AH		;down 	right	pellet
  19:     -	0025          	up		.EQU	25H		;up 	left	pellet
  20:     -	0029          	dp		.EQU	29H		;up 	right	pellet
  21:				
  22:     -	002B          	bp		.EQU	2BH		;up		down	right	pellet
  23:     -	0027          	cp		.EQU	27H		;up		down	left	pellet
  24:     -	002E          	vp		.EQU	2EH		;down	left	right	pellet
  25:     -	002D          	kp		.EQU	2DH		;up		left	right	pellet
  26:				
  27:     -	002F          	xp		.EQU	2FH		;all	pellet
  28:				;------- No pellet
  29:     -	000C          	hn 		.EQU	0CH		;left 	right	pellet
  30:     -	0003          	gn		.EQU	03H		;up		down	pellet
  31:				
  32:     -	0006          	ln		.EQU	06H		;down 	left 	pellet
  33:     -	000A          	rn		.EQU	0AH		;down 	right	pellet
  34:     -	0005          	un		.EQU	05H		;up 	left	pellet
  35:     -	0009          	dn		.EQU	09H		;up 	right	pellet
  36:				
  37:     -	000B          	bn		.EQU	0BH		;up		down	right	pellet
  38:     -	0007          	cn		.EQU	07H		;up		down	left	pellet
  39:     -	000E          	vn		.EQU	0EH		;down	left	right	pellet
  40:     -	000D          	kn		.EQU	0DH		;up		left	right	pellet
  41:				
  42:     -	000F          	xn		.EQU	0FH		;all	pellet
  43:				;--------Power Pellet
  44:     -	001C          	hs 		.EQU	1CH		;left 	right	pellet
  45:     -	0013          	gs		.EQU	13H		;up		down	pellet
  46:				
  47:     -	0016          	ls		.EQU	16H		;down 	left 	pellet
  48:     -	001A          	rs		.EQU	1AH		;down 	right	pellet
  49:     -	0015          	us		.EQU	15H		;up 	left	pellet
  50:     -	0019          	ds		.EQU	19H		;up 	right	pellet
  51:				
  52:     -	001B          	bs		.EQU	1BH		;up		down	right	pellet
  53:     -	0017          	cs		.EQU	17H		;up		down	left	pellet
  54:     -	001E          	vs		.EQU	1EH		;down	left	right	pellet
  55:     -	001D          	ks		.EQU	1DH		;up		left	right	pellet
  56:				
  57:     -	001F          	xs		.EQU	1FH		;all	pellet
  58:				
  59:     -	A113  00004040	map1:	.BYTE	00,00,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,00,00
	              40404040
	              40404040
	              40404040
	              40404040
	              40404040
	              40404040
	              40400000
  60:     -	A133  0000402A			.BYTE	00,00,ww,rp,hp,hp,hp,hp,vp,hp,hp,hp,hp,hp,lp,ww,ww,rp,hp,hp,hp,hp,hp,vp,hp,hp,hp,hp,lp,ww,00,00
	              2C2C2C2C
	              2E2C2C2C
	              2C2C2640
	              402A2C2C
	              2C2C2C2E
	              2C2C2C2C
	              26400000
  61:     -	A153  00004013			.BYTE	00,00,ww,gs,ww,ww,ww,ww,gp,ww,ww,ww,ww,ww,gp,ww,ww,gp,ww,ww,ww,ww,ww,gp,ww,ww,ww,ww,gs,ww,00,00
	              40404040
	              23404040
	              40402340
	              40234040
	              40404023
	              40404040
	              13400000
  62:     -	A173  00004023			.BYTE	00,00,ww,gp,ww,ww,ww,ww,gp,ww,ww,ww,ww,ww,gp,ww,ww,gp,ww,ww,ww,ww,ww,gp,ww,ww,ww,ww,gp,ww,00,00
	              40404040
	              23404040
	              40402340
	              40234040
	              40404023
	              40404040
	              23400000
  63:     -	A193  0000402B			.BYTE	00,00,ww,bp,hp,hp,hp,hp,xp,hp,hp,vp,hp,hp,kp,hp,hp,kp,hp,hp,vp,hp,hp,xp,hp,hp,hp,hp,cp,ww,00,00
	              2C2C2C2C
	              2F2C2C2E
	              2C2C2D2C
	              2C2D2C2C
	              2E2C2C2F
	              2C2C2C2C
	              27400000
  64:     -	A1B3  00004023			.BYTE	00,00,ww,gp,ww,ww,ww,ww,gp,ww,ww,gp,ww,ww,ww,ww,ww,ww,ww,ww,gp,ww,ww,gp,ww,ww,ww,ww,gp,ww,00,00
	              40404040
	              23404023
	              40404040
	              40404040
	              23404023
	              40404040
	              23400000
  65:     -	A1D3  00004029			.BYTE	00,00,ww,dp,hp,hp,hp,hp,cp,ww,ww,dp,hp,hp,lp,ww,ww,rp,hp,hp,up,ww,ww,bp,hp,hp,hp,hp,up,ww,00,00
	              2C2C2C2C
	              27404029
	              2C2C2640
	              402A2C2C
	              2540402B
	              2C2C2C2C
	              25400000
  66:     -	A1F3  00004040			.BYTE	00,00,ww,ww,ww,ww,ww,ww,gp,ww,ww,ww,ww,ww,gn,ww,ww,gn,ww,ww,ww,ww,ww,gp,ww,ww,ww,ww,ww,ww,00,00
	              40404040
	              23404040
	              40400340
	              40034040
	              40404023
	              40404040
	              40400000
  67:     -	A213  00000000			.BYTE	00,00,00,00,00,00,00,ww,gp,ww,ww,rn,hn,hn,kn,hn,hn,kn,hn,hn,ln,ww,ww,gp,ww,00,00,00,00,00,00,00
	              00000040
	              2340400A
	              0C0C0D0C
	              0C0D0C0C
	              06404023
	              40000000
	              00000000
  68:     -	A233  00000000			.BYTE	00,00,00,00,00,00,00,ww,gp,ww,ww,gn,ww,ww,ww,00,00,ww,ww,ww,gn,ww,ww,gp,ww,00,00,00,00,00,00,00
	              00000040
	              23404003
	              40404000
	              00404040
	              03404023
	              40000000
	              00000000
  69:     -	A253  40404040			.BYTE	ww,ww,ww,ww,ww,ww,ww,ww,gp,ww,ww,gn,ww,00,00,00,00,00,00,ww,gn,ww,ww,gp,ww,ww,ww,ww,ww,ww,ww,ww
	              40404040
	              23404003
	              40000000
	              00000040
	              03404023
	              40404040
	              40404040
  70:     -	A273  0C0C0C0C			.BYTE	hn,hn,hn,hn,hn,hn,hn,hn,xp,hn,hn,cn,ww,00,00,00,00,00,00,ww,bn,hn,hn,xp,hn,hn,hn,hn,hn,hn,hn,hn
	              0C0C0C0C
	              2F0C0C07
	              40000000
	              00000040
	              0B0C0C2F
	              0C0C0C0C
	              0C0C0C0C
  71:     -	A293  40404040			.BYTE	ww,ww,ww,ww,ww,ww,ww,ww,gp,ww,ww,gn,ww,00,00,00,00,00,00,ww,gn,ww,ww,gp,ww,ww,ww,ww,ww,ww,ww,ww
	              40404040
	              23404003
	              40000000
	              00000040
	              03404023
	              40404040
	              40404040
  72:     -	A2B3  00000000			.BYTE	00,00,00,00,00,00,00,ww,gp,ww,ww,gn,ww,ww,ww,ww,ww,ww,ww,ww,gn,ww,ww,gp,ww,00,00,00,00,00,00,00
	              00000040
	              23404003
	              40404040
	              40404040
	              03404023
	              40000000
	              00000000
  73:     -	A2D3  00000000			.BYTE	00,00,00,00,00,00,00,ww,gp,ww,ww,bn,hn,hn,hn,hn,hn,hn,hn,hn,cn,ww,ww,gp,ww,00,00,00,00,00,00,00
	              00000040
	              2340400B
	              0C0C0C0C
	              0C0C0C0C
	              07404023
	              40000000
	              00000000
  74:     -	A2F3  00004040			.BYTE	00,00,ww,ww,ww,ww,ww,ww,gp,ww,ww,gn,ww,ww,ww,ww,ww,ww,ww,ww,gn,ww,ww,gp,ww,ww,ww,ww,ww,ww,00,00
	              40404040
	              23404003
	              40404040
	              40404040
	              03404023
	              40404040
	              40400000
  75:     -	A313  0000402A			.BYTE	00,00,ww,rp,hp,hp,hp,hp,xp,hp,hp,kp,hp,hp,lp,ww,ww,rp,hp,hp,kp,hp,hp,xp,hp,hp,hp,hp,lp,ww,00,00
	              2C2C2C2C
	              2F2C2C2D
	              2C2C2640
	              402A2C2C
	              2D2C2C2F
	              2C2C2C2C
	              26400000
  76:     -	A333  00004023			.BYTE	00,00,ww,gp,ww,ww,ww,ww,gp,ww,ww,ww,ww,ww,gp,ww,ww,gp,ww,ww,ww,ww,ww,gp,ww,ww,ww,ww,gp,ww,00,00
	              40404040
	              23404040
	              40402340
	              40234040
	              40404023
	              40404040
	              23400000
  77:     -	A353  00004019			.BYTE	00,00,ww,ds,hp,lp,ww,ww,bp,hp,hp,vp,hp,hp,kp,hp,hp,kp,hp,hp,vp,hp,hp,cp,ww,ww,rp,hp,us,ww,00,00
	              2C264040
	              2B2C2C2E
	              2C2C2D2C
	              2C2D2C2C
	              2E2C2C27
	              40402A2C
	              15400000
  78:     -	A373  00004040			.BYTE	00,00,ww,ww,ww,gp,ww,ww,gp,ww,ww,gp,ww,ww,ww,ww,ww,ww,ww,ww,gp,ww,ww,gp,ww,ww,gp,ww,ww,ww,00,00
	              40234040
	              23404023
	              40404040
	              40404040
	              23404023
	              40402340
	              40400000
  79:     -	A393  0000402A			.BYTE	00,00,ww,rp,hp,kp,hp,hp,up,ww,ww,dp,hp,hp,lp,ww,ww,rp,hp,hp,up,ww,ww,dp,hp,hp,kp,hp,lp,ww,00,00
	              2C2D2C2C
	              25404029
	              2C2C2640
	              402A2C2C
	              25404029
	              2C2C2D2C
	              26400000
  80:     -	A3B3  00004023			.BYTE	00,00,ww,gp,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,gp,ww,ww,gp,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,gp,ww,00,00
	              40404040
	              40404040
	              40402340
	              40234040
	              40404040
	              40404040
	              23400000
  81:     -	A3D3  00004029			.BYTE	00,00,ww,dp,hp,hp,hp,hp,hp,hp,hp,hp,hp,hp,kp,hp,hp,kp,hp,hp,hp,hp,hp,hp,hp,hp,hp,hp,up,ww,00,00
	              2C2C2C2C
	              2C2C2C2C
	              2C2C2D2C
	              2C2D2C2C
	              2C2C2C2C
	              2C2C2C2C
	              25400000
  82:     -	A3F3  00004040			.BYTE	00,00,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,00,00
	              40404040
	              40404040
	              40404040
	              40404040
	              40404040
	              40404040
	              40400000
  83:     -	A413  00000000			.BYTE	00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
	              00000000
	              00000000
	              00000000
	              00000000
	              00000000
	              00000000
	              00000000
  84:     -	A433  00000000			.BYTE	00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
	              00000000
	              00000000
	              00000000
	              00000000
	              00000000
	              00000000
	              00000000
  85:     -	A453  00000000			.BYTE	00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
	              00000000
	              00000000
	              00000000
	              00000000
	              00000000
	              00000000
	              00000000
  86:     -	A473  00000000			.BYTE	00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
	              00000000
	              00000000
	              00000000
	              00000000
	              00000000
	              00000000
	              00000000
  87:     -	A493  00000000			.BYTE	00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
	              00000000
	              00000000
	              00000000
	              00000000
	              00000000
	              00000000
	              00000000
  88:     -	A4B3  00000000			.BYTE	00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
	              00000000
	              00000000
	              00000000
	              00000000
	              00000000
	              00000000
	              00000000
  89:     -	A4D3  00000000			.BYTE	00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
	              00000000
	              00000000
	              00000000
	              00000000
	              00000000
	              00000000
	              00000000
  90:     -	A4F3  00000000			.BYTE	00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
	              00000000
	              00000000
	              00000000
	              00000000
	              00000000
	              00000000
	              00000000
  91:				
  92:     -	A513  00004040	map:	.BYTE	00,00,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,00,00
	              40404040
	              40404040
	              40404040
	              40404040
	              40404040
	              40404040
	              40400000
  93:     -	A533  0000400A			.BYTE	00,00,ww,rn,hn,hn,hn,hn,vn,hn,hn,hn,hn,hn,ln,ww,ww,rn,hn,hn,hn,hn,hn,vn,hn,hn,hn,hn,ln,ww,00,00
	              0C0C0C0C
	              0E0C0C0C
	              0C0C0640
	              400A0C0C
	              0C0C0C0E
	              0C0C0C0C
	              06400000
  94:     -	A553  00004003			.BYTE	00,00,ww,gn,ww,ww,ww,ww,gn,ww,ww,ww,ww,ww,gn,ww,ww,gn,ww,ww,ww,ww,ww,gn,ww,ww,ww,ww,gn,ww,00,00
	              40404040
	              03404040
	              40400340
	              40034040
	              40404003
	              40404040
	              03400000
  95:     -	A573  00004003			.BYTE	00,00,ww,gn,ww,ww,ww,ww,gn,ww,ww,ww,ww,ww,gn,ww,ww,gn,ww,ww,ww,ww,ww,gn,ww,ww,ww,ww,gn,ww,00,00
	              40404040
	              03404040
	              40400340
	              40034040
	              40404003
	              40404040
	              03400000
  96:     -	A593  0000400B			.BYTE	00,00,ww,bn,hn,hn,hn,hn,xn,hn,hn,vn,hn,hn,kn,hn,hn,kn,hn,hn,vn,hn,hn,xn,hn,hn,hn,hn,cn,ww,00,00
	              0C0C0C0C
	              0F0C0C0E
	              0C0C0D0C
	              0C0D0C0C
	              0E0C0C0F
	              0C0C0C0C
	              07400000
  97:     -	A5B3  00004003			.BYTE	00,00,ww,gn,ww,ww,ww,ww,gn,ww,ww,gn,ww,ww,ww,ww,ww,ww,ww,ww,gn,ww,ww,gn,ww,ww,ww,ww,gn,ww,00,00
	              40404040
	              03404003
	              40404040
	              40404040
	              03404003
	              40404040
	              03400000
  98:     -	A5D3  00004009			.BYTE	00,00,ww,dn,hn,hn,hn,hn,cn,ww,ww,dn,hn,hn,ln,ww,ww,rn,hn,hn,un,ww,ww,bn,hn,hn,hn,hn,un,ww,00,00
	              0C0C0C0C
	              07404009
	              0C0C0640
	              400A0C0C
	              0540400B
	              0C0C0C0C
	              05400000
  99:     -	A5F3  00004040			.BYTE	00,00,ww,ww,ww,ww,ww,ww,gn,ww,ww,ww,ww,ww,gn,ww,ww,gn,ww,ww,ww,ww,ww,gn,ww,ww,ww,ww,ww,ww,00,00
	              40404040
	              03404040
	              40400340
	              40034040
	              40404003
	              40404040
	              40400000
 100:     -	A613  00000000			.BYTE	00,00,00,00,00,00,00,ww,gn,ww,ww,rn,hn,hn,kn,hn,hn,kn,hn,hn,ln,ww,ww,gn,ww,00,00,00,00,00,00,00
	              00000040
	              0340400A
	              0C0C0D0C
	              0C0D0C0C
	              06404003
	              40000000
	              00000000
 101:     -	A633  00000000			.BYTE	00,00,00,00,00,00,00,ww,gn,ww,ww,gn,ww,ww,ww,00,00,ww,ww,ww,gn,ww,ww,gn,ww,00,00,00,00,00,00,00
	              00000040
	              03404003
	              40404000
	              00404040
	              03404003
	              40000000
	              00000000
 102:     -	A653  40404040			.BYTE	ww,ww,ww,ww,ww,ww,ww,ww,gn,ww,ww,gn,ww,00,00,00,00,00,00,ww,gn,ww,ww,gn,ww,ww,ww,ww,ww,ww,ww,ww
	              40404040
	              03404003
	              40000000
	              00000040
	              03404003
	              40404040
	              40404040
 103:     -	A673  0C0C0C0C			.BYTE	hn,hn,hn,hn,hn,hn,hn,hn,xn,hn,hn,cp,ww,00,00,00,00,00,00,ww,bn,hn,hn,xn,hn,hn,hn,hn,hn,hn,hn,hn
	              0C0C0C0C
	              0F0C0C27
	              40000000
	              00000040
	              0B0C0C0F
	              0C0C0C0C
	              0C0C0C0C
 104:     -	A693  40404040			.BYTE	ww,ww,ww,ww,ww,ww,ww,ww,gn,ww,ww,gn,ww,00,00,00,00,00,00,ww,gn,ww,ww,gn,ww,ww,ww,ww,ww,ww,ww,ww
	              40404040
	              03404003
	              40000000
	              00000040
	              03404003
	              40404040
	              40404040
 105:     -	A6B3  00000000			.BYTE	00,00,00,00,00,00,00,ww,gn,ww,ww,gn,ww,ww,ww,ww,ww,ww,ww,ww,gn,ww,ww,gn,ww,00,00,00,00,00,00,00
	              00000040
	              03404003
	              40404040
	              40404040
	              03404003
	              40000000
	              00000000
 106:     -	A6D3  00000000			.BYTE	00,00,00,00,00,00,00,ww,gn,ww,ww,bn,hn,hn,hn,hn,hn,hn,hn,hn,cn,ww,ww,gn,ww,00,00,00,00,00,00,00
	              00000040
	              0340400B
	              0C0C0C0C
	              0C0C0C0C
	              07404003
	              40000000
	              00000000
 107:     -	A6F3  00004040			.BYTE	00,00,ww,ww,ww,ww,ww,ww,gn,ww,ww,gn,ww,ww,ww,ww,ww,ww,ww,ww,gn,ww,ww,gn,ww,ww,ww,ww,ww,ww,00,00
	              40404040
	              03404003
	              40404040
	              40404040
	              03404003
	              40404040
	              40400000
 108:     -	A713  0000400A			.BYTE	00,00,ww,rn,hn,hn,hn,hn,xn,hn,hn,kn,hn,hn,ln,ww,ww,rn,hn,hn,kn,hn,hn,xn,hn,hn,hn,hn,ln,ww,00,00
	              0C0C0C0C
	              0F0C0C0D
	              0C0C0640
	              400A0C0C
	              0D0C0C0F
	              0C0C0C0C
	              06400000
 109:     -	A733  00004003			.BYTE	00,00,ww,gn,ww,ww,ww,ww,gn,ww,ww,ww,ww,ww,gn,ww,ww,gn,ww,ww,ww,ww,ww,gn,ww,ww,ww,ww,gn,ww,00,00
	              40404040
	              03404040
	              40400340
	              40034040
	              40404003
	              40404040
	              03400000
 110:     -	A753  00004009			.BYTE	00,00,ww,dn,hn,ln,ww,ww,bn,hn,hn,vn,hn,hn,kn,hn,hn,kn,hn,hn,vn,hn,hn,cn,ww,ww,rn,hn,un,ww,00,00
	              0C064040
	              0B0C0C0E
	              0C0C0D0C
	              0C0D0C0C
	              0E0C0C07
	              40400A0C
	              05400000
 111:     -	A773  00004040			.BYTE	00,00,ww,ww,ww,gn,ww,ww,gn,ww,ww,gn,ww,ww,ww,ww,ww,ww,ww,ww,gn,ww,ww,gn,ww,ww,gn,ww,ww,ww,00,00
	              40034040
	              03404003
	              40404040
	              40404040
	              03404003
	              40400340
	              40400000
 112:     -	A793  0000400A			.BYTE	00,00,ww,rn,hn,kn,hn,hn,un,ww,ww,dn,hn,hn,ln,ww,ww,rn,hn,hn,un,ww,ww,dn,hn,hn,kn,hn,ln,ww,00,00
	              0C0D0C0C
	              05404009
	              0C0C0640
	              400A0C0C
	              05404009
	              0C0C0D0C
	              06400000
 113:     -	A7B3  00004003			.BYTE	00,00,ww,gn,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,gn,ww,ww,gn,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,gn,ww,00,00
	              40404040
	              40404040
	              40400340
	              40034040
	              40404040
	              40404040
	              03400000
 114:     -	A7D3  00004009			.BYTE	00,00,ww,dn,hn,hn,hn,hn,hn,hn,hn,hn,hn,hn,kn,hn,hn,kn,hn,hn,hn,hn,hn,hn,hn,hn,hn,hn,un,ww,00,00
	              0C0C0C0C
	              0C0C0C0C
	              0C0C0D0C
	              0C0D0C0C
	              0C0C0C0C
	              0C0C0C0C
	              05400000
 115:     -	A7F3  00004040			.BYTE	00,00,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,00,00
	              40404040
	              40404040
	              40404040
	              40404040
	              40404040
	              40404040
	              40400000
 116:     -	A813  00000000			.BYTE	00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
	              00000000
	              00000000
	              00000000
	              00000000
	              00000000
	              00000000
	              00000000
 117:     -	A833  00000000			.BYTE	00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
	              00000000
	              00000000
	              00000000
	              00000000
	              00000000
	              00000000
	              00000000
 118:     -	A853  00000000			.BYTE	00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
	              00000000
	              00000000
	              00000000
	              00000000
	              00000000
	              00000000
	              00000000
 119:     -	A873  00000000			.BYTE	00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
	              00000000
	              00000000
	              00000000
	              00000000
	              00000000
	              00000000
	              00000000
 120:     -	A893  00000000			.BYTE	00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
	              00000000
	              00000000
	              00000000
	              00000000
	              00000000
	              00000000
	              00000000
 121:     -	A8B3  00000000			.BYTE	00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
	              00000000
	              00000000
	              00000000
	              00000000
	              00000000
	              00000000
	              00000000
 122:     -	A8D3  00000000			.BYTE	00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
	              00000000
	              00000000
	              00000000
	              00000000
	              00000000
	              00000000
	              00000000
**** main.asm ****
 110:     -	A8F3  00000000			.BYTE	00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
	              00000000
	              00000000
	              00000000
	              00000000
	              00000000
	              00000000
	              00000000
 111:				
 112:				;-----Path find map
 113:     -	D000          	pathFindMap	.EQU	0D000H
 114:				
**** main.asm ****
 115:     -	E000          	liveMap		.EQU	0E000H



Statistics:

     4	passes
     0	jr promotions
   309	symbols
  6419	bytes



Symbol Table:

absa            a05f     
bn             =   b     
bottomlineloop  a0bc     
boxbodyloop     a09e     
boxcontentloop  a0a9     
bp             =  2b     
bs             =  1b     
calcnextmove    912d     
calculatemapcell 9941     
calculatemapd   991d     
calculatemapl   9929     
calculatemapr   9935     
calculatemapu   9911     
calculatepathmap 98c3     
calculatepathmaploop 98d5     
caughtjaletime =  20     
checkh          9137     
checkmap        9804     
checkmapchar    981f     
checkmaploop    980e     
checkmapnextline 9819     
checknextlevel  97e5     
checkv          9145     
clearghost      91a6     
clearpm         90c4     
cls             a0fd     
cn             =   7     
colideghost     91c0     
countdown       99ce     
cp             =  27     
cr             =   d     
cs             =  17     
deathmessage1   9f84     
deathmessage2   9fdb     
delay           a0c2     
delayloop       a0c3     
disphl          a021     
displaygameover 9f60     
displaytitlescreen 9e40     
dn             =   9     
downbit        =   1     
dp             =  29     
drawbox         a08f     
ds             =  19     
eatghost        925c     
eatpellet       90f1     
eatppellet      9109     
eatspellet      90fd     
exitmessage     9f4c     
gameloop        903a     
gameoverwaitforinput 9f7b     
gametop         9007     
getaddresspf    982c     
getmapaddress   97cd     
getmove         9111     
getpmmapdata    90e4     
ghostcheckstack 9238     
ghostdis       =8113     
ghostdostack    9257     
ghostmove       91fa     
ghostmoved      9214     
ghostmovel      9220     
ghostmover      922c     
ghostmoveu      9208     
ghostnextmove   9199     
gn             =   3     
gp             =  23     
gs             =  13     
hidecursor      a105     
hltodec         a019     
hn             =   c     
home            a0f9     
hp             =  2c     
hs             =  1c     
incrementde     982a     
info            9f14     
initghost       91cd     
initlives      =   4     
initmap         97c1     
initpacman      90a1     
initpacx       =   e     
initpacy       =   e     
initpathfind    98ab     
initppfloop     98b2     
input           9087     
ismovevalid     97a7     
killpacman      916c     
kn             =   d     
kp             =  2d     
ks             =  1d     
leftbit        =   2     
lf             =   a     
liveblanking    99ca     
livemap        =e000     
ln             =   6     
logo            9e84     
lp             =  26     
ls             =  16     
map             a513     
map1            a113     
message         9f28     
move            9781     
movecursor      9ffe     
moved           9795     
movedvalid      97b8     
moveghost       91da     
movel           979b     
movelvalid      97bb     
movepm          9155     
movepma         9160     
mover           97a1     
movervalid      97be     
moveu           978f     
moveuvalid      97b5     
newline         9ff5     
nextmovevalid   9126     
num1            a03a     
num1h           a053     
num2            a03c     
num2h           a057     
number1         9a20     
number2         9b80     
number3         9ce0     
numtohex        a044     
oghost          94de     
oghostcheckd    944e     
oghostcheckl    945c     
oghostcheckr    946a     
oghostchecku    9440     
oghostclear     93a8     
oghostcolide    94a4     
oghostdectimer  9405     
oghostdir      =8122     
oghostinit      93dc     
oghostinittimer=  20     
oghostinitx    =   f     
oghostinity    =   8     
oghostmapdata   93cf     
oghostmove      93ec     
oghostnextmove  9416     
oghostpathfind  9478     
oghostpfpp      948f     
oghostprint     93b4     
oghostsetnewdir 949b     
oghoststack     94d0     
oghoststorex   =   f     
oghoststorey   =   b     
oghosttimer    =8125     
oghostx        =8120     
oghosty        =8121     
oldstackpointer=89f0     
originalbc     =89f2     
paccdir        =8102     
paclives       =8105     
pacman          918e     
pacndir        =8103     
pacx           =8100     
pacy           =8101     
pathfinddepth  =  30     
pathfindmap    =d000     
pellet          a0e1     
pelletbit      =   5     
pfnextrow       98bc     
pghost          961f     
pghostcheckd    958f     
pghostcheckl    959d     
pghostcheckr    95ab     
pghostchecku    9581     
pghostclear     94e9     
pghostcolide    95e5     
pghostdectimer  9546     
pghostdir      =8132     
pghostinit      951d     
pghostinittimer=  30     
pghostinitx    =   f     
pghostinity    =   8     
pghostmapdata   9510     
pghostmove      952d     
pghostnextmove  9557     
pghostpathfind  95b9     
pghostpfpp      95d0     
pghostprint     94f5     
pghostsetnewdir 95dc     
pghoststack     9611     
pghoststorex   =  10     
pghoststorey   =   b     
pghosttimer    =8135     
pghostx        =8130     
pghosty        =8131     
pmchar          986e     
pmcharret       98a9     
pmloop          985a     
pmnextline      9868     
pmpfafterskip   9966     
pmpfloop        995d     
pmpfnextline    9973     
pmpfskip        9979     
powerpbit      =   4     
powerpellet     a0d6     
ppactive       =8104     
ppellettics    =  20     
print           a074     
printatpos      a07f     
printatposloop  a080     
printghost      91b3     
printhud        9982     
printlives      99a3     
printlivesloop  99b3     
printloop       a075     
printmap        9853     
printmapat      9844     
printp          9889     
printpfmap      994d     
printpm         90d0     
printpp         9881     
printret        a07d     
printscore      9989     
printsf         9899     
printsghost     91e7     
printvoid       98a1     
printwall       9891     
quit            907c     
randoma         a064     
removeoldlives  99bb     
resetpacman     90ac     
rghost          939d     
rghostcheckd    930d     
rghostcheckl    931b     
rghostcheckr    9329     
rghostchecku    92ff     
rghostclear     9267     
rghostcolide    9363     
rghostdectimer  92c4     
rghostdir      =8112     
rghostinit      929b     
rghostinittimer=  10     
rghostinitx    =   f     
rghostinity    =   8     
rghostmapdata   928e     
rghostmove      92ab     
rghostnextmove  92d5     
rghostpathfind  9337     
rghostpfpp      934e     
rghostprint     9273     
rghostsetnewdir 935a     
rghoststack     938f     
rghoststorex   =   e     
rghoststorey   =   b     
rghosttimer    =8115     
rghostx        =8110     
rghosty        =8111     
rightbit       =   3     
rn             =   a     
rp             =  2a     
rs             =  1a     
score          =8900     
scorehud        99c2     
seed           =8888     
sfbit          =   7     
sghost0         976b     
sghost1         9776     
sghost1print    91f3     
showcursor      a10c     
startgame       901c     
startgamemessage 9f3c     
superfruit      a0ec     
tghost          9760     
tghostcheckd    96d0     
tghostcheckl    96de     
tghostcheckr    96ec     
tghostchecku    96c2     
tghostclear     962a     
tghostcolide    9726     
tghostdectimer  9687     
tghostdir      =8142     
tghostinit      965e     
tghostinittimer=  40     
tghostinitx    =   f     
tghostinity    =   8     
tghostmapdata   9651     
tghostmove      966e     
tghostnextmove  9698     
tghostpathfind  96fa     
tghostpfpp      9711     
tghostprint     9636     
tghostsetnewdir 971d     
tghoststack     9752     
tghoststorex   =  11     
tghoststorey   =   b     
tghosttimer    =8145     
tghostx        =8140     
tghosty        =8141     
titlescreenwaitforinput 9e76     
toplineloop     a096     
un             =   5     
up             =  25     
upbit          =   0     
us             =  15     
validinput      909d     
vn             =   e     
void            a0f7     
vp             =  2e     
vs             =  1e     
wall            a0cb     
wallbit        =   6     
ww             =  40     
xn             =   f     
xp             =  2f     
xs             =  1f     
