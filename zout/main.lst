   1:     -	000D          	CR              .EQU     0DH
   2:     -	000A          	LF              .EQU     0AH
   3:				
   4:     -	89F0          	oldStackPointer	.EQU	89F0H		;Old Stack Location 	
   5:     -	89F2          	originalBC		.EQU	89F2H		;BC before manipulation, used for calculating board position
   6:				
   7:     -	9000          		.ORG 9000H
   8:    0+20	9000  ED73F089				ld		(oldStackPointer), SP
   9:   20+10	9004  31FFFF  				ld		sp,0FFFFH
  10:     -	9007          	gameTop:
  11:   30+17	9007  CDE997  				CALL	initMap
  12:   47+10	900A  21B2A1  				LD		HL, cls			;Clear screen
  13:   57+17	900D  CD29A1  				CALL	print
  14:   74+10	9010  21BAA1  				LD		HL, hideCursor	;Hide Cursor
  15:   84+17	9013  CD29A1  				CALL	print
  16:  101+17	9016  CD9F98  				CALL 	printMap
  17:  118+10	9019  C3F59E  				JP		displayTitleScreen
  18:     -	901C          	startGame:
  19:  128+17	901C  CDA490  				CALL	initPacman
  20:  145+17	901F  CDF591  				CALL	initGhost
  21:  162+17	9022  CDE997  				CALL	initMap
  22:  179+10	9025  21B2A1  				LD		HL, cls			;Clear screen
  23:  189+17	9028  CD29A1  				CALL	print
  24:  206+17	902B  CD9F98  				CALL 	printMap
  25:  223+17	902E  CD689A  				CALL	countdown
  26:  240+10	9031  21AEA1  				LD		HL, home		;Go home
  27:  250+17	9034  CD29A1  				CALL	print
  28:  267+17	9037  CD9F98  				CALL 	printMap
  29:     -	903A          	gameLoop:		
  30:  284+17	903A  CD8A90  				call	input
  31:  301+17	903D  CD3991  				call 	getMove
  32:  318+17	9040  CDD290  				call 	clearPM
  33:  335+17	9043  CD7D91  				call	movePM
  34:  352+17	9046  CDDE90  				call 	printPM
  35:  369+17	9049  CDFF90  				call	eatPellet
  36:							
  37:  386+17	904C  CDF798  				call	initPathFind
  38:  403+17	904F  CD0F99  				call	calculatePathMap
  39:				
  40:  420+17	9052  CDC191  				call	ghostNextMove
  41:  437+17	9055  CDCE91  				call	clearGhost
  42:  454+17	9058  CDE891  				call	colideGhost
  43:  471+17	905B  CD0292  				call	moveGhost
  44:  488+17	905E  CDDB91  				call	printGhost
  45:				
  46:  505+17	9061  CDE891  				call	colideGhost
  47:				
  48:				
  49:							;call 	printPFMap
  50:							
  51:  522+17	9064  CDCE99  				call 	printHUD
  52:  539+17	9067  CDAAA0  				call	newline
  53:  556+17	906A  CD2A98  				call	checkNextLevel
  54:  573+17	906D  CD1298  				call	checkFruit
  55:  590+7	9070  060F    				LD 		B,0FH   ;delay
  56:  597+7	9072  0EFF    				LD		C,0FFH
  57:  604+17	9074  CD77A1  				CALL 	DELAY
  58:  621+10	9077  C33A90  				JP		gameLoop
  59:  631+20	907A  ED7BF089				LD		SP,(oldStackPointer)
  60:  651+10	907E  C9      				ret
  61:				
  62:  661+10	907F  21C1A1  	quit:       LD		HL, showCursor	;Hide Cursor
  63:  671+17	9082  CD29A1  				CALL	print
  64:  688+20	9085  ED7BF089	            LD		SP,(oldStackPointer)
  65:  708+10	9089  C9      				RET	
  66:						
  67:				;-------------- Input --------------------------					
  68:				include input.asm	
**** input.asm ****
   1:     -	908A          	input:
   2:  718+11	908A  DF      					RST		18H
   3:  729+5+6	908B  C8      					RET		Z
   4:  734+11	908C  D7      					RST		10H
   5:  745+7	908D  E6DF    					AND     11011111b       ; lower to uppercase
   6:  752+7	908F  FE57    					CP		'W'
   7:  759+7+5	9091  280D    					JR		Z,validInput
   8:  766+7	9093  FE41    					CP		'A'
   9:  773+7+5	9095  2809    					JR		Z,validInput
  10:  780+7	9097  FE53    					CP		'S'
  11:  787+7+5	9099  2805    					JR		Z,validInput
  12:  794+7	909B  FE44    					CP		'D'
  13:  801+7+5	909D  2801    					JR		Z,validInput
  14:  808+10	909F  C9      					RET
  15:     -	90A0          	validInput:		
  16:  818+13	90A0  320381  					LD		(pacNDir), A
**** main.asm ****
  69:  831+10	90A3  C9      					RET
  70:				;----------Pacman------;
  71:				include	pacman.asm
**** pacman.asm ****
   1:				;Packman
   2:     -	8100          	pacx			.EQU	8100H
   3:     -	8101          	pacy			.EQU	8101H
   4:     -	8102          	pacCDir			.EQU	8102H		;Pacmans current direction
   5:     -	8103          	pacNDir			.EQU	8103H		;Pacman next direction (from key press)
   6:     -	8105          	pacLives		.EQU	8105H		;Pacman next direction (from key press)
   7:				
   8:     -	000E          	initPacx		.EQU	14
   9:     -	000E          	initPacy		.EQU	14
  10:     -	0004          	initLives		.EQU	4
  11:				
  12:     -	0020          	pPelletTics     .EQU    20H         ;Power Pellet last time
  13:				
  14:     -	8104          	pPActive        .EQU    8104H       ;Power Pellet Timer
  15:				
  16:     -	90A4          	initPacman:
  17:  841+10	90A4  210000  					LD		HL, 0H
  18:  851+16	90A7  220089  					LD		(score), HL
  19:  867+10	90AA  210100  					LD		HL, 1H
  20:  877+16	90AD  220289  					LD		(level), HL
  21:  893+7	90B0  3E04    					LD		a,initLives
  22:  900+13	90B2  320581  					LD		(pacLives),a
  23:  913+7	90B5  3E00    					LD		a,0
  24:  920+13	90B7  320489  					LD		(fruits),a
  25:  933+7	90BA  3E0E    	resetPacMan:	LD		a, initPacx		;set Pacman Pos
  26:  940+13	90BC  320081  					LD		(pacx),a
  27:  953+7	90BF  3E0E    					LD		a, initPacy
  28:  960+13	90C1  320181  					LD		(pacy),a
  29:  973+7	90C4  3E44    					LD		a, 'D'			;Set start direction
  30:  980+13	90C6  320281  					LD		(pacCDir),A
  31:  993+13	90C9  320381  					LD		(pacNDir),A
  32: 1006+7	90CC  3E00    					LD		a,0
  33: 1013+13	90CE  320481  					LD		(pPActive),A
  34: 1026+10	90D1  C9      					RET
  35:				
  36:     -	90D2          	clearPM:
  37: 1036+13	90D2  3A0081  					LD		A, (pacx)		;Push X to stack
  38: 1049+4	90D5  4F      					LD		C,A
  39: 1053+13	90D6  3A0181  					LD		A, (pacy)		;Push Y to stack
  40: 1066+4	90D9  47      					LD		B,A
  41: 1070+17	90DA  CD9098  					CALL 	printMapAt
  42: 1087+10	90DD  C9      					RET
  43:								
  44:     -	90DE          	printPM:
  45: 1097+13	90DE  3A0081  					LD		A, (pacx)		;Push X to stack
  46: 1110+4	90E1  3C      					INC		A
  47: 1114+4	90E2  4F      					LD		C,A
  48: 1118+13	90E3  3A0181  					LD		A, (pacy)		;Push Y to stack
  49: 1131+4	90E6  3C      					INC		A
  50: 1135+4	90E7  47      					LD		B,A
  51: 1139+17	90E8  CDB3A0  					CALL	moveCursor
  52: 1156+10	90EB  21B691  					LD		HL, pacman
  53: 1166+17	90EE  CD29A1  					CALL 	print
  54: 1183+10	90F1  C9      					RET
  55:     -	90F2          	getPMMapData:	
  56: 1193+13	90F2  3A0081  					LD		A, (pacx)
  57: 1206+4	90F5  4F      					LD		C,A
  58: 1210+13	90F6  3A0181  					LD		A, (pacy)
  59: 1223+4	90F9  47      					LD		B,A
  60: 1227+17	90FA  CDFA97  					CALL	getMapAddress
  61: 1244+7	90FD  7E      	                LD      A,(HL)
  62: 1251+10	90FE  C9      					ret
  63:     -	90FF          	eatPellet:		;Eat pellet at packman location
  64: 1261+17	90FF  CDF290  					CALL 	getPMMapData
  65: 1278+8	9102  CB6F    					BIT		pelletBit,A
  66: 1286+7+5	9104  201F    					JR		NZ,eatSPellet
  67: 1293+8	9106  CB67    	                BIT		powerPBit,A
  68: 1301+7+5	9108  2027    					JR		NZ,eatPPellet
  69: 1308+8	910A  CB7F    					BIT		sfBit,A
  70: 1316+7+5	910C  2001    					JR		NZ,eatFruit
  71: 1323+10	910E  C9      					RET
  72:     -	910F          	eatFruit:		
  73: 1333+11	910F  E5      					PUSH	HL
  74: 1344+16	9110  2A0089  					LD      HL,(score)
  75: 1360+10	9113  013200  	                LD      BC,50
  76: 1370+11	9116  09      	                ADD     HL,BC
  77: 1381+16	9117  220089  	                LD      (score),HL
  78:				
  79: 1397+13	911A  3A0489  					LD		A,(fruits)
  80: 1410+4	911D  3C      					INC		A
  81: 1414+13	911E  320489  					LD		(fruits),A
  82: 1427+10	9121  E1      					POP		HL
  83: 1437+15	9122  CBBE    					RES		sfBit,(HL)
  84: 1452+10	9124  C9      					RET
  85:				
  86:     -	9125          	eatSPellet:		
  87: 1462+11	9125  E5      					PUSH	HL		
  88: 1473+16	9126  2A0089  					LD		HL,(score)
  89: 1489+6	9129  23      					INC		HL
  90: 1495+16	912A  220089  					LD		(score),HL
  91: 1511+10	912D  E1      					POP		HL
  92: 1521+15	912E  CBAE    					RES		pelletBit,(HL)
  93: 1536+10	9130  C9      					RET
  94:				
  95:     -	9131          	eatPPellet:		
  96: 1546+7	9131  3E20    					LD      A,pPelletTics
  97: 1553+13	9133  320481  	                LD      (pPActive),A
  98: 1566+15	9136  CBA6    	                RES		powerPBit,(HL)
  99: 1581+10	9138  C9      					RET
 100:								
 101:     -	9139          	getMove:		;Sets the current move var
 102: 1591+17	9139  CDF290  					CALL	getPMMapData
 103: 1608+4	913C  57      					LD		D,A
 104: 1612+13	913D  3A0381  					LD		A,(pacNDir)			;Is the next move valid
 105: 1625+17	9140  CDCF97  					CALL	isMoveValid
 106: 1642+7+5	9143  2009    					JR		NZ,nextMoveValid
 107: 1649+13	9145  3A0281  					LD		A,(pacCDir)			;Is the current move valid
 108: 1662+17	9148  CDCF97  					CALL	isMoveValid
 109: 1679+5+6	914B  C0      					RET		NZ
 110: 1684+12	914C  1807    					JR		calcNextMove
 111:								
 112:     -	914E          	nextMoveValid:
 113: 1696+13	914E  320281  					LD		(pacCDir),A
 114: 1709+13	9151  320381  					LD		(pacNDir),A
 115: 1722+10	9154  C9      					RET
 116:								
 117:     -	9155          	calcNextMove:	
 118: 1732+7	9155  FE41    					CP		'A'
 119: 1739+7+5	9157  2814    					JR		Z,checkV
 120: 1746+7	9159  FE44    					CP		'D'
 121: 1753+7+5	915B  2810    					JR		Z,checkV
 122: 1760+12	915D  1800    					JR		checkH
 123:     -	915F          	checkH:
 124: 1772+7	915F  3E41    					LD		A,'A'
 125: 1779+17	9161  CDCF97  					CALL	isMoveValid
 126: 1796+7+5	9164  20E8    					JR		NZ,nextMoveValid
 127: 1803+7	9166  3E44    					LD		A,'D'
 128: 1810+17	9168  CDCF97  					CALL	isMoveValid
 129: 1827+7+5	916B  20E1    					JR		NZ,nextMoveValid
 130:     -	916D          	checkV:
 131: 1834+7	916D  3E57    					LD		A,'W'
 132: 1841+17	916F  CDCF97  					CALL	isMoveValid
 133: 1858+7+5	9172  20DA    					JR		NZ,nextMoveValid
 134: 1865+7	9174  3E53    					LD		A,'S'
 135: 1872+17	9176  CDCF97  					CALL	isMoveValid
 136: 1889+7+5	9179  20D3    					JR		NZ,nextMoveValid
 137: 1896+12	917B  18E2    					JR		checkH
 138:				;Move
 139:     -	917D          	movePM:
 140: 1908+13	917D  3A0481  					LD      A,(pPActive)
 141: 1921+4	9180  B7      	                OR      A
 142: 1925+10	9181  CA8891  	                JP      Z,movePMA
 143: 1935+4	9184  3D      	                DEC     A
 144: 1939+13	9185  320481  	                LD      (pPActive),A
 145: 1952+13	9188  3A0281  	movePMA:        LD		A,(pacCDir)
 146: 1965+10	918B  110081  					LD		DE,pacx
 147: 1975+10	918E  010181  					LD		BC,pacy
 148: 1985+10	9191  C3A997  					JP		move
 149:				
 150:     -	9194          	killPacman:
 151: 1995+10	9194  E1      					POP		HL
 152: 2005+10	9195  E1      					POP		HL
 153: 2015+13	9196  3A0581  					LD		A,(pacLives)
 154: 2028+4	9199  3D      					DEC		A
 155: 2032+4	919A  B7      					OR		A
 156: 2036+10	919B  CA15A0  					JP		Z,displayGameOver
 157: 2046+13	919E  320581  					LD		(pacLives),A
 158: 2059+17	91A1  CDBA90  					CALL	resetPacMan
 159: 2076+17	91A4  CDF591  					CALL	initGhost
 160: 2093+17	91A7  CD689A  					CALL	countdown
 161: 2110+10	91AA  21AEA1  					LD		HL, home		;Go home
 162: 2120+17	91AD  CD29A1  					CALL	print
 163: 2137+17	91B0  CD9F98  					CALL 	printMap
 164: 2154+10	91B3  C33A90  					JP		gameLoop
 165:				
**** main.asm ****
  72:     -	91B6  1B5B3933	pacman:			.BYTE	1BH,"[93mC",1BH,"[0m",0
	              6D431B5B
	              306D00
  73:				;------------Ghost
  74:				include ghosts.asm
**** ghosts.asm ****
   1:     -	8113          	ghostDis		.EQU	8113H		;ghost move distance from pacman
   2:     -	0020          	caughtJaleTime  .EQU    20H
   3:				
   4:     -	91C1          	ghostNextMove:
   5: 2164+17	91C1  CDFD92  	                CALL    rGhostNextMove
   6: 2181+17	91C4  CD3E94  	                CALL    oGhostNextMove
   7: 2198+17	91C7  CD7F95  	                CALL    pGhostNextMove
   8: 2215+17	91CA  CDC096  	                CALL    tGhostNextMove
   9: 2232+10	91CD  C9      	                RET
  10:     -	91CE          	clearGhost:
  11: 2242+17	91CE  CD8F92  	                CALL    rGhostClear
  12: 2259+17	91D1  CDD093  	                CALL    oGhostClear
  13: 2276+17	91D4  CD1195  	                CALL    pGhostClear
  14: 2293+17	91D7  CD5296  	                CALL    tGhostClear
  15: 2310+10	91DA  C9      	                RET
  16:     -	91DB          	printGhost:
  17: 2320+17	91DB  CD9B92  	                CALL    rGhostPrint
  18: 2337+17	91DE  CDDC93  	                CALL    oGhostPrint
  19: 2354+17	91E1  CD1D95  	                CALL    pGhostPrint
  20: 2371+17	91E4  CD5E96  	                CALL    tGhostPrint
  21: 2388+10	91E7  C9      	                RET
  22:     -	91E8          	colideGhost:
  23: 2398+17	91E8  CD8B93  	                CALL    rGhostColide
  24: 2415+17	91EB  CDCC94  	                CALL    oGhostColide
  25: 2432+17	91EE  CD0D96  	                CALL    pGhostColide
  26: 2449+17	91F1  CD4E97  	                CALL    tGhostColide
  27: 2466+10	91F4  C9      	                RET
  28:     -	91F5          	initGhost:
  29: 2476+17	91F5  CDC392  	                CALL    rGhostInit
  30: 2493+17	91F8  CD0494  	                CALL    oGhostInit
  31: 2510+17	91FB  CD4595  	                CALL    pGhostInit
  32: 2527+17	91FE  CD8696  	                CALL    tGhostInit
  33: 2544+10	9201  C9      	                RET
  34:     -	9202          	moveGhost:
  35: 2554+17	9202  CDD392  	                CALL    rGhostMove
  36: 2571+17	9205  CD1494  	                CALL    oGhostMove
  37: 2588+17	9208  CD5595  	                CALL    pGhostMove
  38: 2605+17	920B  CD9696  	                CALL    tGhostMove
  39: 2622+10	920E  C9      	                RET
  40:				
  41:     -	920F          	printSGhost:
  42: 2632+8	920F  CB47    	                BIT     0,A
  43: 2640+10	9211  CA1B92  	                JP      Z,sGhost1Print
  44: 2650+10	9214  219397  	                LD		HL, sGhost0
  45: 2660+17	9217  CD29A1  					CALL 	print
  46: 2677+10	921A  C9      					RET
  47:     -	921B          	sGhost1Print:
  48: 2687+10	921B  219E97  	                LD		HL, sGhost1
  49: 2697+17	921E  CD29A1  					CALL 	print
  50: 2714+10	9221  C9      					RET
  51:				
  52:     -	9222          	ghostMove:
  53: 2724+7	9222  FE57    					CP		'W'
  54: 2731+7+5	9224  280A    					JR		Z,ghostMoveU
  55: 2738+7	9226  FE41    					CP		'A'
  56: 2745+7+5	9228  281E    					JR		Z,ghostMoveL
  57: 2752+7	922A  FE53    					CP		'S'
  58: 2759+7+5	922C  280E    					JR		Z,ghostMoveD
  59: 2766+12	922E  1824    					JR		ghostMoveR
  60:				
  61:     -	9230          	ghostMoveU:			
  62: 2778+7	9230  1A      					LD      A, (DE)
  63: 2785+4	9231  6F      	                LD      L,A         ;ld x
  64: 2789+7	9232  0A      	                LD		A, (BC)
  65: 2796+4	9233  3D      					DEC		A
  66: 2800+7	9234  E61F    					AND		00011111B
  67: 2807+4	9236  67      	                LD      H,A         ;ld y
  68: 2811+17	9237  CD6092  	                CALL    ghostCheckStack
  69: 2828+7	923A  02      					LD		(BC),A
  70: 2835+10	923B  C9      					RET
  71:     -	923C          	ghostMoveD:		
  72: 2845+7	923C  1A      		            LD      A, (DE)
  73: 2852+4	923D  6F      	                LD      L,A         ;ld x
  74: 2856+7	923E  0A      					LD		A, (BC)
  75: 2863+4	923F  3C      					INC		A
  76: 2867+7	9240  E61F    					AND		00011111B
  77: 2874+4	9242  67      	                LD      H,A         ;ld y
  78: 2878+17	9243  CD6092  	                CALL    ghostCheckStack
  79: 2895+7	9246  02      					LD		(BC),A
  80: 2902+10	9247  C9      					RET
  81:     -	9248          	ghostMoveL:		
  82: 2912+7	9248  0A      	                LD      A, (BC)
  83: 2919+4	9249  67      	                LD      H,A         ;ld y
  84: 2923+7	924A  1A      					LD		A, (DE)
  85: 2930+4	924B  3D      					DEC		A
  86: 2934+7	924C  E61F    					AND		00011111B
  87: 2941+4	924E  6F      	                LD      L,A         ;ld x
  88: 2945+17	924F  CD6092  	                CALL    ghostCheckStack
  89: 2962+7	9252  12      					LD		(DE),A
  90: 2969+10	9253  C9      					RET
  91:     -	9254          	ghostMoveR:		
  92: 2979+7	9254  0A      	                LD      A, (BC)
  93: 2986+4	9255  67      	                LD      H,A         ;ld y
  94: 2990+7	9256  1A      					LD		A, (DE)
  95: 2997+4	9257  3C      					INC		A
  96: 3001+7	9258  E61F    					AND		00011111B
  97: 3008+4	925A  6F      	                LD      L,A         ;ld x
  98: 3012+17	925B  CD6092  	                CALL    ghostCheckStack
  99: 3029+7	925E  12      					LD		(DE),A
 100: 3036+10	925F  C9      					RET
 101:     -	9260          	ghostCheckStack:
 102: 3046+11	9260  F5      	                PUSH   AF
 103: 3057+11	9261  C5      	                PUSH   BC
 104: 3068+11	9262  D5      	                PUSH   DE
 105: 3079+17	9263  CDB793  	                CALL   rGhostStack
 106: 3096+10	9266  CA7F92  	                JP     Z,ghostDoStack
 107: 3106+17	9269  CDF894  	                CALL   oGhostStack
 108: 3123+10	926C  CA7F92  	                JP     Z,ghostDoStack
 109: 3133+17	926F  CD3996  	                CALL   pGhostStack
 110: 3150+10	9272  CA7F92  	                JP     Z,ghostDoStack
 111: 3160+17	9275  CD7A97  	                CALL   tGhostStack
 112: 3177+10	9278  CA7F92  	                JP     Z,ghostDoStack
 113: 3187+10	927B  D1      	                POP    DE
 114: 3197+10	927C  C1      	                POP    BC
 115: 3207+10	927D  F1      	                POP    AF
 116: 3217+10	927E  C9      	                RET
 117:     -	927F          	ghostDoStack:   
 118: 3227+10	927F  D1      	                POP    DE
 119: 3237+10	9280  C1      	                POP    BC
 120: 3247+10	9281  F1      	                POP    AF
 121: 3257+10	9282  F1      	                POP    AF
 122: 3267+10	9283  C9      	                RET
 123:				
 124:     -	9284          	eatGhost:       
 125: 3277+16	9284  2A0089  	                LD      HL,(score)
 126: 3293+10	9287  010A00  	                LD      BC,10
 127: 3303+11	928A  09      	                ADD     HL,BC
 128: 3314+16	928B  220089  	                LD      (score),HL
 129: 3330+10	928E  C9      	                RET
 130:				                
 131:				include ghosts/red.asm
**** ghosts/red.asm ****
   1:     -	000F          	rGhostInitX	    .EQU	15
   2:     -	0008          	rGhostInitY	    .EQU	8
   3:     -	0010          	rGhostInitTimer .EQU    10H
   4:     -	000E          	rGhostStoreX	.EQU	14
   5:     -	000B          	rGhostStoreY	.EQU	11
   6:				
   7:     -	8110          	rGhostX		    .EQU	8110H		
   8:     -	8111          	rGhostY		    .EQU	8111H
   9:     -	8112          	rGhostDir		.EQU	8112H
  10:     -	8115          	rGhostTimer     .EQU    8115H
  11:				
  12:     -	928F          	rGhostClear:
  13: 3340+13	928F  3A1081  					LD		A, (rGhostX)		;Push X to stack
  14: 3353+4	9292  4F      					LD		C,A
  15: 3357+13	9293  3A1181  					LD		A, (rGhostY)		;Push Y to stack
  16: 3370+4	9296  47      					LD		B,A
  17: 3374+17	9297  CD9098  					CALL 	printMapAt
  18: 3391+10	929A  C9      					RET
  19:								
  20:     -	929B          	rGhostPrint:
  21: 3401+13	929B  3A1081  					LD		A, (rGhostX)		;Push X to stack
  22: 3414+4	929E  3C      					INC		A
  23: 3418+4	929F  4F      					LD		C,A
  24: 3422+13	92A0  3A1181  					LD		A, (rGhostY)		;Push Y to stack
  25: 3435+4	92A3  3C      					INC		A
  26: 3439+4	92A4  47      					LD		B,A
  27: 3443+17	92A5  CDB3A0  					CALL	moveCursor
  28: 3460+13	92A8  3A0481  	                LD      A,(pPActive)
  29: 3473+4	92AB  B7      	                OR      A
  30: 3477+10	92AC  C20F92  	                JP      NZ, printSGhost
  31: 3487+10	92AF  21C593  					LD		HL, rGhost
  32: 3497+17	92B2  CD29A1  					CALL 	print
  33: 3514+10	92B5  C9      					RET
  34:     -	92B6          	rGhostMapData:	
  35: 3524+13	92B6  3A1081  					LD		A, (rGhostX)
  36: 3537+4	92B9  4F      					LD		C,A
  37: 3541+13	92BA  3A1181  					LD		A, (rGhostY)
  38: 3554+4	92BD  47      					LD		B,A
  39: 3558+17	92BE  CDFA97  					CALL	getMapAddress
  40: 3575+7	92C1  7E      	                LD      A,(HL)
  41: 3582+10	92C2  C9      					ret
  42:				
  43:				
  44:     -	92C3          	rGhostInit:   
  45: 3592+7	92C3  3E0E    	                LD		a, rGhostStoreX	;set rGhost Pos
  46: 3599+13	92C5  321081  				    LD		(rGhostX),a
  47: 3612+7	92C8  3E0B    				    LD		a, rGhostStoreY
  48: 3619+13	92CA  321181  				    LD		(rGhostY),a
  49: 3632+7	92CD  3E10    	                LD		a, rGhostInitTimer
  50: 3639+13	92CF  321581  				    LD		(rGhostTimer),a
  51: 3652+10	92D2  C9      	                RET
  52:				
  53:     -	92D3          	rGhostMove:
  54: 3662+13	92D3  3A1581  	                LD      A,(rGhostTimer)     ;Dont move if the ghost is in jale
  55: 3675+4	92D6  B7      	                OR      A                
  56: 3679+10	92D7  C2EC92  	                JP      NZ,rGhostDecTimer   ;Decrement the timer if its x
  57: 3689+13	92DA  3A0481  	                LD      A,(pPActive)
  58: 3702+8	92DD  CB47    	                BIT     0,A                 ;Move every other tick, bit 0 will always 0 when the power pellet isnt active
  59: 3710+5+6	92DF  C0      	                RET     NZ
  60: 3715+13	92E0  3A1281  					LD		A,(rGhostDir)
  61: 3728+10	92E3  111081  					LD		DE,rGhostX
  62: 3738+10	92E6  011181  					LD		BC,rGhostY
  63: 3748+10	92E9  C32292  					JP		ghostMove
  64:				
  65:				
  66:     -	92EC          	rGhostDecTimer:
  67: 3758+4	92EC  3D      	                DEC     A
  68: 3762+13	92ED  321581  	                LD      (rGhostTimer),A
  69: 3775+4	92F0  B7      	                OR      A
  70: 3779+5+6	92F1  C0      	                RET     NZ              ;IF Zero move ghost out of jale
  71: 3784+7	92F2  3E0F    	                LD		a, rGhostInitX	;set rGhost Pos
  72: 3791+13	92F4  321081  				    LD		(rGhostX),a
  73: 3804+7	92F7  3E08    				    LD		a, rGhostInitY
  74: 3811+13	92F9  321181  				    LD		(rGhostY),a
  75: 3824+10	92FC  C9      	                RET
  76:				
  77:     -	92FD          	rGhostNextMove:
  78: 3834+7	92FD  3EFF    					LD		A, 0FFH
  79: 3841+13	92FF  321381  					LD		(ghostDis),A
  80: 3854+17	9302  CDB692  					CALL	rGhostMapData
  81: 3871+4	9305  57      					LD		D,A
  82: 3875+7	9306  3E57    					LD		A,	'W'			;check up
  83: 3882+17	9308  CDCF97  					CALL	isMoveValid
  84: 3899+10+7	930B  C42793  					CALL	NZ,rGhostCheckU
  85: 3909+7	930E  3E53    					LD		A,	'S'			;down
  86: 3916+17	9310  CDCF97  					CALL	isMoveValid
  87: 3933+10+7	9313  C43593  					CALL	NZ,rGhostCheckD
  88: 3943+7	9316  3E41    					LD		A,	'A'			;left
  89: 3950+17	9318  CDCF97  					CALL	isMoveValid
  90: 3967+10+7	931B  C44393  					CALL	NZ,rGhostCheckL
  91: 3977+7	931E  3E44    					LD		A,	'D'			;right
  92: 3984+17	9320  CDCF97  					CALL	isMoveValid
  93: 4001+10+7	9323  C45193  					CALL	NZ,rGhostCheckR
  94: 4011+10	9326  C9      					RET
  95:								
  96:     -	9327          	rGhostCheckU:	
  97: 4021+11	9327  F5      					PUSH	AF
  98: 4032+13	9328  3A1181  					LD		A, (rGhostY)
  99: 4045+4	932B  3D      					DEC		A
 100: 4049+7	932C  E61F    					AND		00011111B
 101: 4056+4	932E  47      					LD		B,A
 102: 4060+13	932F  3A1081  					LD		A,(rGhostX)
 103: 4073+4	9332  4F      					LD		C,A
 104: 4077+12	9333  182A    					JR		rGhostPathFind
 105:     -	9335          	rGhostCheckD:			
 106: 4089+11	9335  F5      					PUSH	AF
 107: 4100+13	9336  3A1181  					LD		A, (rGhostY)
 108: 4113+4	9339  3C      					INC		A
 109: 4117+7	933A  E61F    					AND		00011111B
 110: 4124+4	933C  47      					LD		B,A
 111: 4128+13	933D  3A1081  					LD		A,(rGhostX)
 112: 4141+4	9340  4F      					LD		C,A
 113: 4145+12	9341  181C    					JR		rGhostPathFind
 114:     -	9343          	rGhostCheckL:		
 115: 4157+11	9343  F5      					PUSH	AF	
 116: 4168+13	9344  3A1081  					LD		A, (rGhostX)
 117: 4181+4	9347  3D      					DEC		A
 118: 4185+7	9348  E61F    					AND		00011111B
 119: 4192+4	934A  4F      					LD		C,A
 120: 4196+13	934B  3A1181  					LD		A,(rGhostY)
 121: 4209+4	934E  47      					LD		B,A
 122: 4213+12	934F  180E    					JR		rGhostPathFind
 123:     -	9351          	rGhostCheckR:
 124: 4225+11	9351  F5      					PUSH	AF	
 125: 4236+13	9352  3A1081  					LD		A, (rGhostX)
 126: 4249+4	9355  3C      					INC		A
 127: 4253+7	9356  E61F    					AND		00011111B
 128: 4260+4	9358  4F      					LD		C,A
 129: 4264+13	9359  3A1181  					LD		A,(rGhostY)
 130: 4277+4	935C  47      					LD		B,A
 131: 4281+12	935D  1800    					JR		rGhostPathFind
 132:				
 133:     -	935F          	rGhostPathFind:
 134: 4293+17	935F  CD7898  					CALL	getAddressPF
 135: 4310+13	9362  3A1381  					LD		A,(ghostDis)
 136: 4323+7	9365  5E      					LD		E,(HL)
 137: 4330+4	9366  BB      					CP		E
 138: 4334+11	9367  F5      	                PUSH    AF
 139: 4345+13	9368  3A0481  	                LD      A,(pPActive)            ;Check power pellet is not activ, if it is, run away
 140: 4358+4	936B  B7      	                OR      A
 141: 4362+10	936C  C27693  	                JP      NZ,rGhostPFPP
 142: 4372+10	936F  F1      	                POP     AF
 143: 4382+10	9370  D28293  					JP		NC,rGhostSetNewDir
 144: 4392+10	9373  F1      	                POP     AF
 145: 4402+10	9374  F1      					POP		AF
 146: 4412+10	9375  C9      					RET
 147:     -	9376          	rGhostPFPP:
 148: 4422+10	9376  F1      	                POP     AF
 149: 4432+10	9377  DA8293  	                JP		C,rGhostSetNewDir
 150: 4442+7	937A  FEFF    	                CP      0FFH
 151: 4449+10	937C  CA8293  	                JP      Z,rGhostSetNewDir
 152: 4459+10	937F  F1      	                POP     AF
 153: 4469+10	9380  F1      					POP		AF
 154: 4479+10	9381  C9      	                RET
 155:				
 156:     -	9382          	rGhostSetNewDir:
 157: 4489+4	9382  7B      					LD		A,E
 158: 4493+13	9383  321381  					LD		(ghostDis),A
 159: 4506+10	9386  F1      					POP		AF
 160: 4516+13	9387  321281  					LD		(rGhostDir),A
 161: 4529+10	938A  C9      					RET
 162:				
 163:     -	938B          	rGhostColide:   
 164: 4539+13	938B  3A0081  	                LD      A,(pacx)                ;Compair X
 165: 4552+4	938E  47      	                LD      B,A
 166: 4556+13	938F  3A1081  	                LD      A,(rGhostX)
 167: 4569+4	9392  B8      	                CP      B
 168: 4573+5+6	9393  C0      	                RET     NZ
 169: 4578+13	9394  3A0181  	                LD      A,(pacy)                ;Compair Y
 170: 4591+4	9397  47      	                LD      B,A
 171: 4595+13	9398  3A1181  	                LD      A,(rGhostY)
 172: 4608+4	939B  B8      	                CP      B
 173: 4612+5+6	939C  C0      	                RET     NZ
 174: 4617+13	939D  3A0481  	                LD      A,(pPActive)              ;Colishion Happened
 175: 4630+4	93A0  B7      	                OR      A
 176: 4634+10	93A1  CA9491  	                JP      Z,killPacman               ;If power pellet not active, run genric deth lib
 177: 4644+17	93A4  CD8492  					CALL	eatGhost
 178: 4661+7	93A7  3E0E    	                LD		a, rGhostStoreX	           ;set rGhost Pos
 179: 4668+13	93A9  321081  				    LD		(rGhostX),a
 180: 4681+7	93AC  3E0B    				    LD		a, rGhostStoreY
 181: 4688+13	93AE  321181  				    LD		(rGhostY),a
 182: 4701+7	93B1  3E10    	                LD		a, rGhostInitTimer
 183: 4708+13	93B3  321581  				    LD		(rGhostTimer),a
 184: 4721+10	93B6  C9      	                RET
 185:				;x = l
 186:				;y = h
 187:     -	93B7          	rGhostStack:
 188: 4731+4	93B7  7D      					LD      A,L               		;Compair X
 189: 4735+4	93B8  47      	                LD      B,A
 190: 4739+13	93B9  3A1081  	                LD      A,(rGhostX)
 191: 4752+4	93BC  B8      	                CP      B
 192: 4756+5+6	93BD  C0      	                RET     NZ
 193: 4761+4	93BE  7C      	                LD      A,h                		;Compair Y
 194: 4765+4	93BF  47      	                LD      B,A
 195: 4769+13	93C0  3A1181  	                LD      A,(rGhostY)
 196: 4782+4	93C3  B8      	                CP      B
 197: 4786+10	93C4  C9      	                RET
 198:				
**** ghosts.asm ****
 132:     -	93C5  1B5B3931	rGhost:		.BYTE	1BH,"[91mM",1BH,"[0m",0
	              6D4D1B5B
	              306D00
 133:				include ghosts/orange.asm
**** ghosts/orange.asm ****
   1:     -	000F          	oGhostInitX	    .EQU	15
   2:     -	0008          	oGhostInitY	    .EQU	8
   3:     -	0020          	oGhostInitTimer .EQU    20H
   4:     -	000F          	oGhostStoreX	.EQU	15
   5:     -	000B          	oGhostStoreY	.EQU	11
   6:				
   7:     -	8120          	oGhostX		    .EQU	8120H		
   8:     -	8121          	oGhostY		    .EQU	8121H
   9:     -	8122          	oGhostDir		.EQU	8122H
  10:     -	8125          	oGhostTimer     .EQU    8125H
  11:				
  12:     -	93D0          	oGhostClear:
  13: 4796+13	93D0  3A2081  					LD		A, (oGhostX)		;Push X to stack
  14: 4809+4	93D3  4F      					LD		C,A
  15: 4813+13	93D4  3A2181  					LD		A, (oGhostY)		;Push Y to stack
  16: 4826+4	93D7  47      					LD		B,A
  17: 4830+17	93D8  CD9098  					CALL 	printMapAt
  18: 4847+10	93DB  C9      					RET
  19:								
  20:     -	93DC          	oGhostPrint:
  21: 4857+13	93DC  3A2081  					LD		A, (oGhostX)		;Push X to stack
  22: 4870+4	93DF  3C      					INC		A
  23: 4874+4	93E0  4F      					LD		C,A
  24: 4878+13	93E1  3A2181  					LD		A, (oGhostY)		;Push Y to stack
  25: 4891+4	93E4  3C      					INC		A
  26: 4895+4	93E5  47      					LD		B,A
  27: 4899+17	93E6  CDB3A0  					CALL	moveCursor
  28: 4916+13	93E9  3A0481  	                LD      A,(pPActive)
  29: 4929+4	93EC  B7      	                OR      A
  30: 4933+10	93ED  C20F92  	                JP      NZ, printSGhost
  31: 4943+10	93F0  210695  					LD		HL, oGhost
  32: 4953+17	93F3  CD29A1  					CALL 	print
  33: 4970+10	93F6  C9      					RET
  34:     -	93F7          	oGhostMapData:	
  35: 4980+13	93F7  3A2081  					LD		A, (oGhostX)
  36: 4993+4	93FA  4F      					LD		C,A
  37: 4997+13	93FB  3A2181  					LD		A, (oGhostY)
  38: 5010+4	93FE  47      					LD		B,A
  39: 5014+17	93FF  CDFA97  					CALL	getMapAddress
  40: 5031+7	9402  7E      	                LD      A,(HL)
  41: 5038+10	9403  C9      					ret
  42:				
  43:				
  44:     -	9404          	oGhostInit:   
  45: 5048+7	9404  3E0F    	                LD		a, oGhostStoreX	;set oGhost Pos
  46: 5055+13	9406  322081  				    LD		(oGhostX),a
  47: 5068+7	9409  3E0B    				    LD		a, oGhostStoreY
  48: 5075+13	940B  322181  				    LD		(oGhostY),a
  49: 5088+7	940E  3E20    	                LD		a, oGhostInitTimer
  50: 5095+13	9410  322581  				    LD		(oGhostTimer),a
  51: 5108+10	9413  C9      	                RET
  52:				
  53:     -	9414          	oGhostMove:
  54: 5118+13	9414  3A2581  	                LD      A,(oGhostTimer)     ;Dont move if the ghost is in jale
  55: 5131+4	9417  B7      	                OR      A                
  56: 5135+10	9418  C22D94  	                JP      NZ,oGhostDecTimer   ;Decrement the timer if its x
  57: 5145+13	941B  3A0481  	                LD      A,(pPActive)
  58: 5158+8	941E  CB47    	                BIT     0,A                 ;Move every other tick, bit 0 will always 0 when the power pellet isnt active
  59: 5166+5+6	9420  C0      	                RET     NZ
  60: 5171+13	9421  3A2281  					LD		A,(oGhostDir)
  61: 5184+10	9424  112081  					LD		DE,oGhostX
  62: 5194+10	9427  012181  					LD		BC,oGhostY
  63: 5204+10	942A  C32292  					JP		ghostMove
  64:				
  65:     -	942D          	oGhostDecTimer:
  66: 5214+4	942D  3D      	                DEC     A
  67: 5218+13	942E  322581  	                LD      (oGhostTimer),A
  68: 5231+4	9431  B7      	                OR      A
  69: 5235+5+6	9432  C0      	                RET     NZ              ;IF Zero move ghost out of jale
  70: 5240+7	9433  3E0F    	                LD		a, oGhostInitX	;set oGhost Pos
  71: 5247+13	9435  322081  				    LD		(oGhostX),a
  72: 5260+7	9438  3E08    				    LD		a, oGhostInitY
  73: 5267+13	943A  322181  				    LD		(oGhostY),a
  74: 5280+10	943D  C9      	                RET
  75:				
  76:     -	943E          	oGhostNextMove:
  77: 5290+7	943E  3EFF    					LD		A, 0FFH
  78: 5297+13	9440  321381  					LD		(ghostDis),A
  79: 5310+17	9443  CDF793  					CALL	oGhostMapData
  80: 5327+4	9446  57      					LD		D,A
  81: 5331+7	9447  3E57    					LD		A,	'W'			;check up
  82: 5338+17	9449  CDCF97  					CALL	isMoveValid
  83: 5355+10+7	944C  C46894  					CALL	NZ,oGhostCheckU
  84: 5365+7	944F  3E53    					LD		A,	'S'			;down
  85: 5372+17	9451  CDCF97  					CALL	isMoveValid
  86: 5389+10+7	9454  C47694  					CALL	NZ,oGhostCheckD
  87: 5399+7	9457  3E41    					LD		A,	'A'			;left
  88: 5406+17	9459  CDCF97  					CALL	isMoveValid
  89: 5423+10+7	945C  C48494  					CALL	NZ,oGhostCheckL
  90: 5433+7	945F  3E44    					LD		A,	'D'			;right
  91: 5440+17	9461  CDCF97  					CALL	isMoveValid
  92: 5457+10+7	9464  C49294  					CALL	NZ,oGhostCheckR
  93: 5467+10	9467  C9      					RET
  94:								
  95:     -	9468          	oGhostCheckU:	
  96: 5477+11	9468  F5      					PUSH	AF
  97: 5488+13	9469  3A2181  					LD		A, (oGhostY)
  98: 5501+4	946C  3D      					DEC		A
  99: 5505+7	946D  E61F    					AND		00011111B
 100: 5512+4	946F  47      					LD		B,A
 101: 5516+13	9470  3A2081  					LD		A,(oGhostX)
 102: 5529+4	9473  4F      					LD		C,A
 103: 5533+12	9474  182A    					JR		oGhostPathFind
 104:     -	9476          	oGhostCheckD:			
 105: 5545+11	9476  F5      					PUSH	AF
 106: 5556+13	9477  3A2181  					LD		A, (oGhostY)
 107: 5569+4	947A  3C      					INC		A
 108: 5573+7	947B  E61F    					AND		00011111B
 109: 5580+4	947D  47      					LD		B,A
 110: 5584+13	947E  3A2081  					LD		A,(oGhostX)
 111: 5597+4	9481  4F      					LD		C,A
 112: 5601+12	9482  181C    					JR		oGhostPathFind
 113:     -	9484          	oGhostCheckL:		
 114: 5613+11	9484  F5      					PUSH	AF	
 115: 5624+13	9485  3A2081  					LD		A, (oGhostX)
 116: 5637+4	9488  3D      					DEC		A
 117: 5641+7	9489  E61F    					AND		00011111B
 118: 5648+4	948B  4F      					LD		C,A
 119: 5652+13	948C  3A2181  					LD		A,(oGhostY)
 120: 5665+4	948F  47      					LD		B,A
 121: 5669+12	9490  180E    					JR		oGhostPathFind
 122:     -	9492          	oGhostCheckR:
 123: 5681+11	9492  F5      					PUSH	AF	
 124: 5692+13	9493  3A2081  					LD		A, (oGhostX)
 125: 5705+4	9496  3C      					INC		A
 126: 5709+7	9497  E61F    					AND		00011111B
 127: 5716+4	9499  4F      					LD		C,A
 128: 5720+13	949A  3A2181  					LD		A,(oGhostY)
 129: 5733+4	949D  47      					LD		B,A
 130: 5737+12	949E  1800    					JR		oGhostPathFind
 131:				
 132:     -	94A0          	oGhostPathFind:
 133: 5749+17	94A0  CD7898  					CALL	getAddressPF
 134: 5766+13	94A3  3A1381  					LD		A,(ghostDis)
 135: 5779+7	94A6  5E      					LD		E,(HL)
 136: 5786+4	94A7  BB      					CP		E
 137: 5790+11	94A8  F5      	                PUSH    AF
 138: 5801+13	94A9  3A0481  	                LD      A,(pPActive)            ;Check power pellet is not activ, if it is, run away
 139: 5814+4	94AC  B7      	                OR      A
 140: 5818+10	94AD  C2B794  	                JP      NZ,oGhostPFPP
 141: 5828+10	94B0  F1      	                POP     AF
 142: 5838+10	94B1  D2C394  					JP		NC,oGhostSetNewDir
 143: 5848+10	94B4  F1      	                POP     AF
 144: 5858+10	94B5  F1      					POP		AF
 145: 5868+10	94B6  C9      					RET
 146:     -	94B7          	oGhostPFPP:
 147: 5878+10	94B7  F1      	                POP     AF
 148: 5888+10	94B8  DAC394  	                JP		C,oGhostSetNewDir
 149: 5898+7	94BB  FEFF    	                CP      0FFH
 150: 5905+10	94BD  CAC394  	                JP      Z,oGhostSetNewDir
 151: 5915+10	94C0  F1      	                POP     AF
 152: 5925+10	94C1  F1      					POP		AF
 153: 5935+10	94C2  C9      	                RET
 154:				
 155:     -	94C3          	oGhostSetNewDir:
 156: 5945+4	94C3  7B      					LD		A,E
 157: 5949+13	94C4  321381  					LD		(ghostDis),A
 158: 5962+10	94C7  F1      					POP		AF
 159: 5972+13	94C8  322281  					LD		(oGhostDir),A
 160: 5985+10	94CB  C9      					RET
 161:				
 162:     -	94CC          	oGhostColide:   
 163: 5995+13	94CC  3A0081  	                LD      A,(pacx)                ;Compair X
 164: 6008+4	94CF  47      	                LD      B,A
 165: 6012+13	94D0  3A2081  	                LD      A,(oGhostX)
 166: 6025+4	94D3  B8      	                CP      B
 167: 6029+5+6	94D4  C0      	                RET     NZ
 168: 6034+13	94D5  3A0181  	                LD      A,(pacy)                ;Compair Y
 169: 6047+4	94D8  47      	                LD      B,A
 170: 6051+13	94D9  3A2181  	                LD      A,(oGhostY)
 171: 6064+4	94DC  B8      	                CP      B
 172: 6068+5+6	94DD  C0      	                RET     NZ
 173: 6073+13	94DE  3A0481  	                LD      A,(pPActive)              ;Colishion Happened
 174: 6086+4	94E1  B7      	                OR      A
 175: 6090+10	94E2  CA9491  	                JP      Z,killPacman               ;If power pellet not active, run genric deth lib
 176: 6100+17	94E5  CD8492  					CALL	eatGhost
 177: 6117+7	94E8  3E0F    	                LD		a, oGhostStoreX	           ;set oGhost Pos
 178: 6124+13	94EA  322081  				    LD		(oGhostX),a
 179: 6137+7	94ED  3E0B    				    LD		a, oGhostStoreY
 180: 6144+13	94EF  322181  				    LD		(oGhostY),a
 181: 6157+7	94F2  3E20    	                LD		a, oGhostInitTimer
 182: 6164+13	94F4  322581  				    LD		(oGhostTimer),a
 183: 6177+10	94F7  C9      	                RET
 184:				;x = l
 185:				;y = h
 186:     -	94F8          	oGhostStack:
 187: 6187+4	94F8  7D      					LD      A,L               		;Compair X
 188: 6191+4	94F9  47      	                LD      B,A
 189: 6195+13	94FA  3A2081  	                LD      A,(oGhostX)
 190: 6208+4	94FD  B8      	                CP      B
 191: 6212+5+6	94FE  C0      	                RET     NZ
 192: 6217+4	94FF  7C      	                LD      A,h                		;Compair Y
 193: 6221+4	9500  47      	                LD      B,A
 194: 6225+13	9501  3A2181  	                LD      A,(oGhostY)
 195: 6238+4	9504  B8      	                CP      B
 196: 6242+10	9505  C9      	                RET
 197:				
**** ghosts.asm ****
 134:     -	9506  1B5B3333	oGhost:		.BYTE	1BH,"[33mM",1BH,"[0m",0
	              6D4D1B5B
	              306D00
 135:				include ghosts/pink.asm
**** ghosts/pink.asm ****
   1:     -	000F          	pGhostInitX	    .EQU	15
   2:     -	0008          	pGhostInitY	    .EQU	8
   3:     -	0030          	pGhostInitTimer .EQU    30H
   4:     -	0010          	pGhostStoreX	.EQU	16
   5:     -	000B          	pGhostStoreY	.EQU	11
   6:				
   7:     -	8130          	pGhostX		    .EQU	8130H		
   8:     -	8131          	pGhostY		    .EQU	8131H
   9:     -	8132          	pGhostDir		.EQU	8132H
  10:     -	8135          	pGhostTimer     .EQU    8135H
  11:				
  12:     -	9511          	pGhostClear:
  13: 6252+13	9511  3A3081  					LD		A, (pGhostX)		;Push X to stack
  14: 6265+4	9514  4F      					LD		C,A
  15: 6269+13	9515  3A3181  					LD		A, (pGhostY)		;Push Y to stack
  16: 6282+4	9518  47      					LD		B,A
  17: 6286+17	9519  CD9098  					CALL 	printMapAt
  18: 6303+10	951C  C9      					RET
  19:								
  20:     -	951D          	pGhostPrint:
  21: 6313+13	951D  3A3081  					LD		A, (pGhostX)		;Push X to stack
  22: 6326+4	9520  3C      					INC		A
  23: 6330+4	9521  4F      					LD		C,A
  24: 6334+13	9522  3A3181  					LD		A, (pGhostY)		;Push Y to stack
  25: 6347+4	9525  3C      					INC		A
  26: 6351+4	9526  47      					LD		B,A
  27: 6355+17	9527  CDB3A0  					CALL	moveCursor
  28: 6372+13	952A  3A0481  	                LD      A,(pPActive)
  29: 6385+4	952D  B7      	                OR      A
  30: 6389+10	952E  C20F92  	                JP      NZ, printSGhost
  31: 6399+10	9531  214796  					LD		HL, pGhost
  32: 6409+17	9534  CD29A1  					CALL 	print
  33: 6426+10	9537  C9      					RET
  34:     -	9538          	pGhostMapData:	
  35: 6436+13	9538  3A3081  					LD		A, (pGhostX)
  36: 6449+4	953B  4F      					LD		C,A
  37: 6453+13	953C  3A3181  					LD		A, (pGhostY)
  38: 6466+4	953F  47      					LD		B,A
  39: 6470+17	9540  CDFA97  					CALL	getMapAddress
  40: 6487+7	9543  7E      	                LD      A,(HL)
  41: 6494+10	9544  C9      					ret
  42:				
  43:				
  44:     -	9545          	pGhostInit:   
  45: 6504+7	9545  3E10    	                LD		a, pGhostStoreX	;set pGhost Pos
  46: 6511+13	9547  323081  				    LD		(pGhostX),a
  47: 6524+7	954A  3E0B    				    LD		a, pGhostStoreY
  48: 6531+13	954C  323181  				    LD		(pGhostY),a
  49: 6544+7	954F  3E30    	                LD		a, pGhostInitTimer
  50: 6551+13	9551  323581  				    LD		(pGhostTimer),a
  51: 6564+10	9554  C9      	                RET
  52:				
  53:     -	9555          	pGhostMove:
  54: 6574+13	9555  3A3581  	                LD      A,(pGhostTimer)     ;Dont move if the ghost is in jale
  55: 6587+4	9558  B7      	                OR      A                
  56: 6591+10	9559  C26E95  	                JP      NZ,pGhostDecTimer   ;Decrement the timer if its x
  57: 6601+13	955C  3A0481  	                LD      A,(pPActive)
  58: 6614+8	955F  CB47    	                BIT     0,A                 ;Move every other tick, bit 0 will always 0 when the power pellet isnt active
  59: 6622+5+6	9561  C0      	                RET     NZ
  60: 6627+13	9562  3A3281  					LD		A,(pGhostDir)
  61: 6640+10	9565  113081  					LD		DE,pGhostX
  62: 6650+10	9568  013181  					LD		BC,pGhostY
  63: 6660+10	956B  C32292  					JP		ghostMove
  64:				
  65:				
  66:     -	956E          	pGhostDecTimer:
  67: 6670+4	956E  3D      	                DEC     A
  68: 6674+13	956F  323581  	                LD      (pGhostTimer),A
  69: 6687+4	9572  B7      	                OR      A
  70: 6691+5+6	9573  C0      	                RET     NZ              ;IF Zero move ghost out of jale
  71: 6696+7	9574  3E0F    	                LD		a, pGhostInitX	;set pGhost Pos
  72: 6703+13	9576  323081  				    LD		(pGhostX),a
  73: 6716+7	9579  3E08    				    LD		a, pGhostInitY
  74: 6723+13	957B  323181  				    LD		(pGhostY),a
  75: 6736+10	957E  C9      	                RET
  76:				
  77:     -	957F          	pGhostNextMove:
  78: 6746+7	957F  3EFF    					LD		A, 0FFH
  79: 6753+13	9581  321381  					LD		(ghostDis),A
  80: 6766+17	9584  CD3895  					CALL	pGhostMapData
  81: 6783+4	9587  57      					LD		D,A
  82: 6787+7	9588  3E57    					LD		A,	'W'			;check up
  83: 6794+17	958A  CDCF97  					CALL	isMoveValid
  84: 6811+10+7	958D  C4A995  					CALL	NZ,pGhostCheckU
  85: 6821+7	9590  3E53    					LD		A,	'S'			;down
  86: 6828+17	9592  CDCF97  					CALL	isMoveValid
  87: 6845+10+7	9595  C4B795  					CALL	NZ,pGhostCheckD
  88: 6855+7	9598  3E41    					LD		A,	'A'			;left
  89: 6862+17	959A  CDCF97  					CALL	isMoveValid
  90: 6879+10+7	959D  C4C595  					CALL	NZ,pGhostCheckL
  91: 6889+7	95A0  3E44    					LD		A,	'D'			;right
  92: 6896+17	95A2  CDCF97  					CALL	isMoveValid
  93: 6913+10+7	95A5  C4D395  					CALL	NZ,pGhostCheckR
  94: 6923+10	95A8  C9      					RET
  95:								
  96:     -	95A9          	pGhostCheckU:	
  97: 6933+11	95A9  F5      					PUSH	AF
  98: 6944+13	95AA  3A3181  					LD		A, (pGhostY)
  99: 6957+4	95AD  3D      					DEC		A
 100: 6961+7	95AE  E61F    					AND		00011111B
 101: 6968+4	95B0  47      					LD		B,A
 102: 6972+13	95B1  3A3081  					LD		A,(pGhostX)
 103: 6985+4	95B4  4F      					LD		C,A
 104: 6989+12	95B5  182A    					JR		pGhostPathFind
 105:     -	95B7          	pGhostCheckD:			
 106: 7001+11	95B7  F5      					PUSH	AF
 107: 7012+13	95B8  3A3181  					LD		A, (pGhostY)
 108: 7025+4	95BB  3C      					INC		A
 109: 7029+7	95BC  E61F    					AND		00011111B
 110: 7036+4	95BE  47      					LD		B,A
 111: 7040+13	95BF  3A3081  					LD		A,(pGhostX)
 112: 7053+4	95C2  4F      					LD		C,A
 113: 7057+12	95C3  181C    					JR		pGhostPathFind
 114:     -	95C5          	pGhostCheckL:		
 115: 7069+11	95C5  F5      					PUSH	AF	
 116: 7080+13	95C6  3A3081  					LD		A, (pGhostX)
 117: 7093+4	95C9  3D      					DEC		A
 118: 7097+7	95CA  E61F    					AND		00011111B
 119: 7104+4	95CC  4F      					LD		C,A
 120: 7108+13	95CD  3A3181  					LD		A,(pGhostY)
 121: 7121+4	95D0  47      					LD		B,A
 122: 7125+12	95D1  180E    					JR		pGhostPathFind
 123:     -	95D3          	pGhostCheckR:
 124: 7137+11	95D3  F5      					PUSH	AF	
 125: 7148+13	95D4  3A3081  					LD		A, (pGhostX)
 126: 7161+4	95D7  3C      					INC		A
 127: 7165+7	95D8  E61F    					AND		00011111B
 128: 7172+4	95DA  4F      					LD		C,A
 129: 7176+13	95DB  3A3181  					LD		A,(pGhostY)
 130: 7189+4	95DE  47      					LD		B,A
 131: 7193+12	95DF  1800    					JR		pGhostPathFind
 132:				
 133:     -	95E1          	pGhostPathFind:
 134: 7205+17	95E1  CD7898  					CALL	getAddressPF
 135: 7222+13	95E4  3A1381  					LD		A,(ghostDis)
 136: 7235+7	95E7  5E      					LD		E,(HL)
 137: 7242+4	95E8  BB      					CP		E
 138: 7246+11	95E9  F5      	                PUSH    AF
 139: 7257+13	95EA  3A0481  	                LD      A,(pPActive)            ;Check power pellet is not activ, if it is, run away
 140: 7270+4	95ED  B7      	                OR      A
 141: 7274+10	95EE  C2F895  	                JP      NZ,pGhostPFPP
 142: 7284+10	95F1  F1      	                POP     AF
 143: 7294+10	95F2  D20496  					JP		NC,pGhostSetNewDir
 144: 7304+10	95F5  F1      	                POP     AF
 145: 7314+10	95F6  F1      					POP		AF
 146: 7324+10	95F7  C9      					RET
 147:     -	95F8          	pGhostPFPP:
 148: 7334+10	95F8  F1      	                POP     AF
 149: 7344+10	95F9  DA0496  	                JP		C,pGhostSetNewDir
 150: 7354+7	95FC  FEFF    	                CP      0FFH
 151: 7361+10	95FE  CA0496  	                JP      Z,pGhostSetNewDir
 152: 7371+10	9601  F1      	                POP     AF
 153: 7381+10	9602  F1      					POP		AF
 154: 7391+10	9603  C9      	                RET
 155:				
 156:     -	9604          	pGhostSetNewDir:
 157: 7401+4	9604  7B      					LD		A,E
 158: 7405+13	9605  321381  					LD		(ghostDis),A
 159: 7418+10	9608  F1      					POP		AF
 160: 7428+13	9609  323281  					LD		(pGhostDir),A
 161: 7441+10	960C  C9      					RET
 162:				
 163:     -	960D          	pGhostColide:   
 164: 7451+13	960D  3A0081  	                LD      A,(pacx)                ;Compair X
 165: 7464+4	9610  47      	                LD      B,A
 166: 7468+13	9611  3A3081  	                LD      A,(pGhostX)
 167: 7481+4	9614  B8      	                CP      B
 168: 7485+5+6	9615  C0      	                RET     NZ
 169: 7490+13	9616  3A0181  	                LD      A,(pacy)                ;Compair Y
 170: 7503+4	9619  47      	                LD      B,A
 171: 7507+13	961A  3A3181  	                LD      A,(pGhostY)
 172: 7520+4	961D  B8      	                CP      B
 173: 7524+5+6	961E  C0      	                RET     NZ
 174: 7529+13	961F  3A0481  	                LD      A,(pPActive)              ;Colishion Happened
 175: 7542+4	9622  B7      	                OR      A
 176: 7546+10	9623  CA9491  	                JP      Z,killPacman               ;If power pellet not active, run genric deth lib
 177: 7556+17	9626  CD8492  					CALL	eatGhost
 178: 7573+7	9629  3E10    	                LD		a, pGhostStoreX	           ;set pGhost Pos
 179: 7580+13	962B  323081  				    LD		(pGhostX),a
 180: 7593+7	962E  3E0B    				    LD		a, pGhostStoreY
 181: 7600+13	9630  323181  				    LD		(pGhostY),a
 182: 7613+7	9633  3E30    	                LD		a, pGhostInitTimer
 183: 7620+13	9635  323581  				    LD		(pGhostTimer),a
 184: 7633+10	9638  C9      	                RET
 185:				
 186:				;x = l
 187:				;y = h
 188:     -	9639          	pGhostStack:
 189: 7643+4	9639  7D      					LD      A,L               		;Compair X
 190: 7647+4	963A  47      	                LD      B,A
 191: 7651+13	963B  3A3081  	                LD      A,(pGhostX)
 192: 7664+4	963E  B8      	                CP      B
 193: 7668+5+6	963F  C0      	                RET     NZ
 194: 7673+4	9640  7C      	                LD      A,h                		;Compair Y
 195: 7677+4	9641  47      	                LD      B,A
 196: 7681+13	9642  3A3181  	                LD      A,(pGhostY)
 197: 7694+4	9645  B8      	                CP      B
 198: 7698+10	9646  C9      	                RET
 199:				
**** ghosts.asm ****
 136:     -	9647  1B5B3935	pGhost:		.BYTE	1BH,"[95mM",1BH,"[0m",0
	              6D4D1B5B
	              306D00
 137:				include ghosts/teal.asm
**** ghosts/teal.asm ****
   1:     -	000F          	tGhostInitX	    .EQU	15
   2:     -	0008          	tGhostInitY	    .EQU	8
   3:     -	0040          	tGhostInitTimer .EQU    40H
   4:     -	0011          	tGhostStoreX	.EQU	17 
   5:     -	000B          	tGhostStoreY	.EQU	11
   6:				
   7:     -	8140          	tGhostX		    .EQU	8140H		
   8:     -	8141          	tGhostY		    .EQU	8141H
   9:     -	8142          	tGhostDir		.EQU	8142H
  10:     -	8145          	tGhostTimer     .EQU    8145H
  11:				
  12:     -	9652          	tGhostClear:
  13: 7708+13	9652  3A4081  					LD		A, (tGhostX)		;Push X to stack
  14: 7721+4	9655  4F      					LD		C,A
  15: 7725+13	9656  3A4181  					LD		A, (tGhostY)		;Push Y to stack
  16: 7738+4	9659  47      					LD		B,A
  17: 7742+17	965A  CD9098  					CALL 	printMapAt
  18: 7759+10	965D  C9      					RET
  19:								
  20:     -	965E          	tGhostPrint:
  21: 7769+13	965E  3A4081  					LD		A, (tGhostX)		;Push X to stack
  22: 7782+4	9661  3C      					INC		A
  23: 7786+4	9662  4F      					LD		C,A
  24: 7790+13	9663  3A4181  					LD		A, (tGhostY)		;Push Y to stack
  25: 7803+4	9666  3C      					INC		A
  26: 7807+4	9667  47      					LD		B,A
  27: 7811+17	9668  CDB3A0  					CALL	moveCursor
  28: 7828+13	966B  3A0481  	                LD      A,(pPActive)
  29: 7841+4	966E  B7      	                OR      A
  30: 7845+10	966F  C20F92  	                JP      NZ, printSGhost
  31: 7855+10	9672  218897  					LD		HL, tGhost
  32: 7865+17	9675  CD29A1  					CALL 	print
  33: 7882+10	9678  C9      					RET
  34:     -	9679          	tGhostMapData:	
  35: 7892+13	9679  3A4081  					LD		A, (tGhostX)
  36: 7905+4	967C  4F      					LD		C,A
  37: 7909+13	967D  3A4181  					LD		A, (tGhostY)
  38: 7922+4	9680  47      					LD		B,A
  39: 7926+17	9681  CDFA97  					CALL	getMapAddress
  40: 7943+7	9684  7E      	                LD      A,(HL)
  41: 7950+10	9685  C9      					ret
  42:				
  43:     -	9686          	tGhostInit:   
  44: 7960+7	9686  3E11    	                LD		a, tGhostStoreX	;set tGhost Pos
  45: 7967+13	9688  324081  				    LD		(tGhostX),a
  46: 7980+7	968B  3E0B    				    LD		a, tGhostStoreY
  47: 7987+13	968D  324181  				    LD		(tGhostY),a
  48: 8000+7	9690  3E40    	                LD		a, tGhostInitTimer
  49: 8007+13	9692  324581  				    LD		(tGhostTimer),a
  50: 8020+10	9695  C9      	                RET
  51:				
  52:     -	9696          	tGhostMove:
  53: 8030+13	9696  3A4581  	                LD      A,(tGhostTimer)     ;Dont move if the ghost is in jale
  54: 8043+4	9699  B7      	                OR      A                
  55: 8047+10	969A  C2AF96  	                JP      NZ,tGhostDecTimer   ;Decrement the timer if its x
  56: 8057+13	969D  3A0481  	                LD      A,(pPActive)
  57: 8070+8	96A0  CB47    	                BIT     0,A                 ;Move every other tick, bit 0 will always 0 when the power pellet isnt active
  58: 8078+5+6	96A2  C0      	                RET     NZ
  59: 8083+13	96A3  3A4281  					LD		A,(tGhostDir)
  60: 8096+10	96A6  114081  					LD		DE,tGhostX
  61: 8106+10	96A9  014181  					LD		BC,tGhostY
  62: 8116+10	96AC  C32292  					JP		ghostMove
  63:				
  64:     -	96AF          	tGhostDecTimer:
  65: 8126+4	96AF  3D      	                DEC     A
  66: 8130+13	96B0  324581  	                LD      (tGhostTimer),A
  67: 8143+4	96B3  B7      	                OR      A
  68: 8147+5+6	96B4  C0      	                RET     NZ              ;IF Zero move ghost out of jale
  69: 8152+7	96B5  3E0F    	                LD		a, tGhostInitX	;set tGhost Pos
  70: 8159+13	96B7  324081  				    LD		(tGhostX),a
  71: 8172+7	96BA  3E08    				    LD		a, tGhostInitY
  72: 8179+13	96BC  324181  				    LD		(tGhostY),a
  73: 8192+10	96BF  C9      	                RET
  74:				
  75:     -	96C0          	tGhostNextMove:
  76: 8202+7	96C0  3EFF    					LD		A, 0FFH
  77: 8209+13	96C2  321381  					LD		(ghostDis),A
  78: 8222+17	96C5  CD7996  					CALL	tGhostMapData
  79: 8239+4	96C8  57      					LD		D,A
  80: 8243+7	96C9  3E57    					LD		A,	'W'			;check up
  81: 8250+17	96CB  CDCF97  					CALL	isMoveValid
  82: 8267+10+7	96CE  C4EA96  					CALL	NZ,tGhostCheckU
  83: 8277+7	96D1  3E53    					LD		A,	'S'			;down
  84: 8284+17	96D3  CDCF97  					CALL	isMoveValid
  85: 8301+10+7	96D6  C4F896  					CALL	NZ,tGhostCheckD
  86: 8311+7	96D9  3E41    					LD		A,	'A'			;left
  87: 8318+17	96DB  CDCF97  					CALL	isMoveValid
  88: 8335+10+7	96DE  C40697  					CALL	NZ,tGhostCheckL
  89: 8345+7	96E1  3E44    					LD		A,	'D'			;right
  90: 8352+17	96E3  CDCF97  					CALL	isMoveValid
  91: 8369+10+7	96E6  C41497  					CALL	NZ,tGhostCheckR
  92: 8379+10	96E9  C9      					RET
  93:								
  94:     -	96EA          	tGhostCheckU:	
  95: 8389+11	96EA  F5      					PUSH	AF
  96: 8400+13	96EB  3A4181  					LD		A, (tGhostY)
  97: 8413+4	96EE  3D      					DEC		A
  98: 8417+7	96EF  E61F    					AND		00011111B
  99: 8424+4	96F1  47      					LD		B,A
 100: 8428+13	96F2  3A4081  					LD		A,(tGhostX)
 101: 8441+4	96F5  4F      					LD		C,A
 102: 8445+12	96F6  182A    					JR		tGhostPathFind
 103:     -	96F8          	tGhostCheckD:			
 104: 8457+11	96F8  F5      					PUSH	AF
 105: 8468+13	96F9  3A4181  					LD		A, (tGhostY)
 106: 8481+4	96FC  3C      					INC		A
 107: 8485+7	96FD  E61F    					AND		00011111B
 108: 8492+4	96FF  47      					LD		B,A
 109: 8496+13	9700  3A4081  					LD		A,(tGhostX)
 110: 8509+4	9703  4F      					LD		C,A
 111: 8513+12	9704  181C    					JR		tGhostPathFind
 112:     -	9706          	tGhostCheckL:		
 113: 8525+11	9706  F5      					PUSH	AF	
 114: 8536+13	9707  3A4081  					LD		A, (tGhostX)
 115: 8549+4	970A  3D      					DEC		A
 116: 8553+7	970B  E61F    					AND		00011111B
 117: 8560+4	970D  4F      					LD		C,A
 118: 8564+13	970E  3A4181  					LD		A,(tGhostY)
 119: 8577+4	9711  47      					LD		B,A
 120: 8581+12	9712  180E    					JR		tGhostPathFind
 121:     -	9714          	tGhostCheckR:
 122: 8593+11	9714  F5      					PUSH	AF	
 123: 8604+13	9715  3A4081  					LD		A, (tGhostX)
 124: 8617+4	9718  3C      					INC		A
 125: 8621+7	9719  E61F    					AND		00011111B
 126: 8628+4	971B  4F      					LD		C,A
 127: 8632+13	971C  3A4181  					LD		A,(tGhostY)
 128: 8645+4	971F  47      					LD		B,A
 129: 8649+12	9720  1800    					JR		tGhostPathFind
 130:				
 131:     -	9722          	tGhostPathFind:
 132: 8661+17	9722  CD7898  					CALL	getAddressPF
 133: 8678+13	9725  3A1381  					LD		A,(ghostDis)
 134: 8691+7	9728  5E      					LD		E,(HL)
 135: 8698+4	9729  BB      					CP		E
 136: 8702+11	972A  F5      	                PUSH    AF
 137: 8713+13	972B  3A0481  	                LD      A,(pPActive)            ;Check power pellet is not activ, if it is, run away
 138: 8726+4	972E  B7      	                OR      A
 139: 8730+10	972F  C23997  	                JP      NZ,tGhostPFPP
 140: 8740+10	9732  F1      	                POP     AF
 141: 8750+10	9733  D24597  					JP		NC,tGhostSetNewDir
 142: 8760+10	9736  F1      	                POP     AF
 143: 8770+10	9737  F1      					POP		AF
 144: 8780+10	9738  C9      					RET
 145:     -	9739          	tGhostPFPP:
 146: 8790+10	9739  F1      	                POP     AF
 147: 8800+10	973A  DA4597  	                JP		C,tGhostSetNewDir
 148: 8810+7	973D  FEFF    	                CP      0FFH
 149: 8817+10	973F  CA4597  	                JP      Z,tGhostSetNewDir
 150: 8827+10	9742  F1      	                POP     AF
 151: 8837+10	9743  F1      					POP		AF
 152: 8847+10	9744  C9      	                RET
 153:				
 154:     -	9745          	tGhostSetNewDir:
 155: 8857+4	9745  7B      					LD		A,E
 156: 8861+13	9746  321381  					LD		(ghostDis),A
 157: 8874+10	9749  F1      					POP		AF
 158: 8884+13	974A  324281  					LD		(tGhostDir),A
 159: 8897+10	974D  C9      					RET
 160:				
 161:     -	974E          	tGhostColide:   
 162: 8907+13	974E  3A0081  	                LD      A,(pacx)                ;Compair X
 163: 8920+4	9751  47      	                LD      B,A
 164: 8924+13	9752  3A4081  	                LD      A,(tGhostX)
 165: 8937+4	9755  B8      	                CP      B
 166: 8941+5+6	9756  C0      	                RET     NZ
 167: 8946+13	9757  3A0181  	                LD      A,(pacy)                ;Compair Y
 168: 8959+4	975A  47      	                LD      B,A
 169: 8963+13	975B  3A4181  	                LD      A,(tGhostY)
 170: 8976+4	975E  B8      	                CP      B
 171: 8980+5+6	975F  C0      	                RET     NZ
 172: 8985+13	9760  3A0481  	                LD      A,(pPActive)              ;Colishion Happened
 173: 8998+4	9763  B7      	                OR      A
 174: 9002+10	9764  CA9491  	                JP      Z,killPacman               ;If power pellet not active, run genric deth lib
 175: 9012+17	9767  CD8492  					CALL	eatGhost
 176: 9029+7	976A  3E11    	                LD		a, tGhostStoreX	           ;set tGhost Pos
 177: 9036+13	976C  324081  				    LD		(tGhostX),a
 178: 9049+7	976F  3E0B    				    LD		a, tGhostStoreY
 179: 9056+13	9771  324181  				    LD		(tGhostY),a
 180: 9069+7	9774  3E40    	                LD		a, tGhostInitTimer
 181: 9076+13	9776  324581  				    LD		(tGhostTimer),a
 182: 9089+10	9779  C9      	                RET
 183:				
 184:				;x = l
 185:				;y = h
 186:     -	977A          	tGhostStack:
 187: 9099+4	977A  7D      					LD      A,L               		;Compair X
 188: 9103+4	977B  47      	                LD      B,A
 189: 9107+13	977C  3A4081  	                LD      A,(tGhostX)
 190: 9120+4	977F  B8      	                CP      B
 191: 9124+5+6	9780  C0      	                RET     NZ
 192: 9129+4	9781  7C      	                LD      A,h                		;Compair Y
 193: 9133+4	9782  47      	                LD      B,A
 194: 9137+13	9783  3A4181  	                LD      A,(tGhostY)
 195: 9150+4	9786  B8      	                CP      B
 196: 9154+10	9787  C9      	                RET
 197:				
**** ghosts.asm ****
 138:     -	9788  1B5B3936	tGhost:		.BYTE	1BH,"[96mM",1BH,"[0m",0
	              6D4D1B5B
	              306D00
 139:				
 140:				
 141:     -	9793  1B5B3334	sGhost0:	.BYTE	1BH,"[34mM",1BH,"[0m",0
	              6D4D1B5B
	              306D00
**** main.asm ****
  75:     -	979E  1B5B3937	sGhost1:	.BYTE	1BH,"[97mM",1BH,"[0m",0
	              6D4D1B5B
	              306D00
  76:				;-----------Spesific Libs -----;
  77:				include movelibs.asm	
**** movelibs.asm ****
   1:     -	97A9          	move:
   2: 9164+7	97A9  FE57    					CP		'W'
   3: 9171+7+5	97AB  280A    					JR		Z,moveU
   4: 9178+7	97AD  FE41    					CP		'A'
   5: 9185+7+5	97AF  2812    					JR		Z,moveL
   6: 9192+7	97B1  FE53    					CP		'S'
   7: 9199+7+5	97B3  2808    					JR		Z,moveD
   8: 9206+12	97B5  1812    					JR		moveR
   9:				
  10:     -	97B7          	moveU:			
  11: 9218+7	97B7  0A      					LD		A, (BC)
  12: 9225+4	97B8  3D      					DEC		A
  13: 9229+7	97B9  E61F    					AND		00011111B
  14: 9236+7	97BB  02      					LD		(BC),A
  15: 9243+10	97BC  C9      					RET
  16:     -	97BD          	moveD:			
  17: 9253+7	97BD  0A      					LD		A, (BC)
  18: 9260+4	97BE  3C      					INC		A
  19: 9264+7	97BF  E61F    					AND		00011111B
  20: 9271+7	97C1  02      					LD		(BC),A
  21: 9278+10	97C2  C9      					RET
  22:     -	97C3          	moveL:			
  23: 9288+7	97C3  1A      					LD		A, (DE)
  24: 9295+4	97C4  3D      					DEC		A
  25: 9299+7	97C5  E61F    					AND		00011111B
  26: 9306+7	97C7  12      					LD		(DE),A
  27: 9313+10	97C8  C9      					RET
  28:     -	97C9          	moveR:			
  29: 9323+7	97C9  1A      					LD		A, (DE)
  30: 9330+4	97CA  3C      					INC		A
  31: 9334+7	97CB  E61F    					AND		00011111B
  32: 9341+7	97CD  12      					LD		(DE),A
  33: 9348+10	97CE  C9      					RET
  34:     -	97CF          	isMoveValid:
  35: 9358+7	97CF  FE57    					CP		'W'
  36: 9365+7+5	97D1  280A    					JR		Z,moveUValid
  37: 9372+7	97D3  FE41    					CP		'A'
  38: 9379+7+5	97D5  280C    					JR		Z,moveLValid
  39: 9386+7	97D7  FE53    					CP		'S'
  40: 9393+7+5	97D9  2805    					JR		Z,moveDValid
  41: 9400+12	97DB  1809    					JR		moveRValid
  42:     -	97DD          	moveUValid:			
  43: 9412+8	97DD  CB42    					BIT		upBit,D
  44: 9420+10	97DF  C9      					RET
  45:     -	97E0          	moveDValid:			
  46: 9430+8	97E0  CB4A    					BIT		downBit,D
  47: 9438+10	97E2  C9      					RET
  48:     -	97E3          	moveLValid:			
  49: 9448+8	97E3  CB52    					BIT		leftBit,D
  50: 9456+10	97E5  C9      					RET
  51:     -	97E6          	moveRValid:			
  52: 9466+8	97E6  CB5A    					BIT		rightBit,D
**** main.asm ****
  78: 9474+10	97E8  C9      					RET
  79:				include	mapLibs.asm	
**** mapLibs.asm ****
   1:     -	0030          	pathFindDepth   .EQU	30H
   2:				
   3:     -	00B0          	fruitTicks   	.EQU	0B0H
   4:     -	8106          	fruitTimer  	.EQU    8106H       ;Fruit Timer Location
   5:				
   6:     -	000F          	fruitX			.EQU	15
   7:     -	000E          	fruitY			.EQU	14
   8:				
   9:				;-------- Map -------;
  10:				;InitiMap
  11:     -	97E9          	initMap:
  12: 9484+7	97E9  3EB0    					LD		A,fruitTicks
  13: 9491+13	97EB  320681  					LD		(fruitTimer),A
  14: 9504+10	97EE  010004  					LD		BC,400H
  15: 9514+10	97F1  21C8A1  					LD		HL,map
  16: 9524+10	97F4  1100E0  					LD		DE,liveMap
  17: 9534+16+5	97F7  EDB0    					LDIR
  18: 9550+10	97F9  C9      					RET
  19:				
  20:				;------- Get Map Data ----;
  21:				; C - X
  22:				; B	- Y
  23:     -	97FA          	getMapAddress:
  24: 9560+11	97FA  C5      					push	bc
  25: 9571+8	97FB  CB00    					rlc		b			;Shift b left 5
  26: 9579+8	97FD  CB00    					rlc		b			;Shift b left 5
  27: 9587+8	97FF  CB00    					rlc		b			;Shift b left 5
  28: 9595+8	9801  CB00    					rlc		b			;Shift b left 5
  29: 9603+8	9803  CB00    					rlc		b			;Shift b left 5
  30: 9611+4	9805  78      					ld		a,b
  31: 9615+7	9806  E6E0    					and		11100000b	;Mask lower adress
  32: 9622+4	9808  B1      					or		c			;Combine with C
  33: 9626+4	9809  6F      					ld		l,a			;A is now low byte of adress
  34: 9630+4	980A  78      					ld		a,b
  35: 9634+7	980B  E603    					and		00000011b	;Mask upper adress
  36: 9641+7	980D  F6E0    					or		0E0H		;Start of map
  37: 9648+4	980F  67      					ld		h,a
  38: 9652+10	9810  C1      					pop		bc
  39: 9662+10	9811  C9      					ret
  40:				
  41:     -	9812          	checkFruit:
  42: 9672+13	9812  3A0681  					LD		A,(fruitTimer)
  43: 9685+4	9815  B7      					OR		A
  44: 9689+5+6	9816  C8      					RET		Z
  45: 9694+4	9817  3D      					DEC		A
  46: 9698+13	9818  320681  					LD		(fruitTimer), A
  47: 9711+4	981B  B7      					OR		A
  48: 9715+5+6	981C  C0      					RET		NZ
  49: 9720+7	981D  0E0F    					LD		C,fruitX
  50: 9727+7	981F  060E    					LD		B,fruitY
  51: 9734+17	9821  CDFA97  					CALL	getMapAddress
  52: 9751+15	9824  CBFE    					SET		sfBit,(HL)
  53: 9766+17	9826  CD9098  					CALL	printMapAt	
  54: 9783+10	9829  C9      					RET
  55:				
  56:				;--------Check map for pellets ------;
  57:     -	982A          	checkNextLevel:
  58: 9793+17	982A  CD5098  					CALL	checkMap
  59: 9810+4	982D  7B      					LD		A,E
  60: 9814+4	982E  B7      					OR		A
  61: 9818+5+6	982F  C0      					RET		NZ
  62: 9823+4	9830  7A      					LD		A,D
  63: 9827+4	9831  B7      					OR		A
  64: 9831+5+6	9832  C0      					RET		NZ
  65:				
  66: 9836+16	9833  2A0289  					LD		HL,(level)
  67: 9852+6	9836  23      					INC		HL
  68: 9858+16	9837  220289  					LD		(level),HL
  69: 9874+17	983A  CD689A  					CALL	countdown
  70: 9891+17	983D  CDE997  					CALL	initMap
  71: 9908+17	9840  CDF591  					CALL	initGhost
  72: 9925+17	9843  CDBA90  					CALL	resetPacman
  73: 9942+10	9846  21AEA1  					LD		HL, home		;Go home
  74: 9952+17	9849  CD29A1  					CALL	print
  75: 9969+17	984C  CD9F98  					CALL 	printMap
  76: 9986+10	984F  C9      					ret
  77:				
  78:     -	9850          	checkMap:
  79: 9996+7	9850  3E20    					ld		a,32
  80:10003+4	9852  47      					ld		b,a			; 32 chars per line
  81:10007+4	9853  4F      					ld		c,a			; 32 lines per map
  82:10011+10	9854  2100E0  					ld		hl,liveMap
  83:10021+10	9857  110000  					ld		de,0
  84:10031+7	985A  7E      	checkMapLoop:	ld		a,(hl)		; get char
  85:10038+17	985B  CD6B98  					call	checkMapChar; check the char
  86:10055+6	985E  23      					inc		hl			; next char
  87:10061+8+5	985F  10F9    					djnz	checkMapLoop; if were not at the end of a line, print next char
  88:10069+4	9861  41      					ld		b,c			;are we at the end of a block
  89:10073+8+5	9862  1001    					djnz	checkMapNextLine
  90:10081+10	9864  C9      					ret
  91:     -	9865          	checkMapNextLine:	
  92:10091+4	9865  48      					ld		c,b			;copy decremented b back to c
  93:10095+7	9866  3E20    					ld 		a,32		;refill b withj 32
  94:10102+4	9868  47      					ld		b,a
  95:10106+12	9869  18EF    					jr		checkMapLoop;draw next char
  96:				
  97:     -	986B          	checkMapChar:
  98:10118+8	986B  CB6F    					bit		pelletBit,a
  99:10126+10+7	986D  C47698  					CALL	NZ,incrementDE
 100:10136+8	9870  CB67    					bit		powerpBit,a
 101:10144+10+7	9872  C47698  					CALL	NZ,incrementDE
 102:10154+10	9875  C9      					RET
 103:     -	9876          	incrementDE:
 104:10164+6	9876  13      					INC		DE
 105:10170+10	9877  C9      					RET
 106:				
 107:				;------- Get Path Find Map Address----;
 108:				; C - X
 109:				; B	- Y
 110:     -	9878          	getAddressPF:
 111:10180+11	9878  C5      					push	bc
 112:10191+8	9879  CB00    					rlc		b			;Shift b left 5
 113:10199+8	987B  CB00    					rlc		b			;Shift b left 5
 114:10207+8	987D  CB00    					rlc		b			;Shift b left 5
 115:10215+8	987F  CB00    					rlc		b			;Shift b left 5
 116:10223+8	9881  CB00    					rlc		b			;Shift b left 5
 117:10231+4	9883  78      					ld		a,b
 118:10235+7	9884  E6E0    					and		11100000b	;Mask lower adress
 119:10242+4	9886  B1      					or		c			;Combine with C
 120:10246+4	9887  6F      					ld		l,a			;A is now low byte of adress
 121:10250+4	9888  78      					ld		a,b
 122:10254+7	9889  E603    					and		00000011b	;Mask upper adress
 123:10261+7	988B  F6D0    					or		0D0H		;Start of map
 124:10268+4	988D  67      					ld		h,a
 125:10272+10	988E  C1      					pop		bc
 126:10282+10	988F  C9      					ret
 127:				
 128:				
 129:				;--------- Map print -------- ;
 130:				; C - X
 131:				; B	- Y
 132:     -	9890          	printMapAt:	
 133:10292+11	9890  C5      				PUSH	BC
 134:10303+4	9891  0C      				INC		C
 135:10307+4	9892  04      				INC		B
 136:10311+17	9893  CDB3A0  				CALL	moveCursor
 137:10328+10	9896  C1      				POP 	BC
 138:10338+17	9897  CDFA97  				CALL	getMapAddress
 139:10355+7	989A  7E      				LD		A,(HL)
 140:10362+17	989B  CDBA98  				CALL	pmChar
 141:10379+10	989E  C9      				RET
 142:				
 143:     -	989F          	printMap:
 144:10389+7	989F  3E20    					ld		a,32
 145:10396+4	98A1  47      					ld		b,a			; 32 chars per line
 146:10400+4	98A2  4F      					ld		c,a			; 32 lines per map
 147:10404+10	98A3  2100E0  					ld		hl,liveMap
 148:10414+7	98A6  7E      	pmLoop:			ld		a,(hl)		; get char
 149:10421+17	98A7  CDBA98  					call	pmChar		; decode what to print
 150:10438+6	98AA  23      					inc		hl			; next char
 151:10444+8+5	98AB  10F9    					djnz	pmLoop		; if were not at the end of a line, print next char
 152:10452+17	98AD  CDAAA0  					call	newline		; if we are, print a new line
 153:10469+4	98B0  41      					ld		b,c			;are we at the end of a block
 154:10473+8+5	98B1  1001    					djnz	pmNextLine
 155:10481+10	98B3  C9      					ret
 156:     -	98B4          	pmNextLine:	
 157:10491+4	98B4  48      					ld		c,b			;copy decremented b back to c
 158:10495+7	98B5  3E20    					ld 		a,32		;refill b withj 32
 159:10502+4	98B7  47      					ld		b,a
 160:10506+12	98B8  18EC    					jr		pmLoop		;draw next char
 161:				
 162:				
 163:     -	98BA          	pmChar:		;-- Print map char a
 164:10518+11	98BA  E5      					push	hl
 165:10529+8	98BB  CB67    					bit		powerpBit,a
 166:10537+7+5	98BD  200E    					jr		nz,printPP
 167:10544+8	98BF  CB6F    					bit		pelletBit,a
 168:10552+7+5	98C1  2012    					jr		nz,printP
 169:10559+8	98C3  CB77    					bit		wallBit,a
 170:10567+7+5	98C5  2016    					jr		nz,printWall
 171:10574+8	98C7  CB7F    					bit		sfBit,a
 172:10582+7+5	98C9  201A    					jr		nz,printSF
 173:10589+12	98CB  1820    					jr	 	printVoid
 174:							
 175:     -	98CD          	printPP:
 176:10601+10	98CD  218BA1  					ld		hl,powerPellet
 177:10611+17	98D0  CD29A1  					call	print
 178:10628+12	98D3  1820    					jr		pmCharRet
 179:     -	98D5          	printP:
 180:10640+10	98D5  2196A1  					ld		hl,pellet
 181:10650+17	98D8  CD29A1  					call	print
 182:10667+12	98DB  1818    					jr		pmCharRet
 183:     -	98DD          	printWall:
 184:10679+10	98DD  2180A1  					ld		hl,wall
 185:10689+17	98E0  CD29A1  					call	print
 186:10706+12	98E3  1810    					jr		pmCharRet
 187:     -	98E5          	printSF:
 188:10718+10	98E5  21A1A1  					ld		hl,superFruit
 189:10728+17	98E8  CD29A1  					call	print
 190:10745+12	98EB  1808    					jr		pmCharRet
 191:     -	98ED          	printVoid:
 192:10757+10	98ED  21ACA1  					ld		hl,void
 193:10767+17	98F0  CD29A1  					call	print
 194:10784+12	98F3  1800    					jr		pmCharRet
 195:     -	98F5          	pmCharRet:	
 196:10796+10	98F5  E1      					pop 	hl
 197:10806+10	98F6  C9      					ret
 198:								
 199:				;-------- Path Find Map -------;
 200:				;Initi Path Find Map
 201:     -	98F7          	initPathFind:
 202:10816+7	98F7  3E20    					ld		a,32
 203:10823+4	98F9  47      					ld		b,a			; 32 chars per line
 204:10827+4	98FA  4F      					ld		c,a			; 32 lines per map
 205:10831+10	98FB  2100D0  					ld		hl,pathFindMap
 206:10841+7	98FE  16FF    	initpPFLoop:	ld		D,0FFH		; set char
 207:10848+7	9900  72      					LD		(HL),D
 208:10855+6	9901  23      					inc		hl			; next char
 209:10861+8+5	9902  10FA    					djnz	initpPFLoop		; if were not at the end of a line, print next char
 210:10869+4	9904  41      					ld		b,c			;are we at the end of a block
 211:10873+8+5	9905  1001    					djnz	pfNextRow
 212:10881+10	9907  C9      					ret
 213:     -	9908          	pfNextRow:	
 214:10891+4	9908  48      					ld		c,b			;copy decremented b back to c
 215:10895+7	9909  3E20    					ld 		a,32		;refill b withj 32
 216:10902+4	990B  47      					ld		b,a
 217:10906+10	990C  C3FE98  					jp		initpPFLoop		;draw next char
 218:				
 219:				;Calculate Map
 220:     -	990F          	calculatePathMap:
 221:10916+10	990F  01FFFF  					ld		BC,0FFFFH		;Push Stack terminator		
 222:10926+11	9912  C5      					PUSH	BC
 223:10937+13	9913  3A0081  					LD		A, (pacx)		;Push X to stack
 224:10950+4	9916  4F      					LD		C,A
 225:10954+13	9917  3A0181  					LD		A, (pacy)		;Push Y to stack
 226:10967+4	991A  47      					LD		B,A
 227:10971+17	991B  CD7898  					CALL	getAddressPF
 228:10988+10	991E  3600    					LD		(HL),00H
 229:10998+11	9920  C5      					PUSH	BC
 230:     -	9921          	calculatePathMapLoop:
 231:11009+10	9921  C1      					POP		BC			;Get node to visit
 232:11019+4	9922  78      					LD		A,B			;Check Its not FFFF
 233:11023+4	9923  B7      					OR		A
 234:11027+7	9924  FEFF    					CP		0FFH
 235:11034+5+6	9926  C8      					RET		Z			;We only have to check half the byte as its imposable to have a cord more than 20h
 236:11039+20	9927  ED43F289					LD		(originalBC),BC
 237:11059+17	992B  CD7898  					CALL	getAddressPF
 238:11076+7	992E  7E      					LD		A,(HL)
 239:11083+4	992F  3C      					INC		A
 240:11087+7	9930  FE30    	                CP      pathFindDepth
 241:11094+10	9932  CA2199  					JP 		Z,calculatePathMapLoop	;Skip if wer getting too long
 242:11104+4	9935  5F      					LD		E,A			;Keep the distance were working with safe
 243:11108+17	9936  CDFA97  					CALL	getMapAddress
 244:11125+7	9939  56      					LD		D,(HL)
 245:11132+7	993A  3E57    					LD		A,	'W'			;check up
 246:11139+17	993C  CDCF97  					CALL	isMoveValid
 247:11156+10+7	993F  C45D99  					CALL	NZ,calculateMapU
 248:11166+7	9942  3E53    					LD		A,	'S'			;down
 249:11173+17	9944  CDCF97  					CALL	isMoveValid
 250:11190+10+7	9947  C46999  					CALL	NZ,calculateMapD
 251:11200+7	994A  3E41    					LD		A,	'A'			;left
 252:11207+17	994C  CDCF97  					CALL	isMoveValid
 253:11224+10+7	994F  C47599  					CALL	NZ,calculateMapL
 254:11234+7	9952  3E44    					LD		A,	'D'			;right
 255:11241+17	9954  CDCF97  					CALL	isMoveValid
 256:11258+10+7	9957  C48199  					CALL	NZ,calculateMapR
 257:11268+10	995A  C32199  					JP		calculatePathMapLoop
 258:								
 259:     -	995D          	calculateMapU:	
 260:11278+20	995D  ED4BF289					LD		BC,(originalBC)			;We want to preserve the OG BC Through this process so it can be used again in sub directions		
 261:11298+4	9961  78      					LD		A, B				;Make modifications to corod
 262:11302+4	9962  3D      					DEC		A
 263:11306+7	9963  E61F    					AND		00011111B			;Mask for looping
 264:11313+4	9965  47      					LD		B,A
 265:11317+10	9966  C38D99  					JP		calculateMapCell
 266:     -	9969          	calculateMapD:	
 267:11327+20	9969  ED4BF289					LD		BC,(originalBC)	
 268:11347+4	996D  78      					LD		A, B
 269:11351+4	996E  3C      					INC		A
 270:11355+7	996F  E61F    					AND		00011111B
 271:11362+4	9971  47      					LD		B,A
 272:11366+10	9972  C38D99  					JP		calculateMapCell
 273:     -	9975          	calculateMapL:	
 274:11376+20	9975  ED4BF289					LD		BC,(originalBC)
 275:11396+4	9979  79      					LD		A, C
 276:11400+4	997A  3D      					DEC		A
 277:11404+7	997B  E61F    					AND		00011111B
 278:11411+4	997D  4F      					LD		C,A
 279:11415+10	997E  C38D99  					JP		calculateMapCell
 280:     -	9981          	calculateMapR:
 281:11425+20	9981  ED4BF289					LD		BC,(originalBC)
 282:11445+4	9985  79      					LD		A, C
 283:11449+4	9986  3C      					INC		A
 284:11453+7	9987  E61F    					AND		00011111B
 285:11460+4	9989  4F      					LD		C,A
 286:11464+10	998A  C38D99  					JP		calculateMapCell
 287:				
 288:     -	998D          	calculateMapCell:
 289:11474+17	998D  CD7898  					CALL	getAddressPF
 290:11491+7	9990  7E      					LD		A,(HL)
 291:				
 292:11498+4	9991  BB      					CP		E			;Compare current data (A) with E (the path were looking at)
 293:11502+5+6	9992  D8      					RET		C			;If carry is set (A < E)(whats there already < our path) then this route is a dud
 294:11507+5+6	9993  C8      					RET		Z			;If its equal we dont want to continue as we alreay have an equally fast route
 295:11512+7	9994  73      					LD		(HL),E
 296:11519+10	9995  E1      					POP		HL			;We need the return adress on the top of the stack
 297:11529+11	9996  C5      					PUSH	BC			;Push Cell so it can be visited
 298:11540+11	9997  E5      					PUSH	HL
 299:11551+10	9998  C9      					RET
 300:				
 301:     -	9999          	printPFMap:
 302:11561+7	9999  0E01    	                LD		C, $01
 303:11568+7	999B  061A    					LD		B, $1A
 304:11575+17	999D  CDB3A0  					CALL	moveCursor
 305:11592+7	99A0  3E20    					ld		a,32
 306:11599+4	99A2  47      					ld		b,a			; 32 chars per line
 307:11603+7	99A3  3E1A    	                ld		a,$1A
 308:11610+4	99A5  4F      					ld		c,a			; 32 lines per map
 309:11614+10	99A6  2100D0  					ld		hl,pathFindMap
 310:11624+7	99A9  7E      	pmPFLoop:		ld		a,(hl)		; get char
 311:11631+7	99AA  FEFF    	                cp      0FFH
 312:11638+10	99AC  CAC599  	                JP      Z,pmPFSkip
 313:11648+17	99AF  CDF9A0  					call	NumToHex	; decode what to print
 314:11665+7	99B2  3E20    	pmPFAfterSkip:  ld      a,' '
 315:11672+11	99B4  CF      	                rst     08H
 316:11683+6	99B5  23      					inc		hl			; next char
 317:11689+8+5	99B6  10F1    					djnz	pmPFLoop		; if were not at the end of a line, print next char
 318:11697+17	99B8  CDAAA0  					call	newline		; if we are, print a new line
 319:11714+4	99BB  41      					ld		b,c			;are we at the end of a block
 320:11718+8+5	99BC  1001    					djnz	pmPFNextLine
 321:11726+10	99BE  C9      					ret
 322:     -	99BF          	pmPFNextLine:	
 323:11736+4	99BF  48      					ld		c,b			;copy decremented b back to c
 324:11740+7	99C0  3E20    					ld 		a,32		;refill b withj 32
 325:11747+4	99C2  47      					ld		b,a
 326:11751+12	99C3  18E4    					jr		pmPFLoop	;draw next char
 327:     -	99C5          	pmPFSkip:       
 328:11763+7	99C5  3E20    	                ld      a,' '
 329:11770+11	99C7  CF      	                rst     08H
 330:11781+7	99C8  3E20    	                ld      a,' '
 331:11788+11	99CA  CF      	                rst     08H
**** main.asm ****
  80:11799+10	99CB  C3B299  	                JP      pmPFAfterSkip
  81:				
  82:				;------HUD;
  83:				include hud.asm
**** hud.asm ****
   1:     -	8900          	score			.EQU	8900H		;Score
   2:     -	8902          	level			.EQU	8902H		;Score
   3:     -	8904          	fruits			.EQU	8904H		;Score
   4:				
   5:     -	99CE          	printHud:
   6:11809+17	99CE  CDDB99  					CALL	printScore
   7:11826+17	99D1  CD039A  					CALL	printLives
   8:11843+17	99D4  CDEF99  					CALL	printLevel
   9:11860+17	99D7  CD289A  					CALL	printFruit
  10:11877+10	99DA  C9      					RET
  11:				;Hud elements
  12:     -	99DB          	printScore:					
  13:11887+7	99DB  0E03    					LD		C, $03
  14:11894+7	99DD  0619    					LD		B, $19
  15:11901+17	99DF  CDB3A0  					CALL	moveCursor
  16:11918+10	99E2  21449A  					LD		HL, scoreHUD
  17:11928+17	99E5  CD29A1  					CALL 	print
  18:11945+16	99E8  2A0089  					LD		HL, (score)
  19:11961+17	99EB  CDCEA0  					CALL	HLToDec
  20:11978+10	99EE  C9      					RET
  21:     -	99EF          	printLevel:					
  22:11988+7	99EF  0E03    					LD		C, $03
  23:11995+7	99F1  061A    					LD		B, $1A
  24:12002+17	99F3  CDB3A0  					CALL	moveCursor
  25:12019+10	99F6  214C9A  					LD		HL, levelHUD
  26:12029+17	99F9  CD29A1  					CALL 	print
  27:12046+16	99FC  2A0289  					LD		HL, (level)
  28:12062+17	99FF  CDCEA0  					CALL	HLToDec
  29:12079+10	9A02  C9      					RET
  30:				
  31:     -	9A03          	printLives:					
  32:12089+7	9A03  0E03    					LD		C, $03
  33:12096+7	9A05  061B    					LD		B, $1B
  34:12103+17	9A07  CDB3A0  					CALL	moveCursor
  35:12120+10	9A0A  21549A  					LD		HL, livesHUD
  36:12130+17	9A0D  CD29A1  					CALL 	print
  37:12147+13	9A10  3A0581  					LD 		A,(pacLives)
  38:12160+4	9A13  3D      					DEC		A
  39:12164+4	9A14  B7      					OR		A
  40:12168+10	9A15  CA219A  					JP		Z,removeOldLives
  41:12178+4	9A18  47      					LD		B,A
  42:12182+10	9A19  21B691  	printLivesLoop:	LD		HL, pacman
  43:12192+17	9A1C  CD29A1  					CALL 	print
  44:12209+8+5	9A1F  10F8    					DJNZ	printLivesLoop
  45:12217+10	9A21  21649A  	removeOldLives:	LD		HL, liveBlanking
  46:12227+17	9A24  CD29A1  					CALL 	print
  47:12244+10	9A27  C9      					RET
  48:				
  49:     -	9A28          	printFruit:					
  50:12254+7	9A28  0E03    					LD		C, $03
  51:12261+7	9A2A  061C    					LD		B, $1C
  52:12268+17	9A2C  CDB3A0  					CALL	moveCursor
  53:12285+10	9A2F  215C9A  					LD		HL, fruitHud
  54:12295+17	9A32  CD29A1  					CALL 	print
  55:12312+13	9A35  3A0489  					LD 		A,(fruits)
  56:12325+4	9A38  B7      					OR		A
  57:12329+5+6	9A39  C8      					RET		Z
  58:12334+4	9A3A  47      					LD		B,A
  59:12338+10	9A3B  21A1A1  	printFruitLoop:	LD		HL, superFruit
  60:12348+17	9A3E  CD29A1  					CALL 	print
  61:12365+8+5	9A41  10F8    					DJNZ	printFruitLoop
  62:12373+10	9A43  C9      					RET
  63:				
  64:     -	9A44  53636F72	scoreHUD:     	.BYTE "Score: ",0
	              653A2000
  65:     -	9A4C  4C657665	levelHUD:     	.BYTE "Level: ",0
	              6C3A2000
  66:     -	9A54  4C697665	livesHUD:     	.BYTE "Lives: ",0
	              733A2000
  67:     -	9A5C  46727569	fruitHud:     	.BYTE "Fruit: ",0
	              743A2000
  68:				
**** main.asm ****
  84:     -	9A64  20202000	liveBlanking	.BYTE "   ",0
  85:				
  86:				include countdown.asm
**** countdown.asm ****
   1:     -	9A68          	countdown:
   2:12383+10	9A68  010503  	            LD      BC ,0305H
   3:12393+10	9A6B  111218  				LD		DE ,1812H 
   4:12403+17	9A6E  CD44A1  				CALL	DrawBox
   5:12420+10	9A71  010704  	            LD      BC ,0407H
   6:12430+10	9A74  218C9D  	            LD      HL,number3
   7:12440+17	9A77  CD34A1  	            CALL    printAtPos
   8:12457+10	9A7A  01FFFF  	            LD      BC, 0FFFFH
   9:12467+17	9A7D  CD77A1  	            CALL    delay
  10:12484+17	9A80  CD77A1  	            CALL    delay
  11:12501+17	9A83  CD77A1  	            CALL    delay
  12:12518+17	9A86  CD77A1  	            CALL    delay
  13:12535+10	9A89  010704  	            LD      BC ,0407H
  14:12545+10	9A8C  21239C  	            LD      HL,number2
  15:12555+17	9A8F  CD34A1  	            CALL    printAtPos
  16:12572+10	9A92  01FFFF  	            LD      BC, 0FFFFH
  17:12582+17	9A95  CD77A1  	            CALL    delay
  18:12599+17	9A98  CD77A1  	            CALL    delay
  19:12616+17	9A9B  CD77A1  	            CALL    delay
  20:12633+17	9A9E  CD77A1  	            CALL    delay
  21:12650+10	9AA1  21BA9A  	            LD      HL,number1
  22:12660+10	9AA4  010704  	            LD      BC ,0407H
  23:12670+17	9AA7  CD34A1  	            CALL    printAtPos
  24:12687+10	9AAA  01FFFF  	            LD      BC, 0FFFFH
  25:12697+17	9AAD  CD77A1  	            CALL    delay
  26:12714+17	9AB0  CD77A1  	            CALL    delay
  27:12731+17	9AB3  CD77A1  	            CALL    delay
  28:12748+17	9AB6  CD77A1  	            CALL    delay
  29:12765+10	9AB9  C9      	            RET
  30:				
  31:				;Font 'doh'
  32:     -	9ABA  1B5B3933	number1:            .BYTE   1BH,"[93m      1111111       ",0,1
	              6D202020
	              20202031
	              31313131
	              31312020
	              20202020
	              200001
  33:     -	9AD5  20202020	                    .BYTE           "     1::::::1       ",0,1
	              20313A3A
	              3A3A3A3A
	              31202020
	              20202020
	              0001
  34:     -	9AEB  20202020	                    .BYTE           "    1:::::::1       ",0,1
	              313A3A3A
	              3A3A3A3A
	              31202020
	              20202020
	              0001
  35:     -	9B01  20202020	                    .BYTE           "    111:::::1       ",0,1
	              3131313A
	              3A3A3A3A
	              31202020
	              20202020
	              0001
  36:     -	9B17  20202020	                    .BYTE           "       1::::1       ",0,1
	              20202031
	              3A3A3A3A
	              31202020
	              20202020
	              0001
  37:     -	9B2D  20202020	                    .BYTE           "       1::::1       ",0,1
	              20202031
	              3A3A3A3A
	              31202020
	              20202020
	              0001
  38:     -	9B43  20202020	                    .BYTE           "       1::::1       ",0,1
	              20202031
	              3A3A3A3A
	              31202020
	              20202020
	              0001
  39:     -	9B59  20202020	                    .BYTE           "       1::::l       ",0,1
	              20202031
	              3A3A3A3A
	              6C202020
	              20202020
	              0001
  40:     -	9B6F  20202020	                    .BYTE           "       1::::l       ",0,1
	              20202031
	              3A3A3A3A
	              6C202020
	              20202020
	              0001
  41:     -	9B85  20202020	                    .BYTE           "       1::::l       ",0,1
	              20202031
	              3A3A3A3A
	              6C202020
	              20202020
	              0001
  42:     -	9B9B  20202020	                    .BYTE           "       1::::l       ",0,1
	              20202031
	              3A3A3A3A
	              6C202020
	              20202020
	              0001
  43:     -	9BB1  20202020	                    .BYTE           "       1::::l       ",0,1
	              20202031
	              3A3A3A3A
	              6C202020
	              20202020
	              0001
  44:     -	9BC7  20202020	                    .BYTE           "    111::::::111    ",0,1
	              3131313A
	              3A3A3A3A
	              3A313131
	              20202020
	              0001
  45:     -	9BDD  20202020	                    .BYTE           "    1::::::::::1    ",0,1
	              313A3A3A
	              3A3A3A3A
	              3A3A3A31
	              20202020
	              0001
  46:     -	9BF3  20202020	                    .BYTE           "    1::::::::::1    ",0,1
	              313A3A3A
	              3A3A3A3A
	              3A3A3A31
	              20202020
	              0001
  47:     -	9C09  20202020	                    .BYTE           "    111111111111    ", 1BH,"[0m",0,0
	              31313131
	              31313131
	              31313131
	              20202020
	              1B5B306D
	              0000
  48:				
  49:     -	9C23  1B5B3933	number2:            .BYTE   1BH,"[93m 222222222222222    ",0,1
	              6D203232
	              32323232
	              32323232
	              32323232
	              32202020
	              200001
  50:     -	9C3E  323A3A3A	                    .BYTE           "2:::::::::::::::22  ",0,1
	              3A3A3A3A
	              3A3A3A3A
	              3A3A3A3A
	              32322020
	              0001
  51:     -	9C54  323A3A3A	                    .BYTE           "2::::::222222:::::2 ",0,1
	              3A3A3A32
	              32323232
	              323A3A3A
	              3A3A3220
	              0001
  52:     -	9C6A  32323232	                    .BYTE           "2222222     2:::::2 ",0,1
	              32323220
	              20202020
	              323A3A3A
	              3A3A3220
	              0001
  53:     -	9C80  20202020	                    .BYTE           "            2:::::2 ",0,1
	              20202020
	              20202020
	              323A3A3A
	              3A3A3220
	              0001
  54:     -	9C96  20202020	                    .BYTE           "            2:::::2 ",0,1
	              20202020
	              20202020
	              323A3A3A
	              3A3A3220
	              0001
  55:     -	9CAC  20202020	                    .BYTE           "         2222::::2  ",0,1
	              20202020
	              20323232
	              323A3A3A
	              3A322020
	              0001
  56:     -	9CC2  20202020	                    .BYTE           "    22222::::::22   ",0,1
	              32323232
	              323A3A3A
	              3A3A3A32
	              32202020
	              0001
  57:     -	9CD8  20203232	                    .BYTE           "  22::::::::222     ",0,1
	              3A3A3A3A
	              3A3A3A3A
	              32323220
	              20202020
	              0001
  58:     -	9CEE  20323A3A	                    .BYTE           " 2:::::22222        ",0,1
	              3A3A3A32
	              32323232
	              20202020
	              20202020
	              0001
  59:     -	9D04  323A3A3A	                    .BYTE           "2:::::2             ",0,1
	              3A3A3220
	              20202020
	              20202020
	              20202020
	              0001
  60:     -	9D1A  323A3A3A	                    .BYTE           "2:::::2             ",0,1
	              3A3A3220
	              20202020
	              20202020
	              20202020
	              0001
  61:     -	9D30  323A3A3A	                    .BYTE           "2:::::2       222222",0,1
	              3A3A3220
	              20202020
	              20203232
	              32323232
	              0001
  62:     -	9D46  323A3A3A	                    .BYTE           "2::::::2222222:::::2",0,1
	              3A3A3A32
	              32323232
	              32323A3A
	              3A3A3A32
	              0001
  63:     -	9D5C  323A3A3A	                    .BYTE           "2::::::::::::::::::2",0,1
	              3A3A3A3A
	              3A3A3A3A
	              3A3A3A3A
	              3A3A3A32
	              0001
  64:     -	9D72  32323232	                    .BYTE           "22222222222222222222", 1BH,"[0m",0,0
	              32323232
	              32323232
	              32323232
	              32323232
	              1B5B306D
	              0000
  65:				
  66:     -	9D8C  1B5B3933	number3:            .BYTE   1BH,"[93m  333333333333333   ",0,1
	              6D202033
	              33333333
	              33333333
	              33333333
	              33332020
	              200001
  67:     -	9DA7  20333A3A	                    .BYTE           " 3:::::::::::::::33 ",0,1
	              3A3A3A3A
	              3A3A3A3A
	              3A3A3A3A
	              3A333320
	              0001
  68:     -	9DBD  20333A3A	                    .BYTE           " 3::::::33333::::::3",0,1
	              3A3A3A3A
	              33333333
	              333A3A3A
	              3A3A3A33
	              0001
  69:     -	9DD3  20333333	                    .BYTE           " 3333333     3:::::3",0,1
	              33333333
	              20202020
	              20333A3A
	              3A3A3A33
	              0001
  70:     -	9DE9  20202020	                    .BYTE           "             3:::::3",0,1
	              20202020
	              20202020
	              20333A3A
	              3A3A3A33
	              0001
  71:     -	9DFF  20202020	                    .BYTE           "             3:::::3",0,1
	              20202020
	              20202020
	              20333A3A
	              3A3A3A33
	              0001
  72:     -	9E15  20202020	                    .BYTE           "     33333333:::::3 ",0,1
	              20333333
	              33333333
	              333A3A3A
	              3A3A3320
	              0001
  73:     -	9E2B  20202020	                    .BYTE           "     3:::::::::::3  ",0,1
	              20333A3A
	              3A3A3A3A
	              3A3A3A3A
	              3A332020
	              0001
  74:     -	9E41  20202020	                    .BYTE           "     33333333:::::3 ",0,1
	              20333333
	              33333333
	              333A3A3A
	              3A3A3320
	              0001
  75:     -	9E57  20202020	                    .BYTE           "             3:::::3",0,1
	              20202020
	              20202020
	              20333A3A
	              3A3A3A33
	              0001
  76:     -	9E6D  20202020	                    .BYTE           "             3:::::3",0,1
	              20202020
	              20202020
	              20333A3A
	              3A3A3A33
	              0001
  77:     -	9E83  20202020	                    .BYTE           "             3:::::3",0,1
	              20202020
	              20202020
	              20333A3A
	              3A3A3A33
	              0001
  78:     -	9E99  20333333	                    .BYTE           " 3333333     3:::::3",0,1
	              33333333
	              20202020
	              20333A3A
	              3A3A3A33
	              0001
  79:     -	9EAF  20333A3A	                    .BYTE           " 3::::::33333::::::3",0,1
	              3A3A3A3A
	              33333333
	              333A3A3A
	              3A3A3A33
	              0001
  80:     -	9EC5  20333A3A	                    .BYTE           " 3:::::::::::::::33 ",0,1
	              3A3A3A3A
	              3A3A3A3A
	              3A3A3A3A
	              3A333320
	              0001
**** main.asm ****
  87:     -	9EDB  20203333	                    .BYTE           "  333333333333333   ", 1BH,"[0m",0,0
	              33333333
	              33333333
	              33333333
	              33202020
	              1B5B306D
	              0000
  88:				include titlescreen.asm
**** titlescreen.asm ****
   1:     -	9EF5          	displayTitleScreen:
   2:12775+10	9EF5  010603  	                LD      BC ,0306H
   3:12785+10	9EF8  111416  				    LD		DE ,1614H 
   4:12795+17	9EFB  CD44A1  				    CALL	DrawBox
   5:12812+10	9EFE  010804  	                LD      BC ,0408H
   6:12822+10	9F01  21399F  	                LD      HL,logo
   7:12832+17	9F04  CD34A1  	                CALL    printAtPos
   8:12849+10	9F07  010809  	                LD      BC ,0908H
   9:12859+10	9F0A  21C99F  	                LD      HL,info
  10:12869+17	9F0D  CD34A1  	                CALL    printAtPos
  11:12886+10	9F10  01080D  	                LD      BC ,0D08H
  12:12896+10	9F13  21DD9F  	                LD      HL,message
  13:12906+17	9F16  CD34A1  	                CALL    printAtPos
  14:12923+10	9F19  010A0F  	                LD      BC ,0F0AH
  15:12933+10	9F1C  21F19F  	                LD      HL,startGameMessage
  16:12943+17	9F1F  CD34A1  	                CALL    printAtPos
  17:12960+10	9F22  010810  	                LD      BC ,1008H
  18:12970+10	9F25  2101A0  	                LD      HL,exitMessage
  19:12980+17	9F28  CD34A1  	                CALL    printAtPos
  20:     -	9F2B          	titleScreenWaitForInput:
  21:12997+11	9F2B  D7      	                RST		10H
  22:13008+7	9F2C  FE31    	                CP      '1'
  23:13015+10	9F2E  CA1C90  	                JP      Z,startGame
  24:13025+7	9F31  FE32    	                CP      '2'
  25:13032+10	9F33  CA7F90  	                JP      Z,quit                     
  26:13042+10	9F36  C32B9F  	                JP      titleScreenWaitForInput
  27:				
  28:				;font graceful
  29:     -	9F39          	logo:
  30:     -	9F39  1B5B3931	                    .BYTE   1BH,"[91m ____ ",1BH,"[96m _  _   ",1BH,"[33m___ ",0,1
	              6D205F5F
	              5F5F201B
	              5B39366D
	              205F2020
	              5F202020
	              1B5B3333
	              6D5F5F5F
	              200001
  31:     -	9F5C  1B5B3931	                    .BYTE   1BH,"[91m(  _ \",1BH,"[96m/ )( \ ",1BH,"[33m/ __)",0,1
	              6D282020
	              5F205C1B
	              5B39366D
	              2F202928
	              205C201B
	              5B33336D
	              2F205F5F
	              290001
  32:     -	9F7F  1B5B3931	                    .BYTE   1BH,"[91m ) __/",1BH,"[96m) \/ (",1BH,"[33m( (__ ",0,1
	              6D202920
	              5F5F2F1B
	              5B39366D
	              29205C2F
	              20281B5B
	              33336D28
	              20285F5F
	              200001
  33:     -	9FA2  1B5B3931	                    .BYTE   1BH,"[91m(__)  ",1BH,"[96m\____/ ",1BH,"[33m\___)", 1BH,"[0m",0,0
	              6D285F5F
	              2920201B
	              5B39366D
	              5C5F5F5F
	              5F2F201B
	              5B33336D
	              5C5F5F5F
	              291B5B30
	              6D0000
  34:				
  35:     -	9FC9  6279204A	info:               .BYTE  "by James Bray 2020",0,0
	              616D6573
	              20427261
	              79203230
	              32300000
  36:				
  37:     -	9FDD  50726573	message:           .BYTE   "Press key to start",0,0
	              73206B65
	              7920746F
	              20737461
	              72740000
  38:     -	9FF1  28312920	startGameMessage:  .BYTE   "(1) Start Game",0,0
	              53746172
	              74204761
	              6D650000
**** main.asm ****
  89:     -	A001  28322920	exitMessage:       .BYTE   "(2) Exit to Prompt",0,0
	              45786974
	              20746F20
	              50726F6D
	              70740000
  90:				include gameOver.asm
**** gameOver.asm ****
   1:     -	A015          	displayGameOver:
   2:13052+10	A015  010406  	                LD      BC ,0604H
   3:13062+10	A018  110A1A  				    LD		DE ,1A0AH 
   4:13072+17	A01B  CD44A1  				    CALL	DrawBox
   5:13089+10	A01E  010507  	                LD      BC ,0705H
   6:13099+10	A021  2139A0  	                LD      HL,deathMessage1
   7:13109+17	A024  CD34A1  	                CALL    printAtPos
   8:13126+10	A027  01050D  	                LD      BC ,0D05H
   9:13136+10	A02A  2190A0  	                LD      HL,deathMessage2
  10:13146+17	A02D  CD34A1  	                CALL    printAtPos
  11:     -	A030          	gameOverwaitForInput:
  12:13163+11	A030  D7      	                RST		10H
  13:13174+7	A031  FE20    	                CP      ' '
  14:13181+10	A033  CA0790  	                JP      Z,gameTop                    
  15:13191+10	A036  C330A0  	                JP      gameOverwaitForInput
  16:				
  17:     -	A039          	deathMessage1:
  18:     -	A039  1B5B3931	                    .BYTE    1BH,"[91m __          _          ",0,1
	              6D205F5F
	              20202020
	              20202020
	              20205F20
	              20202020
	              20202020
	              200001
  19:     -	A058  2F5F5F20	                    .BYTE            "/__ _ __  _ / \    _  __",0,1
	              5F205F5F
	              20205F20
	              2F205C20
	              2020205F
	              20205F5F
	              0001
  20:     -	A072  5C5F7C28	                    .BYTE            "\_|(_||||(/_\_/\_/(/_ | ",1BH,"[0m",0,0
	              5F7C7C7C
	              7C282F5F
	              5C5F2F5C
	              5F2F282F
	              5F207C20
	              1B5B306D
	              0000
  21:				
**** main.asm ****
  91:     -	A090  50726573	deathMessage2:      .BYTE    "Press Space to continue!",0,0
	              73205370
	              61636520
	              746F2063
	              6F6E7469
	              6E756521
	              0000
  92:				
  93:				;------- Libs ------------;
  94:				include libs.asm
**** libs.asm ****
   1:     -	8888          	seed			.EQU	8888H		;Random seed
   2:				
   3:     -	A0AA          	newline:			
   4:13201+11	A0AA  F5      					push 	af
   5:13212+7	A0AB  3E0D    					ld		a, CR
   6:13219+11	A0AD  CF      					rst 	08H
   7:13230+7	A0AE  3E0A    					ld		a, LF
   8:13237+11	A0B0  CF      					rst 	08H
   9:13248+10	A0B1  F1      					pop 	af
  10:13258+10	A0B2  C9      					ret
  11:							
  12:				;move cursor to (C,B)				
  13:     -	A0B3          	moveCursor:		
  14:13268+11	A0B3  E5      					PUSH	HL
  15:13279+7	A0B4  3E1B    					LD		A,$1B
  16:13286+11	A0B6  CF      					RST     08H
  17:13297+7	A0B7  3E5B    					LD		A,'['
  18:13304+11	A0B9  CF      					RST     08H
  19:13315+4	A0BA  68      					LD		L,B
  20:13319+7	A0BB  2600    					LD		H,0
  21:13326+17	A0BD  CDCEA0  					CALL	HLToDec
  22:13343+7	A0C0  3E3B    					LD		A,$3B
  23:13350+11	A0C2  CF      					RST     08H
  24:13361+4	A0C3  69      					LD		L,C
  25:13365+7	A0C4  2600    					LD		H,0
  26:13372+17	A0C6  CDCEA0  					CALL	HLToDec
  27:13389+7	A0C9  3E66    					LD		A,'f'
  28:13396+11	A0CB  CF      					RST     08H
  29:13407+10	A0CC  E1      					POP		HL
  30:13417+10	A0CD  C9      					RET
  31:				
  32:				;Prints	hl as decimal			
  33:     -	A0CE          	HLToDec:
  34:13427+11	A0CE  F5      					PUSH	AF
  35:13438+11	A0CF  C5      					PUSH	BC
  36:13449+17	A0D0  CDD6A0  					CALL	DispHL
  37:13466+10	A0D3  C1      					POP		BC
  38:13476+10	A0D4  F1      					POP		AF
  39:13486+10	A0D5  C9      					RET
  40:     -	A0D6          	DispHL:
  41:13496+10	A0D6  01F0D8  					ld		bc,-10000
  42:13506+17	A0D9  CDEFA0  					call	Num1
  43:13523+10	A0DC  0118FC  					ld		bc,-1000
  44:13533+17	A0DF  CDEFA0  					call	Num1
  45:13550+10	A0E2  019CFF  					ld		bc,-100
  46:13560+17	A0E5  CDEFA0  					call	Num1
  47:13577+7	A0E8  0EF6    					ld		c,-10
  48:13584+17	A0EA  CDEFA0  					call	Num1
  49:13601+7	A0ED  0EFF    					ld		c,-1
  50:13608+7	A0EF  3E2F    	Num1:			ld		a,'0'-1
  51:13615+4	A0F1  3C      	Num2:			inc		a
  52:13619+11	A0F2  09      					add		hl,bc
  53:13630+7+5	A0F3  38FC    					jr		c,Num2
  54:13637+15	A0F5  ED42    					sbc		hl,bc
  55:13652+11	A0F7  CF      					RST     08H
  56:13663+10	A0F8  C9      					ret
  57:				;Print A as HEX				
  58:     -	A0F9          	NumToHex:    	
  59:13673+11	A0F9  C5      					push	bc
  60:13684+11	A0FA  F5      	                push    af
  61:13695+4	A0FB  4F      					ld 		c, a   		; a = number to convert
  62:13699+17	A0FC  CD08A1  	            	call 	Num1H
  63:13716+11	A0FF  CF      	            	RST     08H
  64:13727+4	A100  79      	            	ld 		a, c
  65:13731+17	A101  CD0CA1  	            	call 	Num2H
  66:13748+11	A104  CF      	            	RST     08H
  67:13759+10	A105  F1      	                pop     af
  68:13769+10	A106  C1      					pop		bc
  69:13779+10	A107  C9      	            	ret
  70:				
  71:13789+4	A108  1F      	Num1H:        	rra
  72:13793+4	A109  1F      	            	rra
  73:13797+4	A10A  1F      	            	rra
  74:13801+4	A10B  1F      	           		rra
  75:13805+7	A10C  F6F0    	Num2H:        	or 		$F0
  76:13812+4	A10E  27      	            	daa
  77:13816+7	A10F  C6A0    	            	add 	a, $A0
  78:13823+7	A111  CE40    	            	adc 	a, $40 		; Ascii hex at this point (0 to F)   
  79:13830+10	A113  C9      	            	ret
  80:				
  81:				;Get ABS of A
  82:     -	A114          	absA:
  83:13840+4	A114  B7      	     or a
  84:13844+5+6	A115  F0      	     ret p
  85:13849+8	A116  ED44    	     neg
  86:13857+10	A118  C9      	     ret
  87:				
  88:				;getArAndomA	 
  89:     -	A119          	randomA:				
  90:13867+13	A119  3A8888  					ld a, 	(seed)
  91:13880+4	A11C  47      					ld b, 	a 
  92:				
  93:13884+4	A11D  0F      					rrca ; multiply by 32
  94:13888+4	A11E  0F      					rrca
  95:13892+4	A11F  0F      					rrca
  96:13896+7	A120  EE1F    					xor $1f
  97:				
  98:13903+4	A122  80      					add 	a, b
  99:13907+7	A123  DEFF    					sbc a, 255 ; carry
 100:				
 101:13914+13	A125  328888  					ld (seed), a
 102:13927+10	A128  C9      					ret
 103:				
 104:				;------- Print string
 105:13937+11	A129  F5      	print:			PUSH 	AF				; Preserve AF				
 106:13948+7	A12A  7E      	printLoop:      LD      A,(HL)          ; Get character
 107:13955+4	A12B  B7      	                OR      A               ; Is it $00 ?
 108:13959+7+5	A12C  2804    	                JR     	Z,printRet      ; Then RETurn on terminator
 109:13966+11	A12E  CF      	                RST     08H             ; Print it
 110:13977+6	A12F  23      	                INC     HL              ; Next Character
 111:13983+12	A130  18F8    	                JR      printLoop       ; Continue until $00
 112:				
 113:13995+10	A132  F1      	printRet:		POP		AF
 114:14005+10	A133  C9      					RET
 115:				
 116:				;--------Print textBlockAtPos
 117:				;HL Start of sprite
 118:				;C  Sprite X
 119:				;B  Sprite Y
 120:				
 121:14015+11	A134  F5      	printAtPos:		PUSH 	AF					; Preserve AF				
 122:14026+17	A135  CDB3A0  	printAtPosLoop: CALL	moveCursor			; Move cursor to start of line
 123:14043+17	A138  CD29A1  					CALL	print				; Print Line
 124:14060+4	A13B  04      					INC		B
 125:14064+6	A13C  23      					INC		HL
 126:14070+7	A13D  7E      					LD      A,(HL)          	; Get character
 127:14077+4	A13E  B7      	                OR      A               	; Is it $00 ?
 128:14081+6	A13F  23      					INC		HL
 129:14087+7+5	A140  20F3    	                JR      NZ,printAtPosLoop   ; Continue until $00		
 130:14094+10	A142  F1      					POP		AF
 131:14104+10	A143  C9      					RET
 132:				
 133:				;------------Draw Box
 134:				;C Start X
 135:				;B Start Y
 136:				
 137:				;D Width
 138:				;E Height
 139:     -	A144          	drawBox:
 140:14114+4	A144  1D      					DEC		E
 141:14118+4	A145  1D      					DEC		E
 142:14122+17	A146  CDB3A0  					CALL	moveCursor			; Move cursor to start of line
 143:14139+11	A149  C5      					PUSH	BC
 144:14150+4	A14A  42      					LD		B,D
 145:14154+7	A14B  3E23    	topLineLoop:	LD		A,'#'
 146:14161+11	A14D  CF      					RST		08H
 147:14172+8+5	A14E  10FB    					DJNZ	topLineLoop			;Print Top line
 148:14180+4	A150  15      					DEC		D					;Remove padding for left and right bars
 149:14184+4	A151  15      					DEC		D
 150:14188+4	A152  43      					LD		B,E
 151:14192+4	A153  58      	boxBodyLoop:	LD		E,B
 152:14196+10	A154  C1      					POP		BC
 153:14206+4	A155  04      					INC		B
 154:14210+17	A156  CDB3A0  					CALL	moveCursor
 155:14227+11	A159  C5      					PUSH	BC
 156:14238+7	A15A  3E23    					LD		A,'#'
 157:14245+11	A15C  CF      					RST		08H
 158:14256+4	A15D  42      					LD		B,D
 159:14260+7	A15E  3E20    	boxContentLoop:	LD		A,' '
 160:14267+11	A160  CF      					RST		08H
 161:14278+8+5	A161  10FB    					DJNZ	boxContentLoop
 162:14286+7	A163  3E23    					LD		A,'#'
 163:14293+11	A165  CF      					RST		08H
 164:14304+4	A166  43      					LD		B,E
 165:14308+8+5	A167  10EA    					DJNZ	boxBodyLoop
 166:14316+10	A169  C1      					POP		BC
 167:14326+4	A16A  04      					INC		B
 168:14330+17	A16B  CDB3A0  					CALL	moveCursor			; Move cursor to start of line
 169:14347+4	A16E  14      					INC		D
 170:14351+4	A16F  14      					INC		D
 171:14355+4	A170  42      					LD		B,D
 172:14359+7	A171  3E23    	bottomLineLoop:	LD		A,'#'
 173:14366+11	A173  CF      					RST		08H
 174:14377+8+5	A174  10FB    					DJNZ	bottomLineLoop			;Print Top line
 175:14385+10	A176  C9      					RET		
 176:				;--------Delay
 177:     -	A177          	delay:
 178:14395+11	A177  C5      					PUSH	BC
 179:     -	A178          	delayLoop:
 180:14406+4	A178  00      					NOP
 181:14410+6	A179  0B      					DEC 	BC
 182:14416+4	A17A  78      					LD 		A,B
 183:14420+4	A17B  B1      					OR 		C
 184:14424+7+5	A17C  20FA    					JR 		NZ,delayLoop
 185:14431+10	A17E  C1      					POP		BC
**** main.asm ****
  95:14441+10	A17F  C9      					RET
  96:				
  97:				;Strings
  98:     -	A180  1B5B3334	wall:			.BYTE	1BH,"[34m#",1BH,"[0m",0
	              6D231B5B
	              306D00
  99:     -	A18B  1B5B3937	powerPellet:	.BYTE	1BH,"[97mo",1BH,"[0m",0
	              6D6F1B5B
	              306D00
 100:     -	A196  1B5B3337	pellet:			.BYTE	1BH,"[37m*",1BH,"[0m",0
	              6D2A1B5B
	              306D00
 101:     -	A1A1  1B5B3331	superFruit:		.BYTE	1BH,"[31m@",1BH,"[0m",0
	              6D401B5B
	              306D00
 102:     -	A1AC  2000    	void:			.BYTE	" ",0
 103:				
 104:     -	A1AE  1B5B4800	home:			.BYTE 1BH,"[H",0
 105:     -	A1B2  1B5B481B	cls:      	  	.BYTE 1BH,"[H",1BH,"[2J",0
	              5B324A00
 106:     -	A1BA  1B5B3F32	hideCursor:	  	.BYTE	1BH,"[?25l",0
	              356C00
 107:     -	A1C1  1B5B3F32	showCursor:	  	.BYTE	1BH,"[?25h",0
	              356800
 108:				
 109:				;----- Map ------
 110:				include map.asm
**** map.asm ****
   1:				;----- Map data bit positions
   2:     -	0000          	upBit			.EQU	0
   3:     -	0001          	downBit			.EQU	1
   4:     -	0002          	leftBit			.EQU	2
   5:     -	0003          	rightBit		.EQU	3
   6:     -	0004          	powerpBit		.EQU	4
   7:     -	0005          	pelletBit		.EQU	5
   8:     -	0006          	wallBit			.EQU	6
   9:     -	0007          	sfBit			.EQU	7
  10:				
  11:				;----Pellet
  12:     -	0040          	ww 		.EQU	40H
  13:				
  14:     -	002C          	hp 		.EQU	2CH		;left 	right	pellet
  15:     -	0023          	gp		.EQU	23H		;up		down	pellet
  16:				
  17:     -	0026          	lp		.EQU	26H		;down 	left 	pellet
  18:     -	002A          	rp		.EQU	2AH		;down 	right	pellet
  19:     -	0025          	up		.EQU	25H		;up 	left	pellet
  20:     -	0029          	dp		.EQU	29H		;up 	right	pellet
  21:				
  22:     -	002B          	bp		.EQU	2BH		;up		down	right	pellet
  23:     -	0027          	cp		.EQU	27H		;up		down	left	pellet
  24:     -	002E          	vp		.EQU	2EH		;down	left	right	pellet
  25:     -	002D          	kp		.EQU	2DH		;up		left	right	pellet
  26:				
  27:     -	002F          	xp		.EQU	2FH		;all	pellet
  28:				;------- No pellet
  29:     -	000C          	hn 		.EQU	0CH		;left 	right	pellet
  30:     -	0003          	gn		.EQU	03H		;up		down	pellet
  31:				
  32:     -	0006          	ln		.EQU	06H		;down 	left 	pellet
  33:     -	000A          	rn		.EQU	0AH		;down 	right	pellet
  34:     -	0005          	un		.EQU	05H		;up 	left	pellet
  35:     -	0009          	dn		.EQU	09H		;up 	right	pellet
  36:				
  37:     -	000B          	bn		.EQU	0BH		;up		down	right	pellet
  38:     -	0007          	cn		.EQU	07H		;up		down	left	pellet
  39:     -	000E          	vn		.EQU	0EH		;down	left	right	pellet
  40:     -	000D          	kn		.EQU	0DH		;up		left	right	pellet
  41:				
  42:     -	000F          	xn		.EQU	0FH		;all	pellet
  43:				;--------Power Pellet
  44:     -	001C          	hs 		.EQU	1CH		;left 	right	pellet
  45:     -	0013          	gs		.EQU	13H		;up		down	pellet
  46:				
  47:     -	0016          	ls		.EQU	16H		;down 	left 	pellet
  48:     -	001A          	rs		.EQU	1AH		;down 	right	pellet
  49:     -	0015          	us		.EQU	15H		;up 	left	pellet
  50:     -	0019          	ds		.EQU	19H		;up 	right	pellet
  51:				
  52:     -	001B          	bs		.EQU	1BH		;up		down	right	pellet
  53:     -	0017          	cs		.EQU	17H		;up		down	left	pellet
  54:     -	001E          	vs		.EQU	1EH		;down	left	right	pellet
  55:     -	001D          	ks		.EQU	1DH		;up		left	right	pellet
  56:				
  57:     -	001F          	xs		.EQU	1FH		;all	pellet
  58:				
  59:     -	A1C8  00004040	map:	.BYTE	00,00,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,00,00
	              40404040
	              40404040
	              40404040
	              40404040
	              40404040
	              40404040
	              40400000
  60:     -	A1E8  0000402A			.BYTE	00,00,ww,rp,hp,hp,hp,hp,vp,hp,hp,hp,hp,hp,lp,ww,ww,rp,hp,hp,hp,hp,hp,vp,hp,hp,hp,hp,lp,ww,00,00
	              2C2C2C2C
	              2E2C2C2C
	              2C2C2640
	              402A2C2C
	              2C2C2C2E
	              2C2C2C2C
	              26400000
  61:     -	A208  00004013			.BYTE	00,00,ww,gs,ww,ww,ww,ww,gp,ww,ww,ww,ww,ww,gp,ww,ww,gp,ww,ww,ww,ww,ww,gp,ww,ww,ww,ww,gs,ww,00,00
	              40404040
	              23404040
	              40402340
	              40234040
	              40404023
	              40404040
	              13400000
  62:     -	A228  00004023			.BYTE	00,00,ww,gp,ww,ww,ww,ww,gp,ww,ww,ww,ww,ww,gp,ww,ww,gp,ww,ww,ww,ww,ww,gp,ww,ww,ww,ww,gp,ww,00,00
	              40404040
	              23404040
	              40402340
	              40234040
	              40404023
	              40404040
	              23400000
  63:     -	A248  0000402B			.BYTE	00,00,ww,bp,hp,hp,hp,hp,xp,hp,hp,vp,hp,hp,kp,hp,hp,kp,hp,hp,vp,hp,hp,xp,hp,hp,hp,hp,cp,ww,00,00
	              2C2C2C2C
	              2F2C2C2E
	              2C2C2D2C
	              2C2D2C2C
	              2E2C2C2F
	              2C2C2C2C
	              27400000
  64:     -	A268  00004023			.BYTE	00,00,ww,gp,ww,ww,ww,ww,gp,ww,ww,gp,ww,ww,ww,ww,ww,ww,ww,ww,gp,ww,ww,gp,ww,ww,ww,ww,gp,ww,00,00
	              40404040
	              23404023
	              40404040
	              40404040
	              23404023
	              40404040
	              23400000
  65:     -	A288  00004029			.BYTE	00,00,ww,dp,hp,hp,hp,hp,cp,ww,ww,dp,hp,hp,lp,ww,ww,rp,hp,hp,up,ww,ww,bp,hp,hp,hp,hp,up,ww,00,00
	              2C2C2C2C
	              27404029
	              2C2C2640
	              402A2C2C
	              2540402B
	              2C2C2C2C
	              25400000
  66:     -	A2A8  00004040			.BYTE	00,00,ww,ww,ww,ww,ww,ww,gp,ww,ww,ww,ww,ww,gn,ww,ww,gn,ww,ww,ww,ww,ww,gp,ww,ww,ww,ww,ww,ww,00,00
	              40404040
	              23404040
	              40400340
	              40034040
	              40404023
	              40404040
	              40400000
  67:     -	A2C8  00000000			.BYTE	00,00,00,00,00,00,00,ww,gp,ww,ww,rn,hn,hn,kn,hn,hn,kn,hn,hn,ln,ww,ww,gp,ww,00,00,00,00,00,00,00
	              00000040
	              2340400A
	              0C0C0D0C
	              0C0D0C0C
	              06404023
	              40000000
	              00000000
  68:     -	A2E8  00000000			.BYTE	00,00,00,00,00,00,00,ww,gp,ww,ww,gn,ww,ww,ww,00,00,ww,ww,ww,gn,ww,ww,gp,ww,00,00,00,00,00,00,00
	              00000040
	              23404003
	              40404000
	              00404040
	              03404023
	              40000000
	              00000000
  69:     -	A308  40404040			.BYTE	ww,ww,ww,ww,ww,ww,ww,ww,gp,ww,ww,gn,ww,00,00,00,00,00,00,ww,gn,ww,ww,gp,ww,ww,ww,ww,ww,ww,ww,ww
	              40404040
	              23404003
	              40000000
	              00000040
	              03404023
	              40404040
	              40404040
  70:     -	A328  0C0C0C0C			.BYTE	hn,hn,hn,hn,hn,hn,hn,hn,xp,hn,hn,cn,ww,00,00,00,00,00,00,ww,bn,hn,hn,xp,hn,hn,hn,hn,hn,hn,hn,hn
	              0C0C0C0C
	              2F0C0C07
	              40000000
	              00000040
	              0B0C0C2F
	              0C0C0C0C
	              0C0C0C0C
  71:     -	A348  40404040			.BYTE	ww,ww,ww,ww,ww,ww,ww,ww,gp,ww,ww,gn,ww,00,00,00,00,00,00,ww,gn,ww,ww,gp,ww,ww,ww,ww,ww,ww,ww,ww
	              40404040
	              23404003
	              40000000
	              00000040
	              03404023
	              40404040
	              40404040
  72:     -	A368  00000000			.BYTE	00,00,00,00,00,00,00,ww,gp,ww,ww,gn,ww,ww,ww,ww,ww,ww,ww,ww,gn,ww,ww,gp,ww,00,00,00,00,00,00,00
	              00000040
	              23404003
	              40404040
	              40404040
	              03404023
	              40000000
	              00000000
  73:     -	A388  00000000			.BYTE	00,00,00,00,00,00,00,ww,gp,ww,ww,bn,hn,hn,hn,hn,hn,hn,hn,hn,cn,ww,ww,gp,ww,00,00,00,00,00,00,00
	              00000040
	              2340400B
	              0C0C0C0C
	              0C0C0C0C
	              07404023
	              40000000
	              00000000
  74:     -	A3A8  00004040			.BYTE	00,00,ww,ww,ww,ww,ww,ww,gp,ww,ww,gn,ww,ww,ww,ww,ww,ww,ww,ww,gn,ww,ww,gp,ww,ww,ww,ww,ww,ww,00,00
	              40404040
	              23404003
	              40404040
	              40404040
	              03404023
	              40404040
	              40400000
  75:     -	A3C8  0000402A			.BYTE	00,00,ww,rp,hp,hp,hp,hp,xp,hp,hp,kp,hp,hp,lp,ww,ww,rp,hp,hp,kp,hp,hp,xp,hp,hp,hp,hp,lp,ww,00,00
	              2C2C2C2C
	              2F2C2C2D
	              2C2C2640
	              402A2C2C
	              2D2C2C2F
	              2C2C2C2C
	              26400000
  76:     -	A3E8  00004023			.BYTE	00,00,ww,gp,ww,ww,ww,ww,gp,ww,ww,ww,ww,ww,gp,ww,ww,gp,ww,ww,ww,ww,ww,gp,ww,ww,ww,ww,gp,ww,00,00
	              40404040
	              23404040
	              40402340
	              40234040
	              40404023
	              40404040
	              23400000
  77:     -	A408  00004019			.BYTE	00,00,ww,ds,hp,lp,ww,ww,bp,hp,hp,vp,hp,hp,kp,hp,hp,kp,hp,hp,vp,hp,hp,cp,ww,ww,rp,hp,us,ww,00,00
	              2C264040
	              2B2C2C2E
	              2C2C2D2C
	              2C2D2C2C
	              2E2C2C27
	              40402A2C
	              15400000
  78:     -	A428  00004040			.BYTE	00,00,ww,ww,ww,gp,ww,ww,gp,ww,ww,gp,ww,ww,ww,ww,ww,ww,ww,ww,gp,ww,ww,gp,ww,ww,gp,ww,ww,ww,00,00
	              40234040
	              23404023
	              40404040
	              40404040
	              23404023
	              40402340
	              40400000
  79:     -	A448  0000402A			.BYTE	00,00,ww,rp,hp,kp,hp,hp,up,ww,ww,dp,hp,hp,lp,ww,ww,rp,hp,hp,up,ww,ww,dp,hp,hp,kp,hp,lp,ww,00,00
	              2C2D2C2C
	              25404029
	              2C2C2640
	              402A2C2C
	              25404029
	              2C2C2D2C
	              26400000
  80:     -	A468  00004023			.BYTE	00,00,ww,gp,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,gp,ww,ww,gp,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,gp,ww,00,00
	              40404040
	              40404040
	              40402340
	              40234040
	              40404040
	              40404040
	              23400000
  81:     -	A488  00004029			.BYTE	00,00,ww,dp,hp,hp,hp,hp,hp,hp,hp,hp,hp,hp,kp,hp,hp,kp,hp,hp,hp,hp,hp,hp,hp,hp,hp,hp,up,ww,00,00
	              2C2C2C2C
	              2C2C2C2C
	              2C2C2D2C
	              2C2D2C2C
	              2C2C2C2C
	              2C2C2C2C
	              25400000
  82:     -	A4A8  00004040			.BYTE	00,00,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,00,00
	              40404040
	              40404040
	              40404040
	              40404040
	              40404040
	              40404040
	              40400000
  83:     -	A4C8  00000000			.BYTE	00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
	              00000000
	              00000000
	              00000000
	              00000000
	              00000000
	              00000000
	              00000000
  84:     -	A4E8  00000000			.BYTE	00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
	              00000000
	              00000000
	              00000000
	              00000000
	              00000000
	              00000000
	              00000000
  85:     -	A508  00000000			.BYTE	00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
	              00000000
	              00000000
	              00000000
	              00000000
	              00000000
	              00000000
	              00000000
  86:     -	A528  00000000			.BYTE	00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
	              00000000
	              00000000
	              00000000
	              00000000
	              00000000
	              00000000
	              00000000
  87:     -	A548  00000000			.BYTE	00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
	              00000000
	              00000000
	              00000000
	              00000000
	              00000000
	              00000000
	              00000000
  88:     -	A568  00000000			.BYTE	00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
	              00000000
	              00000000
	              00000000
	              00000000
	              00000000
	              00000000
	              00000000
  89:     -	A588  00000000			.BYTE	00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
	              00000000
	              00000000
	              00000000
	              00000000
	              00000000
	              00000000
	              00000000
  90:     -	A5A8  00000000			.BYTE	00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
	              00000000
	              00000000
	              00000000
	              00000000
	              00000000
	              00000000
	              00000000
  91:				
  92:				; map:	.BYTE	00,00,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,00,00
  93:				; 		.BYTE	00,00,ww,rn,hn,hn,hn,hn,vn,hn,hn,hn,hn,hn,ln,ww,ww,rn,hn,hn,hn,hn,hn,vn,hn,hn,hn,hn,ln,ww,00,00
  94:				; 		.BYTE	00,00,ww,gn,ww,ww,ww,ww,gn,ww,ww,ww,ww,ww,gn,ww,ww,gn,ww,ww,ww,ww,ww,gn,ww,ww,ww,ww,gn,ww,00,00
  95:				; 		.BYTE	00,00,ww,gn,ww,ww,ww,ww,gn,ww,ww,ww,ww,ww,gn,ww,ww,gn,ww,ww,ww,ww,ww,gn,ww,ww,ww,ww,gn,ww,00,00
  96:				; 		.BYTE	00,00,ww,bn,hn,hn,hn,hn,xn,hn,hn,vn,hn,hn,kn,hn,hn,kn,hn,hn,vn,hn,hn,xn,hn,hn,hn,hn,cn,ww,00,00
  97:				; 		.BYTE	00,00,ww,gn,ww,ww,ww,ww,gn,ww,ww,gn,ww,ww,ww,ww,ww,ww,ww,ww,gn,ww,ww,gn,ww,ww,ww,ww,gn,ww,00,00
  98:				; 		.BYTE	00,00,ww,dn,hn,hn,hn,hn,cn,ww,ww,dn,hn,hn,ln,ww,ww,rn,hn,hn,un,ww,ww,bn,hn,hn,hn,hn,un,ww,00,00
  99:				; 		.BYTE	00,00,ww,ww,ww,ww,ww,ww,gn,ww,ww,ww,ww,ww,gn,ww,ww,gn,ww,ww,ww,ww,ww,gn,ww,ww,ww,ww,ww,ww,00,00
 100:				; 		.BYTE	00,00,00,00,00,00,00,ww,gn,ww,ww,rn,hn,hn,kn,hn,hn,kn,hn,hn,ln,ww,ww,gn,ww,00,00,00,00,00,00,00
 101:				; 		.BYTE	00,00,00,00,00,00,00,ww,gn,ww,ww,gn,ww,ww,ww,00,00,ww,ww,ww,gn,ww,ww,gn,ww,00,00,00,00,00,00,00
 102:				; 		.BYTE	ww,ww,ww,ww,ww,ww,ww,ww,gn,ww,ww,gn,ww,00,00,00,00,00,00,ww,gn,ww,ww,gn,ww,ww,ww,ww,ww,ww,ww,ww
 103:				; 		.BYTE	hn,hn,hn,hn,hn,hn,hn,hn,xn,hn,hn,cp,ww,00,00,00,00,00,00,ww,bn,hn,hn,xn,hn,hn,hn,hn,hn,hn,hn,hn
 104:				; 		.BYTE	ww,ww,ww,ww,ww,ww,ww,ww,gn,ww,ww,gn,ww,00,00,00,00,00,00,ww,gn,ww,ww,gn,ww,ww,ww,ww,ww,ww,ww,ww
 105:				; 		.BYTE	00,00,00,00,00,00,00,ww,gn,ww,ww,gn,ww,ww,ww,ww,ww,ww,ww,ww,gn,ww,ww,gn,ww,00,00,00,00,00,00,00
 106:				; 		.BYTE	00,00,00,00,00,00,00,ww,gn,ww,ww,bn,hn,hn,hn,hn,hn,hn,hn,hn,cn,ww,ww,gn,ww,00,00,00,00,00,00,00
 107:				; 		.BYTE	00,00,ww,ww,ww,ww,ww,ww,gn,ww,ww,gn,ww,ww,ww,ww,ww,ww,ww,ww,gn,ww,ww,gn,ww,ww,ww,ww,ww,ww,00,00
 108:				; 		.BYTE	00,00,ww,rn,hn,hn,hn,hn,xn,hn,hn,kn,hn,hn,ln,ww,ww,rn,hn,hn,kn,hn,hn,xn,hn,hn,hn,hn,ln,ww,00,00
 109:				; 		.BYTE	00,00,ww,gn,ww,ww,ww,ww,gn,ww,ww,ww,ww,ww,gn,ww,ww,gn,ww,ww,ww,ww,ww,gn,ww,ww,ww,ww,gn,ww,00,00
 110:				; 		.BYTE	00,00,ww,dn,hn,ln,ww,ww,bn,hn,hn,vn,hn,hn,kn,hn,hn,kn,hn,hn,vn,hn,hn,cn,ww,ww,rn,hn,un,ww,00,00
 111:				; 		.BYTE	00,00,ww,ww,ww,gn,ww,ww,gn,ww,ww,gn,ww,ww,ww,ww,ww,ww,ww,ww,gn,ww,ww,gn,ww,ww,gn,ww,ww,ww,00,00
 112:				; 		.BYTE	00,00,ww,rn,hn,kn,hn,hn,un,ww,ww,dn,hn,hn,ln,ww,ww,rn,hn,hn,un,ww,ww,dn,hn,hn,kn,hn,ln,ww,00,00
 113:				; 		.BYTE	00,00,ww,gn,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,gn,ww,ww,gn,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,gn,ww,00,00
 114:				; 		.BYTE	00,00,ww,dn,hn,hn,hn,hn,hn,hn,hn,hn,hn,hn,kn,hn,hn,kn,hn,hn,hn,hn,hn,hn,hn,hn,hn,hn,un,ww,00,00
 115:				; 		.BYTE	00,00,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,ww,00,00
 116:				; 		.BYTE	00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
 117:				; 		.BYTE	00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
 118:				; 		.BYTE	00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
 119:				; 		.BYTE	00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
 120:				; 		.BYTE	00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
 121:				; 		.BYTE	00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
 122:				; 		.BYTE	00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
**** main.asm ****
 111:				; 		.BYTE	00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
 112:				
 113:				;-----Path find map
 114:     -	D000          	pathFindMap	.EQU	0D000H
 115:				
**** main.asm ****
 116:     -	E000          	liveMap		.EQU	0E000H



Statistics:

     4	passes
     0	jr promotions
   322	symbols
  5576	bytes



Symbol Table:

absa            a114     
bn             =   b     
bottomlineloop  a171     
boxbodyloop     a153     
boxcontentloop  a15e     
bp             =  2b     
bs             =  1b     
calcnextmove    9155     
calculatemapcell 998d     
calculatemapd   9969     
calculatemapl   9975     
calculatemapr   9981     
calculatemapu   995d     
calculatepathmap 990f     
calculatepathmaploop 9921     
caughtjaletime =  20     
checkfruit      9812     
checkh          915f     
checkmap        9850     
checkmapchar    986b     
checkmaploop    985a     
checkmapnextline 9865     
checknextlevel  982a     
checkv          916d     
clearghost      91ce     
clearpm         90d2     
cls             a1b2     
cn             =   7     
colideghost     91e8     
countdown       9a68     
cp             =  27     
cr             =   d     
cs             =  17     
deathmessage1   a039     
deathmessage2   a090     
delay           a177     
delayloop       a178     
disphl          a0d6     
displaygameover a015     
displaytitlescreen 9ef5     
dn             =   9     
downbit        =   1     
dp             =  29     
drawbox         a144     
ds             =  19     
eatfruit        910f     
eatghost        9284     
eatpellet       90ff     
eatppellet      9131     
eatspellet      9125     
exitmessage     a001     
fruithud        9a5c     
fruits         =8904     
fruitticks     =  b0     
fruittimer     =8106     
fruitx         =   f     
fruity         =   e     
gameloop        903a     
gameoverwaitforinput a030     
gametop         9007     
getaddresspf    9878     
getmapaddress   97fa     
getmove         9139     
getpmmapdata    90f2     
ghostcheckstack 9260     
ghostdis       =8113     
ghostdostack    927f     
ghostmove       9222     
ghostmoved      923c     
ghostmovel      9248     
ghostmover      9254     
ghostmoveu      9230     
ghostnextmove   91c1     
gn             =   3     
gp             =  23     
gs             =  13     
hidecursor      a1ba     
hltodec         a0ce     
hn             =   c     
home            a1ae     
hp             =  2c     
hs             =  1c     
incrementde     9876     
info            9fc9     
initghost       91f5     
initlives      =   4     
initmap         97e9     
initpacman      90a4     
initpacx       =   e     
initpacy       =   e     
initpathfind    98f7     
initppfloop     98fe     
input           908a     
ismovevalid     97cf     
killpacman      9194     
kn             =   d     
kp             =  2d     
ks             =  1d     
leftbit        =   2     
level          =8902     
levelhud        9a4c     
lf             =   a     
liveblanking    9a64     
livemap        =e000     
liveshud        9a54     
ln             =   6     
logo            9f39     
lp             =  26     
ls             =  16     
map             a1c8     
message         9fdd     
move            97a9     
movecursor      a0b3     
moved           97bd     
movedvalid      97e0     
moveghost       9202     
movel           97c3     
movelvalid      97e3     
movepm          917d     
movepma         9188     
mover           97c9     
movervalid      97e6     
moveu           97b7     
moveuvalid      97dd     
newline         a0aa     
nextmovevalid   914e     
num1            a0ef     
num1h           a108     
num2            a0f1     
num2h           a10c     
number1         9aba     
number2         9c23     
number3         9d8c     
numtohex        a0f9     
oghost          9506     
oghostcheckd    9476     
oghostcheckl    9484     
oghostcheckr    9492     
oghostchecku    9468     
oghostclear     93d0     
oghostcolide    94cc     
oghostdectimer  942d     
oghostdir      =8122     
oghostinit      9404     
oghostinittimer=  20     
oghostinitx    =   f     
oghostinity    =   8     
oghostmapdata   93f7     
oghostmove      9414     
oghostnextmove  943e     
oghostpathfind  94a0     
oghostpfpp      94b7     
oghostprint     93dc     
oghostsetnewdir 94c3     
oghoststack     94f8     
oghoststorex   =   f     
oghoststorey   =   b     
oghosttimer    =8125     
oghostx        =8120     
oghosty        =8121     
oldstackpointer=89f0     
originalbc     =89f2     
paccdir        =8102     
paclives       =8105     
pacman          91b6     
pacndir        =8103     
pacx           =8100     
pacy           =8101     
pathfinddepth  =  30     
pathfindmap    =d000     
pellet          a196     
pelletbit      =   5     
pfnextrow       9908     
pghost          9647     
pghostcheckd    95b7     
pghostcheckl    95c5     
pghostcheckr    95d3     
pghostchecku    95a9     
pghostclear     9511     
pghostcolide    960d     
pghostdectimer  956e     
pghostdir      =8132     
pghostinit      9545     
pghostinittimer=  30     
pghostinitx    =   f     
pghostinity    =   8     
pghostmapdata   9538     
pghostmove      9555     
pghostnextmove  957f     
pghostpathfind  95e1     
pghostpfpp      95f8     
pghostprint     951d     
pghostsetnewdir 9604     
pghoststack     9639     
pghoststorex   =  10     
pghoststorey   =   b     
pghosttimer    =8135     
pghostx        =8130     
pghosty        =8131     
pmchar          98ba     
pmcharret       98f5     
pmloop          98a6     
pmnextline      98b4     
pmpfafterskip   99b2     
pmpfloop        99a9     
pmpfnextline    99bf     
pmpfskip        99c5     
powerpbit      =   4     
powerpellet     a18b     
ppactive       =8104     
ppellettics    =  20     
print           a129     
printatpos      a134     
printatposloop  a135     
printfruit      9a28     
printfruitloop  9a3b     
printghost      91db     
printhud        99ce     
printlevel      99ef     
printlives      9a03     
printlivesloop  9a19     
printloop       a12a     
printmap        989f     
printmapat      9890     
printp          98d5     
printpfmap      9999     
printpm         90de     
printpp         98cd     
printret        a132     
printscore      99db     
printsf         98e5     
printsghost     920f     
printvoid       98ed     
printwall       98dd     
quit            907f     
randoma         a119     
removeoldlives  9a21     
resetpacman     90ba     
rghost          93c5     
rghostcheckd    9335     
rghostcheckl    9343     
rghostcheckr    9351     
rghostchecku    9327     
rghostclear     928f     
rghostcolide    938b     
rghostdectimer  92ec     
rghostdir      =8112     
rghostinit      92c3     
rghostinittimer=  10     
rghostinitx    =   f     
rghostinity    =   8     
rghostmapdata   92b6     
rghostmove      92d3     
rghostnextmove  92fd     
rghostpathfind  935f     
rghostpfpp      9376     
rghostprint     929b     
rghostsetnewdir 9382     
rghoststack     93b7     
rghoststorex   =   e     
rghoststorey   =   b     
rghosttimer    =8115     
rghostx        =8110     
rghosty        =8111     
rightbit       =   3     
rn             =   a     
rp             =  2a     
rs             =  1a     
score          =8900     
scorehud        9a44     
seed           =8888     
sfbit          =   7     
sghost0         9793     
sghost1         979e     
sghost1print    921b     
showcursor      a1c1     
startgame       901c     
startgamemessage 9ff1     
superfruit      a1a1     
tghost          9788     
tghostcheckd    96f8     
tghostcheckl    9706     
tghostcheckr    9714     
tghostchecku    96ea     
tghostclear     9652     
tghostcolide    974e     
tghostdectimer  96af     
tghostdir      =8142     
tghostinit      9686     
tghostinittimer=  40     
tghostinitx    =   f     
tghostinity    =   8     
tghostmapdata   9679     
tghostmove      9696     
tghostnextmove  96c0     
tghostpathfind  9722     
tghostpfpp      9739     
tghostprint     965e     
tghostsetnewdir 9745     
tghoststack     977a     
tghoststorex   =  11     
tghoststorey   =   b     
tghosttimer    =8145     
tghostx        =8140     
tghosty        =8141     
titlescreenwaitforinput 9f2b     
toplineloop     a14b     
un             =   5     
up             =  25     
upbit          =   0     
us             =  15     
validinput      90a0     
vn             =   e     
void            a1ac     
vp             =  2e     
vs             =  1e     
wall            a180     
wallbit        =   6     
ww             =  40     
xn             =   f     
xp             =  2f     
xs             =  1f     
